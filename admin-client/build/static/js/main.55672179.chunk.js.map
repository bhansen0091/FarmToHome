{"version":3,"sources":["HOC/PrivateRoute.js","components/Navbar/MenuItems.jsx","redux/constants/adminConstants.js","components/Navbar/NavBar.jsx","helpers/axios.js","urlConfig.js","redux/actions/adminAuth.actions.js","components/Layout/Layout.jsx","components/UI/Inputs/InputDefault.jsx","views/RegisterScreen/RegisterScreen.jsx","redux/actions/category.actions.js","components/CategoryForm/CategoryForm.jsx","components/CategoryComponents/EditCategoryModal/EditCategoryModal.jsx","components/CategoryComponents/AddCategoryModal/AddCategoryModal.jsx","components/CategoryComponents/DeleteCategoryModal/DeleteCategoryModal.jsx","views/CategoryScreen/CategoryScreen.jsx","redux/actions/initialData.actions.js","views/ProductsScreen/ProductScreen.jsx","redux/actions/product.actions.js","views/LoginScreen/LoginScreen.jsx","views/HomeScreen/HomeScreen.jsx","views/OrdersScreen/OrdersScreen.jsx","App.jsx","redux/reducers/adminReducer.js","redux/reducers/category.reducer.js","redux/reducers/product.reducer.js","redux/store.js","index.js"],"names":["PrivateRoute","Component","component","rest","props","localStorage","getItem","to","NoLogMenuItems","title","url","cName","ADMIN_LOGIN_REQUEST","ADMIN_LOGIN_SUCCESS","ADMIN_LOGIN_FAIL","ADMIN_LOGOUT_REQUEST","ADMIN_LOGOUT_SUCCESS","ADMIN_LOGOUT_FAIL","ADMIN_REGISTRATION_REQUEST","ADMIN_REGISTRATION_SUCCESS","ADMIN_REGISTRATION_FAIL","GET_ALL_CATEGORIES_REQUEST","GET_ALL_CATEGORIES_SUCCESS","ADD_NEW_CATEGORY_REQUEST","ADD_NEW_CATEGORY_SUCCESS","ADD_NEW_CATEGORY_FAIL","UPDATE_CATEGORIES_REQUEST","UPDATE_CATEGORIES_SUCCESS","UPDATE_CATEGORIES_FAIL","DELETE_CATEGORIES_REQUEST","DELETE_CATEGORIES_SUCCESS","DELETE_CATEGORIES_FAIL","GET_ALL_PRODUCTS_REQUEST","GET_ALL_PRODUCTS_SUCCESS","NavBar","axios","create","baseURL","auth","useSelector","state","dispatch","useDispatch","useState","clicked","setClicked","className","onClick","authenticate","a","type","actionTypes","token","post","withCredentials","then","res","status","clear","payload","data","error","catch","err","console","log","response","map","item","idx","Layout","sidebar","Container","fluid","Row","Col","md","exact","children","InputDefault","Form","Label","label","Control","name","placeholder","value","onChange","RegisterScreen","regAuth","initialReg","firstName","lastName","email","password","confirmPassword","contactNumber","street1","street2","city","addressState","zip","reg","setReg","regError","setRegError","handleRegInputs","e","target","useEffect","errorMessage","loading","style","marginTop","onSubmit","preventDefault","user","message","register","Group","display","justifyContent","Text","as","controlId","Button","variant","getAllCategories","get","categoryList","CategoryForm","inputs","handleInputChangeName","handleInputChangeParentId","categorySelectOptions","parentId","option","EditCategoryModal","show","size","onHide","expandedArray","checkedArray","handleEditCategoryInputs","handleClose","handleUpdate","Modal","aria-labelledby","centered","backdrop","keyboard","Header","closeButton","Title","Body","length","paddingLeft","expandedItem","checkedItem","AddCategoryModal","handleInputs","category","handleCreate","DeleteCategoryModal","deleteCategories","CategoryScreen","categoryState","_id","setCategory","checked","setChecked","expanded","setExpanded","setCheckedArray","setExpandedArray","setShow","showUpdateModal","setUpdateUpdateModal","handleCloseUpdateModal","deleteWarningModal","setDeleteWarningModal","handleCloseDeleteWarning","updateCheckedAndExpandedArray","categories","generateCategoryList","checkedArr","expandedArr","forEach","categoryId","find","_idx","push","createCategorySelectOptions","options","nodes","renderCategories","myCategories","onCheck","onExpand","icons","check","uncheck","halfCheck","expandClose","expandOpen","cate","alert","addCategory","key","index","updatedCheckedArray","updatedExpandedArray","updateMultipleCategories","ids","checkedIdArray","getInitialData","products","ProductScreen","productState","description","price","measurement","productImage","inStock","product","setProduct","handleShow","handleProductInputs","files","handleSave","form","FormData","append","addProduct","productModal","setProductModal","productDetails","setProductDetails","handleShowProductModal","handleCloseShowProductModal","sticky","Table","striped","responsive","fontSize","p","toFixed","marginBottom","Check","readOnly","src","alt","LoginScreen","setLog","logError","setLogError","handleLogInputs","span","offset","setItem","JSON","stringify","login","HomeScreen","OrdersScreen","App","parse","path","initialState","role","authenticating","regInitialState","buildNewCategoryList","newCategoryList","undefined","cat","newCategory","errors","middleware","thunk","reducer","combineReducers","action","updatedCats","store","createStore","composeWithDevTools","applyMiddleware","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.55672179.chunk.js","sourcesContent":["import { Route, Redirect } from \"react-router-dom\";\r\n\r\n\r\nconst PrivateRoute = ({component: Component, ...rest}) => {\r\n    return (\r\n        <Route {...rest} component={(props) => {\r\n            const token = localStorage.getItem('token');\r\n            if (token) {\r\n                return <Component {...props} />\r\n            } else {\r\n                return <Redirect to={'/login'} />\r\n            }\r\n        }}/>\r\n    );\r\n};\r\n\r\nexport default PrivateRoute;","\r\n\r\nexport const NoLogMenuItems = [\r\n    {\r\n        title: 'Login',\r\n        url: 'login',\r\n        cName: 'nav-links'\r\n    },\r\n    {\r\n        title: 'Register',\r\n        url: 'register',\r\n        cName: 'nav-links'\r\n    }\r\n];\r\n\r\n// export const LoggedMenuItems = [\r\n//     {\r\n//         title: 'Home',\r\n//         url: '/',\r\n//         cName: 'nav-links'\r\n//     },\r\n//     {\r\n//         title: 'Logout',\r\n//         url: 'logout',\r\n//         cName: 'nav-links'\r\n//     },\r\n// ];","\r\n// ~~~~~~~~~~~~~~~~~~ Admin User ~~~~~~~~~~~~~~~~~~\r\n\r\n// Admin Login\r\nexport const ADMIN_LOGIN_REQUEST = \"ADMIN_LOGIN_REQUEST\";\r\nexport const ADMIN_LOGIN_SUCCESS = \"ADMIN_LOGIN_SUCCESS\";\r\nexport const ADMIN_LOGIN_FAIL = \"ADMIN_LOGIN_FAIL\";\r\n\r\n// Admin Logout\r\nexport const ADMIN_LOGOUT_REQUEST = \"ADMIN_LOGOUT_REQUEST\";\r\nexport const ADMIN_LOGOUT_SUCCESS = \"ADMIN_LOGOUT_SUCCESS\";\r\nexport const ADMIN_LOGOUT_FAIL = \"ADMIN_LOGOUT_FAIL\";\r\n\r\n// Admin Registration\r\nexport const ADMIN_REGISTRATION_REQUEST = \"ADMIN_REGISTRATION_REQUEST\";\r\nexport const ADMIN_REGISTRATION_SUCCESS = \"ADMIN_REGISTRATION_SUCCESS\";\r\nexport const ADMIN_REGISTRATION_FAIL = \"ADMIN_REGISTRATION_FAIL\";\r\n\r\n// ~~~~~~~~~~~~~~~~~~ Categories ~~~~~~~~~~~~~~~~~~\r\n\r\n// Get Categories\r\nexport const GET_ALL_CATEGORIES_REQUEST = \"GET_ALL_CATEGORIES_REQUEST\";\r\nexport const GET_ALL_CATEGORIES_SUCCESS = \"GET_ALL_CATEGORIES_SUCCESS\";\r\nexport const GET_ALL_CATEGORIES_FAIL = \"GET_ALL_CATEGORIES_FAIL\";\r\n\r\n// Create Category\r\nexport const ADD_NEW_CATEGORY_REQUEST = \"ADD_NEW_CATEGORY_REQUEST\";\r\nexport const ADD_NEW_CATEGORY_SUCCESS = \"ADD_NEW_CATEGORY_SUCCESS\";\r\nexport const ADD_NEW_CATEGORY_FAIL = \"ADD_NEW_CATEGORY_FAIL\";\r\n\r\n// Update Categories\r\nexport const UPDATE_CATEGORIES_REQUEST = \"UPDATE_CATEGORIES_REQUEST\";\r\nexport const UPDATE_CATEGORIES_SUCCESS = \"UPDATE_CATEGORIES_SUCCESS\";\r\nexport const UPDATE_CATEGORIES_FAIL = \"UPDATE_CATEGORIES_FAIL\";\r\n\r\n// Delete Categories\r\nexport const DELETE_CATEGORIES_REQUEST = \"DELETE_CATEGORIES_REQUEST\";\r\nexport const DELETE_CATEGORIES_SUCCESS = \"DELETE_CATEGORIES_SUCCESS\";\r\nexport const DELETE_CATEGORIES_FAIL = \"DELETE_CATEGORIES_FAIL\";\r\n\r\n// ~~~~~~~~~~~~~~~~~~ Products ~~~~~~~~~~~~~~~~~~\r\n\r\n// Get Products\r\nexport const GET_ALL_PRODUCTS_REQUEST = \"GET_ALL_PRODUCTS_REQUEST\";\r\nexport const GET_ALL_PRODUCTS_SUCCESS = \"GET_ALL_PRODUCTS_SUCCESS\";\r\nexport const GET_ALL_PRODUCTS_FAIL = \"GET_ALL_PRODUCTS_FAIL\";\r\n\r\n// Create Products\r\nexport const ADD_NEW_PRODUCT_REQUEST = \"ADD_NEW_PRODUCT_REQUEST\";\r\nexport const ADD_NEW_PRODUCT_SUCCESS = \"ADD_NEW_PRODUCT_SUCCESS\";\r\nexport const ADD_NEW_PRODUCT_FAIL = \"ADD_NEW_PRODUCT_FAIL\";\r\n\r\n// ~~~~~~~~~~~~~~~~~~ Initial Data ~~~~~~~~~~~~~~~~~~\r\n\r\n// Get Initial Data\r\nexport const GET_INITIAL_DATA_REQUEST = \"GET_INITIAL_DATA_REQUEST\";\r\nexport const GET_INITIAL_DATA_SUCCESS = \"GET_INITIAL_DATA_SUCCESS\";\r\nexport const GET_INITIAL_DATA_FAIL = \"GET_INITIAL_DATA_FAIL\";\r\n","import { useState } from \"react\";\r\nimport './Navbar.css';\r\n\r\n// Routing\r\nimport { Link } from 'react-router-dom'\r\n\r\n// Components\r\nimport { NoLogMenuItems } from './MenuItems';\r\n\r\n// Redux\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { logout } from '../../redux/actions/adminAuth.actions'\r\n\r\nconst NavBar = () => {\r\n\r\n    const auth = useSelector(state => state.auth);\r\n    const dispatch = useDispatch();\r\n\r\n    const [clicked, setClicked] = useState(false)\r\n    const handleClick = () => {\r\n        if (clicked) {\r\n            setClicked(false)\r\n        } else {\r\n            setClicked(true)\r\n        }\r\n    }\r\n\r\n    const handleLogout = () => {\r\n        dispatch(logout())\r\n    }\r\n\r\n    return (\r\n        <nav className=\"NavbarItems\">\r\n            <div className=\"navbar-logo\">\r\n                <Link to='/' className=\"navbar-logo-link\"><h2>Admin</h2></Link>\r\n            </div>\r\n            <div className=\"menu-icon\" onClick={handleClick}>\r\n                <i className={clicked ? 'fas fa-times' : 'fas fa-bars'}></i>\r\n            </div>\r\n            <ul className={clicked ? 'nav-menu active' : 'nav-menu'}>\r\n                {\r\n                    !auth.authenticate\r\n                        ? NoLogMenuItems.map((item, idx) => {\r\n                            return (\r\n                                <Link key={idx} className={item.cName} to={item.url}>{item.title}</Link>\r\n                            )\r\n                        })\r\n                        : <>\r\n                            <Link className=\"nav-links\" to='/'>Home</Link>\r\n                            <li>\r\n                                <span onClick={handleLogout} className=\"nav-links\">Logout</span>\r\n                            </li>\r\n                        </>\r\n                }\r\n            </ul>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default NavBar;","import axios from 'axios';\r\nimport { api } from '../urlConfig';\r\n\r\nconst axiosInstance = axios.create({\r\n    baseURL: api\r\n})\r\n\r\nexport default axiosInstance;","\r\n\r\n\r\nexport const api = 'http://localhost:8000/api'\r\n\r\n","import * as actionTypes from '../constants/adminConstants';\r\nimport axios from 'axios';\r\nimport axiosInstance from '../../helpers/axios';\r\n\r\n\r\nexport const register = (user) => {\r\n    return async (dispatch) => {\r\n\r\n        dispatch({\r\n            type: actionTypes.ADMIN_REGISTRATION_REQUEST,\r\n            payload: {\r\n                ...user\r\n            }\r\n        });\r\n\r\n        await axios.post(`http://localhost:8000/api/admin/register`, { ...user }, { withCredentials: true })\r\n            .then(res => {\r\n                // console.log(res.data);\r\n                if (res.data.message) {\r\n                    const { message } = res.data;\r\n                    // console.log(message);\r\n                    dispatch({\r\n                        type: actionTypes.ADMIN_REGISTRATION_SUCCESS,\r\n                        payload: {\r\n                            message\r\n                        }\r\n                    })\r\n                } else {\r\n                    // console.log(\"number 1\");\r\n                    dispatch({\r\n                        type: actionTypes.ADMIN_REGISTRATION_FAIL,\r\n                        payload: {\r\n                            error: res.data\r\n                        }\r\n                    })\r\n                }\r\n            })\r\n            .catch(err => {\r\n                // console.log(\"number 2\");\r\n                // if (err) {\r\n                //     console.log(err.response.data.error);\r\n                // }\r\n                dispatch({\r\n                    type: actionTypes.ADMIN_REGISTRATION_FAIL,\r\n                    payload: {\r\n                        error: err.response.data.error\r\n                    }\r\n                })\r\n            })\r\n    }\r\n}\r\n\r\n\r\nexport const login = (user) => {\r\n    return async (dispatch) => {\r\n\r\n        dispatch({\r\n            type: actionTypes.ADMIN_LOGIN_REQUEST,\r\n            payload: {\r\n                ...user\r\n            }\r\n        });\r\n\r\n        await axios.post(`http://localhost:8000/api/admin/login`, { ...user }, { withCredentials: true })\r\n            .then(res => {\r\n                // console.log(res.data);\r\n                if (res.data.message) {\r\n                    const { token, user } = res.data;\r\n                    localStorage.setItem('token', token);\r\n                    localStorage.setItem('user', JSON.stringify(user));\r\n                    dispatch({\r\n                        type: actionTypes.ADMIN_LOGIN_SUCCESS,\r\n                        payload: {\r\n                            token, user\r\n                        }\r\n                    })\r\n                } else {\r\n                    // console.log(res.data);\r\n                    dispatch({\r\n                        type: actionTypes.ADMIN_LOGIN_FAIL,\r\n                        payload: res.data\r\n                    })\r\n                }\r\n            })\r\n            .catch(err => {\r\n                // console.log(err.response.data);\r\n                dispatch({\r\n                    type: actionTypes.ADMIN_LOGIN_FAIL,\r\n                    payload: err.response.data\r\n                })\r\n            })\r\n    }\r\n}\r\n\r\nexport const isUserLoggedIn = () => {\r\n    return async (dispatch) => {\r\n        const token = localStorage.getItem('token');\r\n        if (token) {\r\n            const user = JSON.parse(localStorage.getItem('user'));\r\n            dispatch({\r\n                type: actionTypes.ADMIN_LOGIN_SUCCESS,\r\n                payload: {\r\n                    token, user\r\n                }\r\n            })\r\n        }\r\n        // else {\r\n        //     dispatch({\r\n        //         type: actionTypes.ADMIN_LOGIN_FAIL,\r\n        //         payload: {\r\n        //             error: 'Failed to login.' \r\n        //         }\r\n        //     })\r\n        // }\r\n    }\r\n}\r\n\r\nexport const logout = () => {\r\n    return async (dispatch) => {\r\n\r\n        dispatch({\r\n            type: actionTypes.ADMIN_LOGOUT_REQUEST\r\n        });\r\n\r\n        const token = localStorage.getItem('token');\r\n\r\n        await axios.post(`http://localhost:8000/api/admin/logout`, token, { withCredentials: true })\r\n            .then(res => {\r\n                if (res.status === 200) {\r\n                    // console.log(\"success\");\r\n                    localStorage.clear();\r\n                    dispatch({\r\n                        type: actionTypes.ADMIN_LOGOUT_SUCCESS\r\n                    });\r\n                } else {\r\n                    dispatch({\r\n                        type: actionTypes.ADMIN_LOGOUT_FAIL,\r\n                        payload: res.data.error\r\n                    });\r\n                }\r\n            })\r\n            .catch(err => {\r\n                console.log(err.response.data);\r\n                dispatch({\r\n                    type: actionTypes.ADMIN_LOGOUT_FAIL,\r\n                    payload: err.response.data\r\n                })\r\n            })\r\n    }\r\n}\r\n\r\n","import React from 'react';\r\n\r\n// Routing\r\nimport { NavLink } from 'react-router-dom';\r\n\r\n// CSS\r\nimport './Layout.css';\r\n\r\n// Bootstrap Components\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\n\r\n// Components\r\nimport NavBar from '../Navbar/NavBar';\r\n\r\nconst Layout = (props) => {\r\n    return (\r\n        <>\r\n            <NavBar />\r\n            {\r\n                props.sidebar\r\n                    ? <Container fluid>\r\n                        <Row>\r\n                            <Col md={2} className=\"sidebar pt-2\">\r\n\r\n                                <ul className=\"sidebar-nav-list\">\r\n                                    <li className=\"sidebar-links\"><NavLink exact to={`/`}>Home</NavLink></li>\r\n                                    <li className=\"sidebar-links\"><NavLink to={`/categories`}>Categories</NavLink></li>\r\n                                    <li className=\"sidebar-links\"><NavLink to={`/products`}>Products</NavLink></li>\r\n                                    <li className=\"sidebar-links\"><NavLink to={`/orders`}>Orders</NavLink></li>\r\n                                </ul>\r\n                            </Col>\r\n                            <Col md={10} className=\"main-container pt-2\">\r\n                                {props.children}\r\n                            </Col>\r\n                        </Row>\r\n                    </Container>\r\n                    : props.children\r\n            }\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Layout;","import { Form, Col } from 'react-bootstrap';\r\n\r\n\r\n/**\r\n * @author\r\n * @function InputDefault\r\n */\r\n\r\nconst InputDefault = (props) => {\r\n    return (\r\n        <>\r\n            <Form.Label>{props.label}</Form.Label>\r\n            <Form.Control\r\n                type={props.type}\r\n                name={props.name}\r\n                placeholder={props.placeholder}\r\n                value={props.value}\r\n                onChange={props.onChange}\r\n            />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default InputDefault;\r\n\r\n\r\n//  controlId: formBasic{field-type-here} / formGridText{field-type-here}","import { Redirect } from 'react-router-dom';\r\nimport React, { useEffect, useState } from 'react';\r\n\r\n// Bootstrap Components\r\nimport { Container, Row, Form, Col, Button } from 'react-bootstrap';\r\n\r\n// Components\r\nimport Layout from '../../components/Layout/Layout';\r\nimport InputDefault from '../../components/UI/Inputs/InputDefault';\r\n\r\n// Redux\r\nimport { register } from '../../redux/actions/adminAuth.actions';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nconst RegisterScreen = () => {\r\n\r\n    const auth = useSelector(state => state.auth);\r\n    const regAuth = useSelector(state => state.regAuth);\r\n    const dispatch = useDispatch();\r\n\r\n    const initialReg = {\r\n        firstName: \"\",\r\n        lastName: \"\",\r\n        email: \"\",\r\n        password: \"\",\r\n        confirmPassword: \"\",\r\n        contactNumber: \"\",\r\n        street1: \"\",\r\n        street2: \"\",\r\n        city: \"\",\r\n        addressState: \"\",\r\n        zip: \"\",\r\n    }\r\n    const [reg, setReg] = useState(initialReg);\r\n    const [regError, setRegError] = useState(initialReg);\r\n\r\n    const handleRegInputs = (e) => {\r\n        setReg({\r\n            ...reg,\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n    const handleRegistration = (e) => {\r\n        e.preventDefault();\r\n        const user = {\r\n            firstName: reg.firstName,\r\n            lastName: reg.lastName,\r\n            email: reg.email,\r\n            password: reg.password,\r\n            confirmPassword: reg.confirmPassword,\r\n            contactNumber: reg.contactNumber,\r\n            street1: reg.street1,\r\n            street2: reg.street2,\r\n            city: reg.city,\r\n            addressState: reg.addressState,\r\n            zip: reg.zip\r\n        }\r\n        dispatch(register(user))\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (regAuth.error) {\r\n            if (typeof (regAuth.error.error) !== 'string') {\r\n                // console.log(regAuth.error.error);\r\n                // console.log(typeof (regAuth.error.error));\r\n                setRegError({\r\n                    firstName: regAuth.error.error.firstName,\r\n                    lastName: regAuth.error.error.lastName,\r\n                    email: regAuth.error.error.email,\r\n                    password: regAuth.error.error.password,\r\n                    confirmPassword: regAuth.error.error.confirmPassword,\r\n                    contactNumber: regAuth.error.error.contactNumber,\r\n                    street1: regAuth.error.error.street1,\r\n                    street2: regAuth.error.error.street2,\r\n                    city: regAuth.error.error.city,\r\n                    addressState: regAuth.error.error.addressState,\r\n                    zip: regAuth.error.error.zip\r\n                })\r\n            } else {\r\n                // console.log(regAuth.error.error);\r\n                // console.log(typeof (regAuth.error.error));\r\n                setRegError({\r\n                    errorMessage: regAuth.error.error\r\n                })\r\n            }\r\n\r\n        }\r\n    }, [regAuth])\r\n\r\n    if (auth.authenticate) {\r\n        return <Redirect to={`/`} />\r\n    }\r\n\r\n    if (regAuth.loading) {\r\n        return <p>Loading...</p>\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Layout>\r\n                <Container>\r\n                    <Row style={{ marginTop: '50px' }}>\r\n                        <Col>\r\n                            <Form onSubmit={handleRegistration}>\r\n\r\n                                <Form.Group style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n                                    <Form.Text className=\"text-danger font-weight-bold\">\r\n                                        {regError.errorMessage ? regError.errorMessage : \"\"}\r\n                                    </Form.Text>\r\n                                </Form.Group>\r\n\r\n                                <Form.Row>\r\n                                    <Form.Group as={Col} controlId=\"formBasicFirst\">\r\n                                        <InputDefault\r\n                                            name=\"firstName\"\r\n                                            label=\"First Name\"\r\n                                            type=\"text\"\r\n                                            placeholder=\"First Name\"\r\n                                            value={reg.firstName}\r\n                                            onChange={handleRegInputs}\r\n                                        />\r\n                                        <Form.Text className=\"text-danger font-weight-bold\">\r\n                                            {regError.firstName ? regError.firstName.message : \"\"}\r\n                                        </Form.Text>\r\n                                    </Form.Group>\r\n                                    <Form.Group as={Col} controlId=\"formBasicLast\">\r\n                                        <InputDefault\r\n                                            name=\"lastName\"\r\n                                            label=\"Last Name\"\r\n                                            type=\"text\"\r\n                                            placeholder=\"Last Name\"\r\n                                            value={reg.lastName}\r\n                                            onChange={handleRegInputs}\r\n                                        />\r\n                                        <Form.Text className=\"text-danger font-weight-bold\">\r\n                                            {regError.lastName ? regError.lastName.message : \"\"}\r\n                                        </Form.Text>\r\n                                    </Form.Group>\r\n                                </Form.Row>\r\n\r\n                                <Form.Row>\r\n                                    <Form.Group as={Col} controlId=\"formBasicEmail\">\r\n                                        <InputDefault\r\n                                            name=\"email\"\r\n                                            label=\"Email Address\"\r\n                                            type=\"email\"\r\n                                            placeholder=\"Email Address\"\r\n                                            value={reg.email}\r\n                                            onChange={handleRegInputs}\r\n                                        />\r\n                                        <Form.Text className=\"text-danger font-weight-bold\">\r\n                                            {regError.email ? regError.email.message : \"\"}\r\n                                        </Form.Text>\r\n                                    </Form.Group>\r\n                                    <Form.Group as={Col} controlId=\"formBasicContactNum\">\r\n                                        <InputDefault\r\n                                            name=\"contactNumber\"\r\n                                            label=\"Contact Phone Number\"\r\n                                            type=\"text\"\r\n                                            placeholder=\"555-555-5555\"\r\n                                            value={reg.contactNumber}\r\n                                            onChange={handleRegInputs}\r\n                                        />\r\n                                        <Form.Text className=\"text-danger font-weight-bold\">\r\n                                            {regError.contactNumber ? regError.contactNumber.message : \"\"}\r\n                                        </Form.Text>\r\n                                    </Form.Group>\r\n                                </Form.Row>\r\n\r\n                                <Form.Row>\r\n                                    <Form.Group as={Col} controlId=\"formGridPass\">\r\n                                        <InputDefault\r\n                                            name=\"password\"\r\n                                            label=\"Password\"\r\n                                            type=\"password\"\r\n                                            placeholder=\"Password\"\r\n                                            value={reg.password}\r\n                                            onChange={handleRegInputs}\r\n                                        />\r\n                                        <Form.Text className=\"text-danger font-weight-bold\">\r\n                                            {regError.password ? regError.password.message : \"\"}\r\n                                        </Form.Text>\r\n                                    </Form.Group>\r\n                                    <Form.Group as={Col} controlId=\"formGridCPass\">\r\n                                        <InputDefault\r\n                                            name=\"confirmPassword\"\r\n                                            label=\"Confirm Password\"\r\n                                            type=\"password\"\r\n                                            placeholder=\"Confirm Password\"\r\n                                            value={reg.confirmPassword}\r\n                                            onChange={handleRegInputs}\r\n                                        />\r\n                                        <Form.Text className=\"text-danger font-weight-bold\">\r\n                                            {regError.confirmPassword ? regError.confirmPassword.message : \"\"}\r\n                                        </Form.Text>\r\n                                    </Form.Group>\r\n                                </Form.Row>\r\n\r\n                                <Form.Group controlId=\"formGridAddress1\">\r\n                                    <InputDefault\r\n                                        name=\"street1\"\r\n                                        label=\"Address\"\r\n                                        type=\"text\"\r\n                                        placeholder=\"1234 Main St\"\r\n                                        value={reg.street1}\r\n                                        onChange={handleRegInputs}\r\n                                    />\r\n                                    <Form.Text className=\"text-danger font-weight-bold\">\r\n                                        {regError.street1 ? regError.street1.message : \"\"}\r\n                                    </Form.Text>\r\n                                </Form.Group>\r\n\r\n                                <Form.Group controlId=\"formGridAddress2\">\r\n                                    <InputDefault\r\n                                        name=\"street2\"\r\n                                        label=\"Address 2\"\r\n                                        type=\"text\"\r\n                                        placeholder=\"Apartment, studio, or floor\"\r\n                                        value={reg.street2}\r\n                                        onChange={handleRegInputs}\r\n                                    />\r\n                                    <Form.Text className=\"text-danger font-weight-bold\">\r\n                                        {regError.street2 ? regError.street2.message : \"\"}\r\n                                    </Form.Text>\r\n                                </Form.Group>\r\n\r\n\r\n                                <Form.Row>\r\n                                    <Form.Group as={Col} controlId=\"formGridCity\">\r\n                                        <InputDefault\r\n                                            name=\"city\"\r\n                                            label=\"City\"\r\n                                            type=\"text\"\r\n                                            placeholder=\"City\"\r\n                                            value={reg.city}\r\n                                            onChange={handleRegInputs}\r\n                                        />\r\n                                        <Form.Text className=\"text-danger font-weight-bold\">\r\n                                            {regError.city ? regError.city.message : \"\"}\r\n                                        </Form.Text>\r\n                                    </Form.Group>\r\n                                    <Form.Group as={Col} controlId=\"formGridState\">\r\n                                        <InputDefault\r\n                                            name=\"addressState\"\r\n                                            label=\"State\"\r\n                                            type=\"text\"\r\n                                            placeholder=\"State\"\r\n                                            value={reg.addressState}\r\n                                            onChange={handleRegInputs}\r\n                                        />\r\n                                        <Form.Text className=\"text-danger font-weight-bold\">\r\n                                            {regError.addressState ? regError.addressState.message : \"\"}\r\n                                        </Form.Text>\r\n                                    </Form.Group>\r\n                                    <Form.Group as={Col} controlId=\"formGridZip\">\r\n                                        <InputDefault\r\n                                            name=\"zip\"\r\n                                            label=\"Zip\"\r\n                                            type=\"text\"\r\n                                            placeholder=\"Zip Code\"\r\n                                            value={reg.zip}\r\n                                            onChange={handleRegInputs}\r\n                                        />\r\n                                        <Form.Text className=\"text-danger font-weight-bold\">\r\n                                            {regError.zip ? regError.zip.message : \"\"}\r\n                                        </Form.Text>\r\n                                    </Form.Group>\r\n                                </Form.Row>\r\n\r\n                                <Form.Group style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n                                    <Button variant=\"primary\" type=\"submit\">\r\n                                        Submit\r\n                                    </Button>\r\n                                </Form.Group>\r\n\r\n                            </Form>\r\n                        </Col>\r\n                    </Row>\r\n\r\n                </Container>\r\n            </Layout>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default RegisterScreen;","import * as actionTypes from '../constants/adminConstants'\r\nimport axios from \"axios\"\r\n\r\nexport const getAllCategories = () => {\r\n    return async dispatch => {\r\n\r\n        dispatch({\r\n            type: actionTypes.GET_ALL_CATEGORIES_REQUEST\r\n        });\r\n\r\n        const res = await axios.get(`http://localhost:8000/api/categories`);\r\n        // console.log(res.data);\r\n        if (res.status === 200) {\r\n            const { categoryList } = res.data\r\n            dispatch({\r\n                type: actionTypes.GET_ALL_CATEGORIES_SUCCESS,\r\n                payload: { categoryList: categoryList }\r\n            })\r\n        } else {\r\n            dispatch({\r\n                type: actionTypes.GET_ALL_CATEGORIES_FAIL,\r\n                payload: { error: res.data.error }\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\nexport const addCategory = (cate) => {\r\n    return async dispatch => {\r\n\r\n        dispatch({\r\n            type: actionTypes.ADD_NEW_CATEGORY_REQUEST\r\n        })\r\n\r\n        await axios.post(`http://localhost:8000/api/categories`, cate, { withCredentials: true })\r\n            .then(res => {\r\n                // console.log(\"res.data in the .then\");\r\n                // console.log(res.data);\r\n\r\n                dispatch({\r\n                    type: actionTypes.ADD_NEW_CATEGORY_SUCCESS,\r\n                    payload: { category: res.data }\r\n                })\r\n            })\r\n            .catch(err => {\r\n                // console.log(\"err in the .catch\");\r\n                // console.log(err.response);\r\n                dispatch({\r\n                    type: actionTypes.ADD_NEW_CATEGORY_FAIL,\r\n                    payload: err.response\r\n                })\r\n            })\r\n    }\r\n}\r\n\r\nexport const updateMultipleCategories = (cate) => {\r\n    return async dispatch => {\r\n\r\n        dispatch({\r\n            type: actionTypes.UPDATE_CATEGORIES_REQUEST\r\n        })\r\n\r\n        const res = await axios.post(`http://localhost:8000/api/categories/update-multiple`, cate);\r\n\r\n        if (res.status === 201) {\r\n            dispatch({\r\n                type: actionTypes.UPDATE_CATEGORIES_SUCCESS\r\n            });\r\n            dispatch(getAllCategories());\r\n        } else {\r\n\r\n            const { error } = res;\r\n\r\n            dispatch({\r\n                type: actionTypes.UPDATE_CATEGORIES_FAIL,\r\n                payload: { error }\r\n            })\r\n\r\n            console.log(error);\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport const deleteCategories = (ids) => {\r\n    return async dispatch => {\r\n\r\n        dispatch({\r\n            type: actionTypes.DELETE_CATEGORIES_REQUEST\r\n        });\r\n\r\n        const res = await axios.post(`http://localhost:8000/api/categories/delete-multiple`, {\r\n            payload: {\r\n                ids\r\n            }\r\n        });\r\n\r\n        if (res.status === 201) {\r\n            dispatch({\r\n                type: actionTypes.DELETE_CATEGORIES_SUCCESS\r\n            });\r\n            dispatch(getAllCategories());\r\n        } else {\r\n            const { error } = res;\r\n            dispatch({\r\n                type: actionTypes.DELETE_CATEGORIES_FAIL,\r\n                payload: { error }\r\n            });\r\n        }\r\n\r\n    }\r\n}\r\n\r\n\r\n\r\n    // const res = await axios.post(`http://localhost:8000/api/categories`, cate, { withCredentials: true })\r\n    // console.log(res);\r\n    // if (res.satus === 200) {\r\n    // dispatch({\r\n    //     type: actionTypes.ADD_NEW_CATEGORY_SUCCESS,\r\n    //     payload: res.data\r\n    // })\r\n    // } else {\r\n    //     console.log(\"in the else\");\r\n    //     console.log(res);\r\n    // dispatch({\r\n    //     type: actionTypes.ADD_NEW_CATEGORY_FAIL,\r\n    //     payload: res.data.error\r\n    // })\r\n    // }","import React from 'react';\r\n\r\n// Bootstrap Components\r\nimport { Container, Col, Row } from 'react-bootstrap';\r\nimport { Modal, Form, Button } from 'react-bootstrap';\r\n\r\n// Components\r\nimport InputDefault from '../../components/UI/Inputs/InputDefault';\r\n\r\nconst CategoryForm = ({ inputs, handleInputChangeName, handleInputChangeParentId, categorySelectOptions }) => {\r\n    return (\r\n        <Form >\r\n            <Row>\r\n                <Col>\r\n                    <Form.Group controlId=\"formCategoryName\">\r\n                        <InputDefault\r\n                            name=\"name\"\r\n                            label=\"Category Name\"\r\n                            type=\"text\"\r\n                            placeholder=\"Enter Category Name\"\r\n                            value={inputs.name}\r\n                            onChange={handleInputChangeName}\r\n                        />\r\n                    </Form.Group>\r\n                </Col>\r\n                <Col>\r\n                    <Form.Group controlId=\"formParentSelect\">\r\n                        <Form.Label>Select Parent Category</Form.Label>\r\n                        <Form.Row>\r\n                            <select\r\n                                className=\"form-control\"\r\n                                name=\"parentId\"\r\n                                value={inputs.parentId}\r\n                                onChange={handleInputChangeParentId}\r\n                            >\r\n                                <option> </option>\r\n                                {\r\n                                    categorySelectOptions.map(option =>\r\n                                        <option key={option.value} value={option.value}>{option.name}</option>\r\n                                    )\r\n                                }\r\n                            </select>\r\n                        </Form.Row>\r\n                    </Form.Group>\r\n                </Col>\r\n            </Row>\r\n\r\n\r\n\r\n        </Form>\r\n    );\r\n};\r\n\r\nexport default CategoryForm;","\r\n// Components\r\nimport CategoryForm from '../../CategoryForm/CategoryForm';\r\n\r\n// Bootstrap Components\r\nimport { Modal, Form, Button, Row } from 'react-bootstrap';\r\n\r\n\r\nconst EditCategoryModal = (props) => {\r\n\r\n    const {\r\n        show,\r\n        size,\r\n        onHide,\r\n        expandedArray,\r\n        checkedArray,\r\n        categorySelectOptions,\r\n        handleEditCategoryInputs,\r\n        handleClose,\r\n        handleUpdate\r\n    } = props;\r\n\r\n    return (\r\n        <Modal\r\n            show={show}\r\n            size={size}\r\n            aria-labelledby=\"contained-modal-title-vcenter\"\r\n            centered\r\n            onHide={onHide}\r\n            backdrop=\"static\"\r\n            keyboard={false}\r\n        >\r\n            <Modal.Header closeButton>\r\n                <Modal.Title>Edit Category</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                {/* Display expanded section if any are expanded */}\r\n                {\r\n                    expandedArray.length > 0\r\n                        ? <Row>\r\n                            <h5 style={{ paddingLeft: '20px' }}>Expanded</h5>\r\n                        </Row>\r\n                        : <p className='text-center'>Nothing Selected</p>\r\n                }\r\n                {\r\n                    expandedArray.length > 0 &&\r\n                    expandedArray.map((expandedItem, idx) =>\r\n                        <CategoryForm\r\n                            key={idx}\r\n                            inputs={expandedItem}\r\n                            handleInputChangeName={(e) => handleEditCategoryInputs('name', e.target.value, idx, 'expanded')}\r\n                            handleInputChangeParentId={(e) => handleEditCategoryInputs('parentId', e.target.value, idx, 'expanded')}\r\n                            categorySelectOptions={categorySelectOptions}\r\n                        />\r\n                    )\r\n                }\r\n                {/* Display checked section if any are checked */}\r\n                {\r\n                    checkedArray.length > 0\r\n                        ? <Row>\r\n                            <h5 style={{ paddingLeft: '20px' }}>Checked</h5>\r\n                        </Row>\r\n                        : null\r\n                }\r\n                {\r\n                    checkedArray.length > 0 &&\r\n                    checkedArray.map((checkedItem, idx) =>\r\n                        <CategoryForm\r\n                            key={idx}\r\n                            inputs={checkedItem}\r\n                            handleInputChangeName={(e) => handleEditCategoryInputs('name', e.target.value, idx, 'checked')}\r\n                            handleInputChangeParentId={(e) => handleEditCategoryInputs('parentId', e.target.value, idx, 'checked')}\r\n                            categorySelectOptions={categorySelectOptions}\r\n                        />\r\n                    )\r\n                }\r\n                <Form.Group className=\"d-flex justify-content-end border-top border-bottom py-2\">\r\n                    <Button variant=\"secondary\" onClick={handleClose}>\r\n                        Close\r\n                    </Button>\r\n                    <Button className=\"ml-1\" onClick={handleUpdate} variant=\"primary\" type=\"submit\">\r\n                        Save\r\n                    </Button>\r\n                </Form.Group>\r\n            </Modal.Body>\r\n        </Modal>\r\n    );\r\n}\r\n\r\nexport default EditCategoryModal;","\r\n// Components\r\nimport CategoryForm from '../../CategoryForm/CategoryForm';\r\n\r\n// Bootstrap Components\r\nimport { Modal, Form, Button } from 'react-bootstrap';\r\n\r\nconst AddCategoryModal = (props) => {\r\n\r\n    const {\r\n        show,\r\n        size,\r\n        onHide,\r\n        handleInputs,\r\n        category,\r\n        categorySelectOptions,\r\n        handleClose,\r\n        handleCreate\r\n    } = props;\r\n\r\n    return (\r\n        <Modal\r\n            show={show}\r\n            size={size}\r\n            aria-labelledby=\"contained-modal-title-vcenter\"\r\n            centered\r\n            onHide={onHide}\r\n            backdrop=\"static\"\r\n            keyboard={false}\r\n        >\r\n            <Modal.Header closeButton>\r\n                <Modal.Title>Create New Category</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <CategoryForm\r\n                    inputs={category}\r\n                    handleInputChangeName={handleInputs}\r\n                    handleInputChangeParentId={handleInputs}\r\n                    categorySelectOptions={categorySelectOptions}\r\n                />\r\n                <Form.Group className=\"d-flex justify-content-end border-top border-bottom py-2\">\r\n                    <Button variant=\"secondary\" onClick={handleClose}>\r\n                        Close\r\n                    </Button>\r\n                    <Button className=\"ml-1\" onClick={handleCreate} variant=\"primary\" type=\"submit\">\r\n                        Save\r\n                    </Button>\r\n                </Form.Group>\r\n            </Modal.Body>\r\n        </Modal>\r\n    );\r\n}\r\n\r\nexport default AddCategoryModal;","\r\n// Components\r\nimport CategoryForm from '../../CategoryForm/CategoryForm';\r\n\r\n// Bootstrap Components\r\nimport { Modal, Form, Button } from 'react-bootstrap';\r\n\r\nconst DeleteCategoryModal = (props) => {\r\n\r\n    const {\r\n        show,\r\n        onHide,\r\n        expandedArray,\r\n        checkedArray,\r\n        deleteCategories,\r\n        handleClose\r\n    } = props;\r\n\r\n    return (\r\n        <Modal\r\n            show={show}\r\n            aria-labelledby=\"contained-modal-title-vcenter\"\r\n            centered\r\n            onHide={onHide}\r\n        >\r\n            <Modal.Header closeButton>\r\n                <Modal.Title>Confirm Deletion(s)</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n\r\n                {/* <h5>Expanded</h5>\r\n                {\r\n                    expandedArray.map((item, idx) => <p key={idx}>{item.name}</p>)\r\n                } */}\r\n                {/* <h5>Checked</h5> */}\r\n                {\r\n                    checkedArray <= 0 \r\n                    ? <p className='text-center'>Nothing Selected</p>\r\n                    : checkedArray.map((item, idx) => <p key={idx}>{item.name}</p>)\r\n                    \r\n                }\r\n\r\n                <Form.Group className=\"d-flex justify-content-center border-top border-bottom py-2\">\r\n                    <Button variant=\"danger\" onClick={deleteCategories} type=\"submit\">\r\n                        Confirm Deletion\r\n                    </Button>\r\n                    <Button className=\"ml-1\" onClick={handleClose} variant=\"warning\" >\r\n                        Cancel\r\n                    </Button>\r\n                </Form.Group>\r\n            </Modal.Body>\r\n        </Modal>\r\n    );\r\n}\r\n\r\nexport default DeleteCategoryModal;","import CheckboxTree from 'react-checkbox-tree';\r\nimport { useState } from 'react';\r\n\r\n// CSS\r\nimport './CategoryScreen.css';\r\nimport 'react-checkbox-tree/lib/react-checkbox-tree.css';\r\n\r\n// Bootstrap Components\r\nimport { Container, Col, Row } from 'react-bootstrap';\r\nimport { Modal, Form, Button } from 'react-bootstrap';\r\n\r\n// Redux\r\nimport {\r\n    addCategory,\r\n    getAllCategories,\r\n    updateMultipleCategories,\r\n    deleteCategories as deleteCategoriesAction\r\n} from '../../redux/actions/category.actions';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\n// Components\r\nimport Layout from '../../components/Layout/Layout';\r\nimport EditCategoryModal from '../../components/CategoryComponents/EditCategoryModal/EditCategoryModal';\r\nimport AddCategoryModal from '../../components/CategoryComponents/AddCategoryModal/AddCategoryModal';\r\nimport DeleteCategoryModal from '../../components/CategoryComponents/DeleteCategoryModal/DeleteCategoryModal';\r\n// import InputDefault from '../../components/UI/Inputs/InputDefault';\r\n// import CategoryForm from '../../components/CategoryForm/CategoryForm';\r\n\r\nconst CategoryScreen = () => {\r\n\r\n    const categoryState = useSelector(state => state.categoryState);\r\n    const dispatch = useDispatch();\r\n\r\n    const [category, setCategory] = useState({\r\n        _id: '',\r\n        name: '',\r\n        parentId: ''\r\n    })\r\n\r\n    const [checked, setChecked] = useState([]);\r\n    const [expanded, setExpanded] = useState([]);\r\n    const [checkedArray, setCheckedArray] = useState([]);\r\n    const [expandedArray, setExpandedArray] = useState([]);\r\n\r\n    // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ Modals ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ \r\n    // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ Modal States ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ \r\n    // Create Category Modal \r\n    const [show, setShow] = useState(false);\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(true);\r\n\r\n    // Edit Category Modal\r\n    const [showUpdateModal, setUpdateUpdateModal] = useState(false);\r\n    const handleShowUpdateModal = () => {\r\n        updateCheckedAndExpandedArray();\r\n        setUpdateUpdateModal(true);\r\n    }\r\n    const handleCloseUpdateModal = () => setUpdateUpdateModal(false);\r\n\r\n    // Delete Category Warning Modal\r\n    const [deleteWarningModal, setDeleteWarningModal] = useState(false);\r\n    const handleShowDeleteWarning = () => {\r\n        updateCheckedAndExpandedArray();\r\n        setDeleteWarningModal(true);\r\n    }\r\n    const handleCloseDeleteWarning = () => setDeleteWarningModal(false);\r\n\r\n    // Checked & Expanded Arrays used for edit and delete\r\n    const updateCheckedAndExpandedArray = () => {\r\n        const categories = generateCategoryList(categoryState.categoryList);\r\n        const checkedArr = [];\r\n        const expandedArr = [];\r\n\r\n        checked.length > 0 && checked.forEach((categoryId, idx) => {\r\n            const category = categories.find((category, _idx) => categoryId === category.value);\r\n            category && checkedArr.push(category);\r\n        });\r\n        expanded.length > 0 && expanded.forEach((categoryId, idx) => {\r\n            const category = categories.find((category, _idx) => categoryId === category.value);\r\n            category && expandedArr.push(category);\r\n        });\r\n\r\n        setCheckedArray(checkedArr);\r\n        setExpandedArray(expandedArr);\r\n    }\r\n\r\n    // Generate the list for the select input options \r\n    const createCategorySelectOptions = (categories, options = []) => {\r\n        for (let category of categories) {\r\n            options.push({ value: category._id, name: category.name })\r\n            if (category.children.length > 0) {\r\n                createCategorySelectOptions(category.children, options);\r\n            }\r\n        }\r\n        return options;\r\n    }\r\n\r\n    // Handle category creation and reset category state back to initial state\r\n    const handleCreate = (e) => {\r\n        e.preventDefault();\r\n        const cate = {\r\n            name: category.name,\r\n            parentId: category.parentId\r\n        }\r\n\r\n        if (cate.name === null || cate.name === '') {\r\n            alert('Category Name is required.')\r\n        } else {\r\n            dispatch(addCategory(cate));\r\n            setCategory({\r\n                _id: '',\r\n                name: '',\r\n                parentId: ''\r\n            })\r\n            setShow(false);\r\n        }\r\n    }\r\n\r\n    // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ Edit Category Modal ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ \r\n    // Generate an inline list of all categories\r\n    const generateCategoryList = (categories, options = []) => {\r\n        for (let category of categories) {\r\n            options.push({ value: category._id, name: category.name, parentId: category.parentId })\r\n            if (category.children.length > 0) {\r\n                generateCategoryList(category.children, options);\r\n            }\r\n        }\r\n        return options;\r\n    }\r\n\r\n    // Handle Inputs\r\n\r\n    const handleCategoryInputs = (e) => {\r\n        e.preventDefault();\r\n        setCategory({\r\n            ...category,\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n    const handleEditCategoryInputs = (key, value, index, type) => {\r\n        if (type === 'checked') {\r\n            const updatedCheckedArray = checkedArray.map((item, idx) => index === idx ? { ...item, [key]: value } : item);\r\n            setCheckedArray(updatedCheckedArray);\r\n        } else if (type === 'expanded') {\r\n            const updatedExpandedArray = expandedArray.map((item, idx) => index === idx ? { ...item, [key]: value } : item);\r\n            setExpandedArray(updatedExpandedArray);\r\n        }\r\n    }\r\n\r\n    const handleUpdate = (e) => {\r\n        e.preventDefault();\r\n        const cate = {\r\n            _id: [],\r\n            name: [],\r\n            parentId: []\r\n        }\r\n        expandedArray.forEach((item, index) => {\r\n            cate._id.push(item.value);\r\n            cate.name.push(item.name);\r\n            cate.parentId.push(item.parentId ? item.parentId : \"\");\r\n        });\r\n        checkedArray.forEach((item, index) => {\r\n            cate._id.push(item.value);\r\n            cate.name.push(item.name);\r\n            cate.parentId.push(item.parentId ? item.parentId : \"\");\r\n        });\r\n        dispatch(updateMultipleCategories(cate));\r\n        handleCloseUpdateModal();\r\n    }\r\n\r\n    // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ Delete Categories ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ \r\n    const deleteCategories = () => {\r\n        const checkedIdArray = checkedArray.map((item, idx) => ({ _id: item.value }));\r\n        const expandedIdArray = expandedArray.map((item, idx) => ({ _id: item.value }));\r\n        // const idArray = expandedIdArray.concat(checkedIdArray);\r\n\r\n        if (checkedIdArray.length > 0) {\r\n            dispatch(deleteCategoriesAction(checkedIdArray))\r\n                // .then(res => {\r\n                //     if (res) {\r\n                //         dispatch(getAllCategories());\r\n                //     }\r\n                // })\r\n        }\r\n\r\n        setDeleteWarningModal(false);\r\n    }\r\n\r\n    // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ Render On Screen ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ \r\n    // Generate a list of the categories and their children to display on page\r\n    const renderCategories = (categories) => {\r\n        let myCategories = [];\r\n        for (let category of categories) {\r\n            myCategories.push(\r\n                {\r\n                    label: category.name,\r\n                    value: category._id,\r\n                    children: category.children.length > 0 && renderCategories(category.children)\r\n                }\r\n            );\r\n        }\r\n        return myCategories;\r\n    }\r\n\r\n    // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ Component Return ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ \r\n    return (\r\n        <Layout sidebar>\r\n            <Container fluid>\r\n                <Row>\r\n                    <Col md={12}>\r\n                        <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n                            <h3>Categories</h3>\r\n                            <div className='actionBtnContainer'>\r\n                                <button className='btn btn-dark' onClick={handleShow}>\r\n                                    <span className='fas fa-plus'></span>\r\n                                    <span>Add New Category</span>\r\n                                </button>\r\n                                <button className='btn btn-dark' onClick={handleShowUpdateModal}>\r\n                                    <i className=\"fas fa-edit\" />\r\n                                    <span>Edit</span>\r\n                                </button>\r\n                                <button className='btn btn-danger' onClick={handleShowDeleteWarning}>\r\n                                    <i className=\"fas fa-trash-alt\" />\r\n                                    <span>Delete</span>\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col md={12}>\r\n                        <CheckboxTree\r\n                            nodes={renderCategories(categoryState.categoryList)}\r\n                            checked={checked}\r\n                            expanded={expanded}\r\n                            onCheck={checked => setChecked(checked)}\r\n                            onExpand={expanded => setExpanded(expanded)}\r\n                            icons={{\r\n                                check: <span className='fas fa-check-square' />,\r\n                                uncheck: <span className='far fa-square' />,\r\n                                halfCheck: <span className='far fa-check-square' />,\r\n                                expandClose: <span className='fas fa-angle-double-right' />,\r\n                                expandOpen: <span className='fas fa-chevron-down' />,\r\n                            }}\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    {/* <Col>\r\n                        <div className=\"d-flex justify-content-between\">\r\n                            <Button variant=\"primary\" className=\"m-2\" onClick={handleShowUpdateModal}>\r\n                                Edit\r\n                            </Button>\r\n                            <Button className=\"m-2\" variant=\"danger\" onClick={handleShowDeleteWarning}>\r\n                                Delete\r\n                            </Button>\r\n                        </div>\r\n                    </Col> */}\r\n                </Row>\r\n            </Container>\r\n\r\n            {/* Render Modals */}\r\n\r\n            <AddCategoryModal\r\n                show={show}\r\n                size={'lg'}\r\n                onHide={handleClose}\r\n                handleInputs={handleCategoryInputs}\r\n                category={category}\r\n                categorySelectOptions={createCategorySelectOptions(categoryState.categoryList)}\r\n                handleClose={handleClose}\r\n                handleCreate={handleCreate}\r\n            />\r\n\r\n            <EditCategoryModal\r\n                show={showUpdateModal}\r\n                size={'lg'}\r\n                onHide={handleCloseUpdateModal}\r\n                expandedArray={expandedArray}\r\n                checkedArray={checkedArray}\r\n                categorySelectOptions={createCategorySelectOptions(categoryState.categoryList)}\r\n                handleEditCategoryInputs={handleEditCategoryInputs}\r\n                handleClose={handleCloseUpdateModal}\r\n                handleUpdate={handleUpdate}\r\n            />\r\n\r\n            <DeleteCategoryModal\r\n                show={deleteWarningModal}\r\n                onHide={handleCloseDeleteWarning}\r\n                expandedArray={expandedArray}\r\n                checkedArray={checkedArray}\r\n                deleteCategories={deleteCategories}\r\n                handleClose={handleCloseDeleteWarning}\r\n            />\r\n\r\n            {/* End Render Modals */}\r\n\r\n        </Layout >\r\n    );\r\n};\r\n\r\nexport default CategoryScreen;\r\n","import * as actionTypes from '../constants/adminConstants'\r\nimport axios from \"axios\"\r\n\r\n\r\nexport const getInitialData = () => {\r\n    return async dispatch => {\r\n        dispatch({\r\n            type: actionTypes.GET_INITIAL_DATA_REQUEST\r\n        });\r\n\r\n        const res = await axios.get(`http://localhost:8000/api/initial-data`);\r\n        if (res.status === 200) {\r\n            const { categories: categoryList, products } = res.data;\r\n            dispatch({\r\n                type: actionTypes.GET_ALL_CATEGORIES_SUCCESS,\r\n                payload: {categoryList: categoryList}\r\n            })\r\n            dispatch({\r\n                type: actionTypes.GET_ALL_PRODUCTS_SUCCESS,\r\n                payload: {products: products}\r\n            })\r\n        }\r\n    }\r\n}","import { useEffect, useState } from 'react';\r\nimport './ProductScreen.css';\r\n\r\n// Bootstrap Components\r\nimport { Container, Col, Row, Table } from 'react-bootstrap';\r\nimport { Modal, Form, Button } from 'react-bootstrap';\r\n\r\n// Redux\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { addProduct } from '../../redux/actions/product.actions';\r\n// import { getAllCategories } from '../../redux/actions/category.actions';\r\nimport { getInitialData } from '../../redux/actions/initialData.actions';\r\n\r\n// Components\r\nimport InputDefault from '../../components/UI/Inputs/InputDefault';\r\nimport Layout from '../../components/Layout/Layout';\r\n\r\n\r\nconst ProductScreen = () => {\r\n\r\n    const categoryState = useSelector(state => state.categoryState);\r\n    const productState = useSelector(state => state.productState);\r\n    const dispatch = useDispatch();\r\n\r\n    const [product, setProduct] = useState({\r\n        _id: '',\r\n        category: '',\r\n        name: '',\r\n        description: '',\r\n        price: '',\r\n        measurement: '',\r\n        productImage: '',\r\n        inStock: false\r\n    })\r\n\r\n    // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ Add Product Modal ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ \r\n    const [show, setShow] = useState(false);\r\n    const handleClose = () => {\r\n        setProduct({\r\n            _id: '',\r\n            category: '',\r\n            name: '',\r\n            description: '',\r\n            price: '',\r\n            measurement: '',\r\n            productImage: null,\r\n            inStock: false\r\n        })\r\n        setShow(false)\r\n    };\r\n    const handleShow = () => setShow(true);\r\n\r\n    // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~  Form Stuff ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ \r\n    // Check the input type and assign the values as needed\r\n    const handleProductInputs = (e) => {\r\n        // If the type is a checkbox, set it to the opposite of the initial product state (false)\r\n        if (e.target.type === \"checkbox\") {\r\n            setProduct({\r\n                ...product,\r\n                [e.target.name]: !product[e.target.name]\r\n            })\r\n            // If the type is a file set productImage to the file being uploaded\r\n        } else if (e.target.type === \"file\") {\r\n            setProduct({\r\n                ...product,\r\n                productImage: e.target.files[0]\r\n            })\r\n            // Handle all other input fields\r\n        } else {\r\n            setProduct({\r\n                ...product,\r\n                [e.target.name]: e.target.value\r\n            })\r\n        }\r\n    }\r\n\r\n    // Generate the list for the input type select options \r\n    const createCategorySelectOptions = (categories, options = []) => {\r\n        for (let category of categories) {\r\n            options.push({ value: category._id, name: category.name })\r\n            if (category.children.length > 0) {\r\n                createCategorySelectOptions(category.children, options);\r\n            }\r\n        }\r\n        return options;\r\n    }\r\n\r\n    // Handle form submission and reset product state back to initial values\r\n    const handleSave = (e) => {\r\n        e.preventDefault();\r\n        const form = new FormData();\r\n        form.append(\"category\", product.category);\r\n        form.append(\"name\", product.name);\r\n        form.append(\"description\", product.description);\r\n        form.append(\"price\", product.price);\r\n        form.append(\"measurement\", product.measurement);\r\n        form.append(\"productImage\", product.productImage);\r\n        form.append(\"inStock\", product.inStock);\r\n        dispatch(addProduct(form));\r\n        setShow(false);\r\n        setProduct({\r\n            _id: '',\r\n            category: '',\r\n            name: '',\r\n            description: '',\r\n            price: '',\r\n            measurement: '',\r\n            productImage: '',\r\n            inStock: false\r\n        })\r\n        dispatch(getInitialData())\r\n    }\r\n\r\n    const renderAddProductModal = () => {\r\n        return (\r\n            <Modal\r\n                show={show}\r\n                size=\"lg\"\r\n                aria-labelledby=\"contained-modal-title-vcenter\"\r\n                centered\r\n                onHide={handleClose}\r\n                backdrop=\"static\"\r\n                keyboard={false}\r\n            >\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>Add New Product</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <Form onSubmit={handleSave}>\r\n                        <Form.Group controlId=\"formProductName\">\r\n                            <InputDefault\r\n                                name=\"name\"\r\n                                label=\"Product Name\"\r\n                                type=\"text\"\r\n                                placeholder=\"Enter Product Name\"\r\n                                value={product.name}\r\n                                onChange={handleProductInputs}\r\n                            />\r\n                        </Form.Group>\r\n                        <Form.Group controlId=\"formParentSelect\">\r\n                            <Form.Label>Select Category</Form.Label>\r\n                            <Form.Row>\r\n                                <select\r\n                                    className=\"form-control\"\r\n                                    name=\"category\"\r\n                                    value={product.category}\r\n                                    onChange={handleProductInputs}\r\n                                >\r\n                                    <option> </option>\r\n                                    {\r\n                                        createCategorySelectOptions(categoryState.categoryList).map(option =>\r\n                                            <option key={option.value} value={option.value}>{option.name}</option>\r\n                                        )\r\n                                    }\r\n                                </select>\r\n                            </Form.Row>\r\n                        </Form.Group>\r\n                        <Form.Group controlId=\"formProductDesc\">\r\n                            <InputDefault\r\n                                name=\"description\"\r\n                                label=\"Product Description\"\r\n                                type=\"text\"\r\n                                placeholder=\"Enter Product Description\"\r\n                                value={product.description}\r\n                                onChange={handleProductInputs}\r\n                            />\r\n                        </Form.Group>\r\n                        <Form.Group controlId=\"formProductPrice\">\r\n                            <InputDefault\r\n                                name=\"price\"\r\n                                label=\"Product Price\"\r\n                                type=\"number\"\r\n                                placeholder=\"$\"\r\n                                value={product.price}\r\n                                onChange={handleProductInputs}\r\n                            />\r\n                        </Form.Group>\r\n                        <Form.Group controlId=\"formProductMeasurement\">\r\n                            <InputDefault\r\n                                name=\"measurement\"\r\n                                label=\"Product Measurement\"\r\n                                type=\"text\"\r\n                                placeholder=\"Enter Product Measurement\"\r\n                                value={product.measurement}\r\n                                onChange={handleProductInputs}\r\n                            />\r\n                        </Form.Group>\r\n                        <Form.Group controlId=\"formProductImage\">\r\n                            <Form.Label>Product Image</Form.Label>\r\n                            <Form.Control\r\n                                type=\"file\"\r\n                                name=\"productImage\"\r\n                                onChange={handleProductInputs}\r\n                            />\r\n                        </Form.Group>\r\n                        <Form.Group controlId=\"formProductInStock\">\r\n                            <Form.Check\r\n                                name=\"inStock\"\r\n                                label=\"Product In Stock\"\r\n                                type=\"checkbox\"\r\n                                value={product.inStock}\r\n                                onChange={handleProductInputs}\r\n                                readOnly\r\n                            />\r\n                        </Form.Group>\r\n                        <Form.Group className=\"d-flex justify-content-center border-top border-bottom py-2\">\r\n                            <Button variant=\"secondary\" onClick={handleClose}>\r\n                                Close\r\n                            </Button>\r\n                            <Button className=\"ml-1\" variant=\"primary\" type=\"submit\">\r\n                                Save\r\n                            </Button>\r\n                        </Form.Group>\r\n                    </Form>\r\n                </Modal.Body>\r\n            </Modal>\r\n        )\r\n    }\r\n    // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ End Add Product Modal ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ \r\n\r\n    // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ Show on page ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n\r\n    // Display product list\r\n    const renderProducts = () => {\r\n        return <Table striped responsive=\"sm\">\r\n            <thead>\r\n                <tr>\r\n                    <th>#</th>\r\n                    <th>Category</th>\r\n                    <th>Name</th>\r\n                    <th>Price</th>\r\n                    <th>In Stock</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody style={{ fontSize: \"12px\" }}>\r\n                {\r\n                    productState.products.length > 0\r\n                        ? productState.products.map((p, idx) => {\r\n                            return (\r\n                                <tr onClick={() => handleShowProductModal(p)} key={idx}>\r\n                                    <td>{idx + 1}</td>\r\n                                    <td>{p.category.name}</td>\r\n                                    <td>{p.name}</td>\r\n                                    <td>${p.price.toFixed(2)} / {p.measurement}</td>\r\n                                    <td>{p.inStock ? \"In Stock\" : \"Out of Stock\"}</td>\r\n                                </tr>)\r\n                        })\r\n                        : null\r\n                }\r\n            </tbody>\r\n        </Table>\r\n    }\r\n    useEffect(() => {\r\n        // dispatch(getAllProducts())\r\n        dispatch(getInitialData())\r\n    }, [show])\r\n    // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ End Show on page ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n\r\n    // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ Product Details Modal ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n    const [productModal, setProductModal] = useState(false);\r\n    const [productDetails, setProductDetails] = useState({});\r\n\r\n    const handleShowProductModal = (product) => {\r\n        setProductModal(true);\r\n        setProductDetails(product);\r\n\r\n    };\r\n\r\n    const handleCloseShowProductModal = () => {\r\n        setProductModal(false);\r\n    }\r\n\r\n    const renderProductDetailsModal = () => {\r\n\r\n        if (!productDetails) {\r\n            return null;\r\n        }\r\n\r\n        return (\r\n            <Modal\r\n                show={productModal}\r\n                size=\"lg\"\r\n                aria-labelledby=\"contained-modal-title-vcenter\"\r\n                centered\r\n                onHide={handleCloseShowProductModal}\r\n            >\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>{productDetails.name}</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <Row className=\"border-bottom\">\r\n                        <Col>\r\n                            <label className=\"key\">Category</label>\r\n                            <p className=\"value\">{productDetails.category ? productDetails.category.name : null}</p>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row className=\"border-bottom pt-3\">\r\n                        <Col>\r\n                            <label className=\"key\">Price</label>\r\n                            <p className=\"value\">${productDetails.price ? productDetails.price.toFixed(2) : productDetails.price} / {productDetails.measurement}</p>\r\n                        </Col>\r\n                        <Col>\r\n                            <label className=\"key\">Availability</label>\r\n                            <p className=\"value\">{productDetails.inStock ? \"In Stock\" : \"Out of Stock\"}</p>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row className=\"border-bottom pt-3\">\r\n                        <Col>\r\n                            <label className=\"key\">Description</label>\r\n                            <p className=\"value\">{productDetails.description}</p>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row className=\"border-bottom pt-3\">\r\n                        <Col>\r\n                            <label className=\"key\">Product Image</label>\r\n                            <div className=\"productImageContainer\">\r\n                                <img src={productDetails.productImage} alt={productDetails.name} />\r\n                            </div>\r\n                        </Col>\r\n                    </Row>\r\n                </Modal.Body>\r\n            </Modal>\r\n        )\r\n    }\r\n    // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ End Product Details Modal ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n\r\n\r\n    return (\r\n        <Layout sidebar>\r\n            <Container fluid>\r\n                <Row sticky=\"top\" className=\"my-2\">\r\n                    <Col md={12}>\r\n                        <div style={{ display: 'flex', justifyContent: 'space-between', }}>\r\n                            <h3>Products</h3>\r\n                            <Button variant=\"primary\" onClick={handleShow}>\r\n                                Add\r\n                            </Button>\r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col md={12}>\r\n                        {renderProducts()}\r\n                        <div style={{ display: 'flex', justifyContent: 'flex-end', marginBottom: '20px' }}>\r\n                            <Button style={{}} variant=\"primary\" onClick={handleShow}>\r\n                                Add\r\n                            </Button>\r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n\r\n            {/* ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ Add Product Modal ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~  */}\r\n            {renderAddProductModal()}\r\n            {renderProductDetailsModal()}\r\n\r\n        </Layout >\r\n    );\r\n};\r\n\r\nexport default ProductScreen;","import * as actionTypes from '../constants/adminConstants'\r\nimport axios from \"axios\"\r\n\r\nexport const addProduct = (form) => {\r\n    return async dispatch => {\r\n        dispatch({\r\n            type: actionTypes.ADD_NEW_PRODUCT_REQUEST\r\n        });\r\n\r\n        await axios.post(`http://localhost:8000/api/products`, form, { withCredentials: true })\r\n            .then(res => {\r\n                dispatch({\r\n                    type: actionTypes.ADD_NEW_PRODUCT_SUCCESS,\r\n                    payload: res.data\r\n                })\r\n            })\r\n            .catch(err => {\r\n                dispatch({\r\n                    type: actionTypes.ADD_NEW_PRODUCT_FAIL,\r\n                    payload: err.response.data\r\n                })\r\n            })\r\n\r\n    }\r\n}\r\n\r\nexport const getAllProducts = () => {\r\n    return async dispatch => {\r\n        dispatch({\r\n            type: actionTypes.GET_ALL_PRODUCTS_REQUEST\r\n        });\r\n\r\n        const res = await axios.get(`http://localhost:8000/api/products`);\r\n        const { products } = res.data;\r\n        console.log(res.data);\r\n        if (res.status === 200) {\r\n            dispatch({\r\n                type: actionTypes.GET_ALL_PRODUCTS_SUCCESS,\r\n                payload: { products: products }\r\n            })\r\n        }\r\n    }\r\n}","import React, { useState, useEffect } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\n// Bootstrap Components\r\nimport { Container, Row, Form, Col, Button } from 'react-bootstrap';\r\n\r\n// Components\r\n// import InputBasic from '../../components/UI/Inputs/InputBasic';\r\nimport InputDefault from '../../components/UI/Inputs/InputDefault';\r\nimport Layout from '../../components/Layout/Layout';\r\n\r\n// Redux\r\nimport { login } from '../../redux/actions/adminAuth.actions'\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nconst LoginScreen = () => {\r\n\r\n    const auth = useSelector(state => state.auth);\r\n    const dispatch = useDispatch();\r\n\r\n    // const [email, setEmail] = useState('');\r\n    // const [password, setPassword] = useState('');\r\n\r\n    const initialLog = {\r\n        email: '',\r\n        password: ''\r\n    }\r\n    const [log, setLog] = useState(initialLog);\r\n    const [logError, setLogError] = useState('');\r\n\r\n    const handleLogInputs = (e) => {\r\n        setLog({\r\n            ...log,\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n\r\n    const userLogin = (e) => {\r\n        e.preventDefault();\r\n        const user = {\r\n            email: log.email,\r\n            password: log.password\r\n        }\r\n        dispatch(login(user));\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (auth.error) {\r\n            if (auth.error.message) {\r\n                // console.log(\"auth.error.message\");\r\n                // console.log(auth.error);\r\n                // console.log(auth.error.message);\r\n                setLogError({\r\n                    message: auth.error.message\r\n                })\r\n            } else {\r\n                // console.log(\"auth.error.error\");\r\n                // console.log(auth.error);\r\n                // console.log(auth.error.error);\r\n                setLogError({\r\n                    error: auth.error.error\r\n                })\r\n            }\r\n        }\r\n    }, [auth])\r\n\r\n    if (auth.authenticate) {\r\n        return <Redirect to={`/`} />\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Layout>\r\n                <Container>\r\n                    <Row style={{ marginTop: '50px' }}>\r\n                        <Col md={{ span: 8, offset: 2 }}>\r\n                            <Form onSubmit={userLogin}>\r\n\r\n                                <Form.Group style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n                                    <Form.Text className=\"text-danger font-weight-bold\">\r\n                                        {\r\n                                            logError\r\n                                                ? logError.error\r\n                                                    ? logError.error\r\n                                                    : logError.message\r\n                                                : \"\"\r\n                                        }\r\n                                    </Form.Text>\r\n                                </Form.Group>\r\n\r\n                                <Form.Group as={Col} controlId=\"formBasicEmail\">\r\n                                    <InputDefault\r\n                                        name=\"email\"\r\n                                        label=\"Email Address\"\r\n                                        type=\"email\"\r\n                                        placeholder=\"Email Address\"\r\n                                        value={log.email}\r\n                                        onChange={handleLogInputs}\r\n                                    />\r\n                                    {/* <Form.Text className=\"text-muted\">\r\n                                        {error.email ? error.email.message : \"\"}\r\n                                    </Form.Text> */}\r\n                                </Form.Group>\r\n\r\n                                <Form.Group as={Col} controlId=\"formGridPass\">\r\n                                    <InputDefault\r\n                                        name=\"password\"\r\n                                        label=\"Password\"\r\n                                        type=\"password\"\r\n                                        placeholder=\"Password\"\r\n                                        value={log.password}\r\n                                        onChange={handleLogInputs}\r\n                                    />\r\n                                </Form.Group>\r\n\r\n                                <Form.Group style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n                                    <Button variant=\"primary\" type=\"submit\">\r\n                                        Submit\r\n                                    </Button>\r\n                                </Form.Group>\r\n\r\n                            </Form>\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n            </Layout>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default LoginScreen;","import React from 'react';\r\n\r\n// CSS\r\nimport './HomeScreen.css';\r\n\r\n// Routing\r\nimport { NavLink } from 'react-router-dom';\r\n\r\n// Bootstrap Components\r\nimport { Container, Col, Row } from 'react-bootstrap';\r\n\r\n// Components\r\nimport Layout from '../../components/Layout/Layout';\r\n\r\nconst HomeScreen = () => {\r\n    return (\r\n        <div>\r\n            <Layout sidebar>\r\n                Home\r\n            </Layout>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default HomeScreen;","\r\n\r\n\r\n// Components\r\nimport Layout from '../../components/Layout/Layout';\r\n\r\nconst OrdersScreen = () => {\r\n    return (\r\n        <Layout sidebar>\r\n            Orders\r\n        </Layout>\r\n    );\r\n};\r\n\r\nexport default OrdersScreen;","import React, { useEffect, useState } from 'react';\nimport './App.css';\n\n// Routing\nimport { Switch, Route } from 'react-router-dom';\nimport PrivateRoute from './HOC/PrivateRoute';\n\n// Components\nimport RegisterScreen from './views/RegisterScreen/RegisterScreen';\nimport CategoryScreen from './views/CategoryScreen/CategoryScreen';\nimport ProductScreen from './views/ProductsScreen/ProductScreen';\nimport LoginScreen from './views/LoginScreen/LoginScreen';\nimport HomeScreen from './views/HomeScreen/HomeScreen';\n\n\n// Redux\nimport { getAllCategories } from './redux/actions/category.actions';\nimport { isUserLoggedIn } from './redux/actions/adminAuth.actions'\nimport { useSelector, useDispatch } from 'react-redux';\nimport OrdersScreen from './views/OrdersScreen/OrdersScreen';\nimport { getInitialData } from './redux/actions/initialData.actions';\n\nfunction App() {\n\n  const auth = useSelector(state => state.auth);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    if (!auth.authenticate) {\n      dispatch(isUserLoggedIn());\n    }\n    // dispatch(getAllCategories());\n    dispatch(getInitialData());\n  }, [])\n\n  return (\n    <div className=\"App\">\n      <Switch>\n        <PrivateRoute exact path=\"/\" component={HomeScreen} />\n        <PrivateRoute path=\"/products\" component={ProductScreen} />\n        <PrivateRoute path=\"/orders\" component={OrdersScreen} />\n        <PrivateRoute path=\"/categories\" component={CategoryScreen} />\n        \n        <Route exact path=\"/register\" component={RegisterScreen} />\n        <Route exact path=\"/login\" component={LoginScreen} />\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","import * as actionTypes from '../constants/adminConstants';\r\n\r\n\r\nconst initialState = {\r\n    token: null,\r\n    user: {\r\n        _id: '',\r\n        firstName: '',\r\n        lastName: '',\r\n        email: '',\r\n        role: ''\r\n    },\r\n    authenticate: false,\r\n    authenticating: false,\r\n    loading: false,\r\n    error: null,\r\n    message: ''\r\n}\r\n\r\nexport const authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.ADMIN_LOGIN_REQUEST:\r\n            state = {\r\n                ...state,\r\n                authenticating: true\r\n            }\r\n            break;\r\n        case actionTypes.ADMIN_LOGIN_SUCCESS:\r\n            state = {\r\n                // ...state,\r\n                token: action.payload.token,\r\n                user: action.payload.user,\r\n                authenticate: true,\r\n                authenticating: false\r\n            }\r\n            break;\r\n        case actionTypes.ADMIN_LOGIN_FAIL:\r\n            state = {\r\n                authenticate: false,\r\n                authenticating: false,\r\n                error: action.payload,\r\n            }\r\n            break;\r\n        case actionTypes.ADMIN_LOGOUT_REQUEST:\r\n            state = {\r\n                state: {\r\n                    ...initialState,\r\n                    loading: true\r\n                }\r\n            }\r\n            break;\r\n        case actionTypes.ADMIN_LOGOUT_SUCCESS:\r\n            state = {\r\n                ...initialState,\r\n                loading: false,\r\n                authenticate: false,\r\n                authenticating: false\r\n            }\r\n            break;\r\n        case actionTypes.ADMIN_LOGOUT_FAIL:\r\n            state = {\r\n                authenticate: false,\r\n                authenticating: false,\r\n                loading: false,\r\n                error: action.payload,\r\n            }\r\n            break;\r\n    }\r\n    return state;\r\n}\r\n\r\nconst regInitialState = {\r\n    error: null,\r\n    message: '',\r\n    loading: false\r\n}\r\n\r\nexport const registrationReducer = (state = regInitialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.ADMIN_REGISTRATION_REQUEST:\r\n            state = {\r\n                ...state,\r\n                loading: true\r\n            }\r\n            break;\r\n        case actionTypes.ADMIN_REGISTRATION_SUCCESS:\r\n            state = {\r\n                ...state,\r\n                loading: false,\r\n                message: action.payload\r\n            }\r\n            break;\r\n        case actionTypes.ADMIN_REGISTRATION_FAIL:\r\n            // console.log(action.payload);\r\n            state = {\r\n                loading: false,\r\n                error: action.payload,\r\n            }\r\n            break;\r\n    }\r\n    return state;\r\n}","import * as actionTypes from '../constants/adminConstants';\r\n\r\nconst initialState = {\r\n    categoryList: [],\r\n    loading: false,\r\n    error: null\r\n};\r\n\r\nconst buildNewCategoryList = (parentId, categoryList, category) => {\r\n    const newCategoryList = [];\r\n\r\n    if (parentId === undefined) {\r\n        return [\r\n            ...categoryList,\r\n            {\r\n                _id: category._id,\r\n                name: category.name,\r\n                children: []\r\n            }\r\n        ]\r\n    }\r\n\r\n    for (const cat of categoryList) {\r\n\r\n        if (cat._id == parentId) {\r\n            const newCategory = {\r\n                _id: category._id,\r\n                name: category.name,\r\n                parentId: category.parentId,\r\n                children: []\r\n            }\r\n            newCategoryList.push({\r\n                ...cat,\r\n                children: cat.children.length > 0 ? [...cat.children, newCategory] : [newCategory]\r\n            })\r\n        } else {\r\n            newCategoryList.push({\r\n                ...cat,\r\n                children: cat.children ? buildNewCategoryList(parentId, cat.children, category) : []\r\n            })\r\n        }\r\n    }\r\n    // console.log(newCategoryList);\r\n    return newCategoryList;\r\n}\r\n\r\nexport const categoryReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.GET_ALL_CATEGORIES_REQUEST:\r\n            state = {\r\n                ...state,\r\n                loading: true\r\n            }\r\n            break;\r\n        case actionTypes.GET_ALL_CATEGORIES_SUCCESS:\r\n            state = {\r\n                ...state,\r\n                categoryList: action.payload.categoryList,\r\n                loading: false\r\n            }\r\n            break;\r\n        case actionTypes.ADD_NEW_CATEGORY_REQUEST:\r\n            state = {\r\n                ...state,\r\n                loading: true\r\n            }\r\n            break;\r\n        case actionTypes.ADD_NEW_CATEGORY_SUCCESS:\r\n\r\n            const category = action.payload.category;\r\n            const updatedCats = buildNewCategoryList(category.parentId, state.categoryList, category);\r\n            console.log(updatedCats);\r\n\r\n            state = {\r\n                ...state,\r\n                categoryList: updatedCats,\r\n                loading: false\r\n            }\r\n            break;\r\n        case actionTypes.ADD_NEW_CATEGORY_FAIL:\r\n            state = {\r\n                ...state,\r\n                error: action.payload\r\n            }\r\n            break;\r\n        case actionTypes.UPDATE_CATEGORIES_REQUEST:\r\n            state = {\r\n                ...state,\r\n                loading: true\r\n            }\r\n            break;\r\n        case actionTypes.UPDATE_CATEGORIES_SUCCESS:\r\n            state = {\r\n                ...state,\r\n                loading: false\r\n            }\r\n            break;\r\n        case actionTypes.UPDATE_CATEGORIES_FAIL:\r\n            state = {\r\n                ...state,\r\n                loading: false,\r\n                error: action.payload.error\r\n            }\r\n            break;\r\n        case actionTypes.DELETE_CATEGORIES_REQUEST:\r\n            state = {\r\n                ...state,\r\n                loading: true\r\n            }\r\n            break;\r\n        case actionTypes.DELETE_CATEGORIES_SUCCESS:\r\n            state = {\r\n                ...state,\r\n                loading: false\r\n            }\r\n            break;\r\n        case actionTypes.DELETE_CATEGORIES_FAIL:\r\n            state = {\r\n                ...state,\r\n                loading: false,\r\n                error: action.payload.error\r\n            }\r\n\r\n    }\r\n    return state\r\n}\r\n","import * as actionTypes from '../constants/adminConstants';\r\n\r\nconst initialState = {\r\n    products: [],\r\n    loading: false,\r\n    errors: null\r\n}\r\n\r\nexport const productReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.GET_ALL_PRODUCTS_REQUEST:\r\n            state = {\r\n                ...state,\r\n                loading: true\r\n            }\r\n            break;\r\n        case actionTypes.GET_ALL_PRODUCTS_SUCCESS:\r\n            state = {\r\n                ...state,\r\n                products: action.payload.products,\r\n                loading: false\r\n            }\r\n    }\r\n    return state;\r\n}","import { createStore, combineReducers, applyMiddleware } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport thunk from 'redux-thunk';\r\n\r\n\r\n// Reducers\r\nimport { authReducer, registrationReducer } from './reducers/adminReducer';\r\nimport {categoryReducer} from './reducers/category.reducer';\r\nimport {productReducer} from './reducers/product.reducer';\r\nimport {orderReducer} from './reducers/order.reducer';\r\n\r\nconst middleware = [thunk];\r\n\r\nconst reducer = combineReducers({\r\n    auth: authReducer,\r\n    regAuth: registrationReducer,\r\n    categoryState: categoryReducer,\r\n    productState: productReducer,\r\n    // order: orderReducer\r\n})\r\n\r\nconst store = createStore(\r\n    reducer,\r\n    composeWithDevTools(applyMiddleware(...middleware))\r\n)\r\n\r\nexport default store;","import ReactDOM from 'react-dom';\nimport React from 'react';\nimport App from './App';\nimport './index.css';\n\n// Routing\nimport { BrowserRouter as Router } from 'react-router-dom';\n\n// Redux\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <Router>\n      {/* <React.StrictMode> */}\n        <App />\n      {/* </React.StrictMode> */}\n    </Router>\n  </Provider>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}