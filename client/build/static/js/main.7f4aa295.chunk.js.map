{"version":3,"sources":["img/FarmToHomeLogoLong.png","components/Button/Button.jsx","redux/constants/cartConstants.js","redux/reducers/cartReducer.js","redux/constants/category.constants.js","redux/reducers/category.reducer.js","redux/constants/userConstants.js","redux/reducers/user.reducer.js","redux/constants/productConstants.js","redux/store.js","redux/reducers/productReducers.js","redux/actions/cartActions.js","components/ProductCard/ProductCard.jsx","redux/actions/category.actions.js","components/CategoryMenu/CategoryMenu.jsx","components/ProductSection/ProductSection.jsx","redux/actions/productActions.js","views/OurProductsScreen/OurProductsScreen.jsx","components/UI/Inputs/InputDefault.jsx","redux/actions/userAuth.actions.js","views/ProductScreen/ProductScreen.jsx","views/HomeScreen/HomeScreen.jsx","components/CartItem/CartItem.jsx","views/CartScreen/CartScreen.jsx","components/ProductOrderFormCard/OrderFormProduct.jsx","components/EasyOrderSection/EasyOrderSection.jsx","views/OrderForm/OrderForm.jsx","components/Navbar/MenuItems.jsx","components/Registration/RegistrationModal.jsx","components/Login/LoginModal.jsx","components/Navbar/NavBar.jsx","views/FilteredProductScreen/FilteredProductScreen.jsx","App.jsx","index.js","img/dairy-eggs-logo.png","img/beef-logo.png","img/pork-logo.png","img/poultry-logo.png","img/lamb-logo.png","img/goat-logo.png","img/honey-logo.png","img/express-packs-logo.png"],"names":["STYLES","SIZES","Button","children","type","onClick","buttonStyle","buttonSize","checkButtonStyle","includes","checkButtonSize","className","REMOVE_FROM_CART","ADD_TO_CART_REQUEST","ADD_TO_CART_SUCCESS","ADD_TO_CART_FAIL","CART_RESET_SUCCESS","initialState","cartItems","updatingCart","error","GET_ALL_CATEGORIES_REQUEST","GET_ALL_CATEGORIES_SUCCESS","categoryList","loading","USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_LOGOUT_REQUEST","USER_LOGOUT_SUCCESS","USER_LOGOUT_FAIL","USER_REGISTRATION_REQUEST","USER_REGISTRATION_SUCCESS","USER_REGISTRATION_FAIL","token","user","_id","firstName","lastName","email","role","authenticate","authenticating","message","regInitialState","GET_PRODUCTS_REQUEST","GET_PRODUCTS_SUCCESS","GET_PRODUCTS_FAIL","GET_FILTERED_PRODUCTS_REQUEST","GET_FILTERED_PRODUCTS_SUCCESS","GET_FILTERED_PRODUCTS_FAIL","GET_PRODUCT_DETAILS_REQUEST","GET_PRODUCT_DETAILS_SUCCESS","GET_PRODUCT_DETAILS_FAIL","GET_PRODUCT_DETAILS_RESET","reducer","combineReducers","auth","state","action","actionTypes","payload","regAuth","cart","categories","filteredProducts","products","getAllProducts","getProductDetails","product","middleware","thunk","INITIAL_STATE","localStorage","getItem","JSON","parse","store","createStore","composeWithDevTools","applyMiddleware","addToCart","id","qty","dispatch","getState","a","axios","get","data","appStore","category","name","productImage","price","measurement","description","inStock","sendIt","quantity","post","withCredentials","status","console","log","res","setItem","stringify","Product","productId","useState","setQty","useDispatch","src","alt","style","textAlign","marginBottom","padding","borderRadius","display","justifyContent","margin","toFixed","htmlFor","min","onChange","e","target","value","to","getAllCategories","CategoryMenu","useSelector","useEffect","length","renderCategories","myCategories","push","parentId","ProductSection","sectionImg","imageAlt","filterOne","filterTwo","filterThree","show","setShow","map","idx","response","OurProductsScreen","listProducts","listCategories","require","default","InputDefault","props","Form","Label","marginLeft","label","Control","placeholder","register","then","catch","err","ProductScreen","match","history","productDetails","params","HomeScreen","CartItem","item","qtyChangeHandler","removeFromCartHandler","CartScreen","setCartItems","removeFromCart","getCartCount","reduce","Number","cItem","getCartSubTotal","OrderFormProduct","width","alignItems","addToCartHandler","EasyOrderSection","colSpan","maxHeight","background","OrderForm","MenuItems","title","url","cName","RegistrationModal","size","onHide","handleClose","initialReg","password","confirmPassword","contactNumber","street1","street2","city","addressState","zip","reg","setReg","regError","setRegError","handleRegInputs","errorMessage","Modal","aria-labelledby","centered","Header","Title","Body","Container","Row","marginTop","Col","onSubmit","preventDefault","Group","Text","md","controlId","as","LoginModal","initialLog","setLog","logError","setLogError","handleLogInputs","login","NavBar","clicked","setClicked","loginModal","setLoginModal","hideLoginModal","regModal","setRegModal","hideRegModal","href","marginRight","clear","FilteredProductScreen","getFilteredProducts","App","exact","path","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7f4aa295.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/FarmToHomeLogoLong.b993482a.png\";","\r\n\r\nimport './Button.css';\r\n\r\nconst STYLES = [\r\n    'btn--primary',\r\n    'btn--outline',\r\n    'btn-disabled'\r\n]\r\n\r\nconst SIZES = [\r\n    'btn--med',\r\n    'btn--sm',\r\n    'btn--large'\r\n]\r\n\r\nexport const Button = ({\r\n    children,\r\n    type,\r\n    onClick,\r\n    buttonStyle,\r\n    buttonSize\r\n}) => {\r\n    const checkButtonStyle = STYLES.includes(buttonStyle) ? buttonSize : STYLES[0]\r\n\r\n    const checkButtonSize = SIZES.includes(buttonSize) ? buttonSize : SIZES[0]\r\n\r\n    return(\r\n        <button className={`btn ${checkButtonStyle} ${checkButtonSize}`} onClick = {onClick} type={type}>\r\n            {children}\r\n        </button>\r\n    )\r\n}","\r\n// OLD\r\nexport const ADD_TO_CART = \"ADD_TO_CART\";\r\nexport const REMOVE_FROM_CART = \"REMOVE_FROM_CART\";\r\nexport const CART_RESET = \"CART_RESET\";\r\n\r\n// Add to Local Cart\r\nexport const ADD_TO_CART_REQUEST = \"ADD_TO_CART_REQUEST\";\r\nexport const ADD_TO_CART_SUCCESS = \"ADD_TO_CART_SUCCESS\";\r\nexport const ADD_TO_CART_FAIL = \"ADD_TO_CART_FAIL\";\r\n\r\n// Add to User Cart on DB\r\nexport const ADD_TO_DB_CART_REQUEST = \"ADD_TO_DB_CART_REQUEST\";\r\nexport const ADD_TO_DB_CART_SUCCESS = \"ADD_TO_DB_CART_SUCCESS\";\r\nexport const ADD_TO_DB_CART_FAIL = \"ADD_TO_DB_CART_FAIL\";\r\n\r\n// Remove from Cart\r\nexport const REMOVE_FROM_CART_REQUEST = \"REMOVE_FROM_CART_REQUEST\";\r\nexport const REMOVE_FROM_CART_SUCCESS = \"REMOVE_FROM_CART_SUCCESS\";\r\nexport const REMOVE_FROM_CART_FAIL = \"REMOVE_FROM_CART_FAIL\";\r\n\r\n// Reset Cart\r\nexport const CART_RESET_REQUEST = \"CART_RESET_REQUEST\";\r\nexport const CART_RESET_SUCCESS = \"CART_RESET_SUCCESS\";\r\nexport const CART_RESET_FAIL = \"CART_RESET_FAIL\";","import * as actionTypes from '../constants/cartConstants';\r\n\r\nexport const cartReduce = (state = { cartItems: [] }, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.ADD_TO_CART:\r\n            const item = action.payload;\r\n\r\n            const existItem = state.cartItems.find((x) => x.product === item.product);\r\n\r\n            if (existItem) {\r\n                return {\r\n                    ...state,\r\n                    cartItems: state.cartItems.map((x) => x.product === existItem.product ? item : x)\r\n                };\r\n            } else {\r\n                return {\r\n                    ...state,\r\n                    cartItems: [...state.cartItems, item]\r\n                };\r\n            }\r\n        case actionTypes.REMOVE_FROM_CART:\r\n            return {\r\n                ...state,\r\n                cartItems: state.cartItems.filter((x) => x.product !== action.payload)\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nconst initialState = {\r\n    cartItems: [],\r\n    updatingCart: false,\r\n    error: null\r\n}\r\n\r\nexport const cartReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.ADD_TO_CART_REQUEST:\r\n            state = {\r\n                ...state,\r\n                updatingCart: true\r\n            }\r\n            break;\r\n        case actionTypes.ADD_TO_CART_SUCCESS:\r\n            state = {\r\n                ...state,\r\n                cartItems: action.payload.cartItems,\r\n                updatingCart: false\r\n            }\r\n            break;\r\n        case actionTypes.ADD_TO_CART_FAIL:\r\n            state = {\r\n                ...state,\r\n                updatingCart: false,\r\n                error: action.payload.error\r\n            }\r\n            break;\r\n        case actionTypes.CART_RESET_SUCCESS:\r\n            state = {\r\n                ...initialState\r\n            }\r\n    }\r\n    return state;\r\n}\r\n\r\n// export const cartReducer = (state = initialState, action) => {\r\n//     switch (action.type) {\r\n//         case actionTypes.ADD_TO_CART_REQUEST:\r\n//             state = {\r\n//                 ...state,\r\n//                 updatingCart: true\r\n//             }\r\n//             break;\r\n//         case actionTypes.ADD_TO_CART_SUCCESS:\r\n//             const item = action.payload;\r\n\r\n//             const existItem = state.cartItems.find((x) => x.product === item.product);\r\n\r\n//             if (existItem) {\r\n//                 state = {\r\n//                     ...state,\r\n//                     cartItems: state.cartItems.map((x) => x.product === existItem.product ? item : x),\r\n//                     updatingCart: false\r\n//                 };\r\n//                 break;\r\n//             } else {\r\n//                 state = {\r\n//                     ...state,\r\n//                     cartItems: [...state.cartItems, item],\r\n//                     updatingCart: false\r\n//                 };\r\n//                 break;\r\n//             }\r\n//         case actionTypes.ADD_TO_CART_FAIL:\r\n//             state = {\r\n//                 ...state,\r\n//                 updatingCart: false,\r\n//                 error: action.payload.error\r\n//             }\r\n//         case actionTypes.REMOVE_FROM_CART:\r\n//             return {\r\n//                 ...state,\r\n//                 cartItems: state.cartItems.filter((x) => x.product !== action.payload)\r\n//             }\r\n//     }\r\n//     return state;\r\n// }\r\n\r\n// export const cartRed = (state = initialState, action) => {\r\n//     switch (action.type) {\r\n//         case actionTypes.ADD_TO_CART_REQUEST:\r\n//             const item = action.payload;\r\n\r\n//             const existItem = state.cartItems.find((x) => x.product === item.product);\r\n\r\n//             if (existItem) {\r\n//                 state = {\r\n//                     ...state,\r\n//                     cartItems: state.cartItems.map((x) => x.product === existItem.product ? item : x),\r\n//                     updatingCart: true\r\n//                 };\r\n//             } else {\r\n//                 state = {\r\n//                     ...state,\r\n//                     cartItems: [...state.cartItems, item],\r\n//                     updatingCart: true\r\n//                 };\r\n//             }\r\n//             break;\r\n//         case actionTypes.ADD_TO_CART_SUCCESS:\r\n//             state = {\r\n//                 ...state,\r\n//                 cartItems: action.payload.cartItems,\r\n//                 updatingCart: false\r\n//             }\r\n//             break;\r\n//         case actionTypes.ADD_TO_CART_FAIL:\r\n//             state = {\r\n//                 ...state,\r\n//                 updatingCart: false,\r\n//                 error: action.payload.error\r\n//             }\r\n//     }\r\n//     return state;\r\n// }","\r\n\r\n// Get Categories\r\nexport const GET_ALL_CATEGORIES_REQUEST = \"GET_ALL_CATEGORIES_REQUEST\";\r\nexport const GET_ALL_CATEGORIES_SUCCESS = \"GET_ALL_CATEGORIES_SUCCESS\";\r\nexport const GET_ALL_CATEGORIES_FAIL = \"GET_ALL_CATEGORIES_FAIL\";","import * as actionTypes from '../constants/category.constants';\r\n\r\nconst initialState = {\r\n    categoryList: [],\r\n    loading: false,\r\n    error: null\r\n};\r\n\r\nconst buildNewCategoryList = (parentId, categoryList, category) => {\r\n    const newCategoryList = [];\r\n\r\n    if (parentId === undefined) {\r\n        return [\r\n            ...categoryList,\r\n            {\r\n                _id: category._id,\r\n                name: category.name,\r\n                children: []\r\n            }\r\n        ]\r\n    }\r\n\r\n    for (const cat of categoryList) {\r\n\r\n        if (cat._id == parentId) {\r\n            newCategoryList.push({\r\n                ...cat,\r\n                children: cat.children ? buildNewCategoryList(parentId, [\r\n                    ...cat.children,\r\n                    {\r\n                        _id: category._id,\r\n                        name: category.name,\r\n                        parentId: category.parentId,\r\n                        children: category.children\r\n                    }], category) : []\r\n            })\r\n        } else {\r\n            newCategoryList.push({\r\n                ...cat,\r\n                children: cat.children ? buildNewCategoryList(cat.parentId, cat.children, category) : []\r\n            })\r\n        }\r\n    }\r\n    return newCategoryList;\r\n}\r\n\r\nexport const categoryReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.GET_ALL_CATEGORIES_REQUEST:\r\n            state = {\r\n                ...state,\r\n                loading: true\r\n            }\r\n            break;\r\n        case actionTypes.GET_ALL_CATEGORIES_SUCCESS:\r\n            // console.log(action.payload);\r\n            state = {\r\n                ...state,\r\n                categoryList: action.payload.categoryList,\r\n                loading: false\r\n            }\r\n            break;\r\n    }\r\n    return state\r\n}\r\n","// ~~~~~~~~~~~~~~~~~~ User ~~~~~~~~~~~~~~~~~~\r\n\r\n// User Login\r\nexport const USER_LOGIN_REQUEST = \"USER_LOGIN_REQUEST\";\r\nexport const USER_LOGIN_SUCCESS = \"USER_LOGIN_SUCCESS\";\r\nexport const USER_LOGIN_FAIL = \"USER_LOGIN_FAIL\";\r\n\r\n// User Logout\r\nexport const USER_LOGOUT_REQUEST = \"USER_LOGOUT_REQUEST\";\r\nexport const USER_LOGOUT_SUCCESS = \"USER_LOGOUT_SUCCESS\";\r\nexport const USER_LOGOUT_FAIL = \"USER_LOGOUT_FAIL\";\r\n\r\n// User Registration\r\nexport const USER_REGISTRATION_REQUEST = \"USER_REGISTRATION_REQUEST\";\r\nexport const USER_REGISTRATION_SUCCESS = \"USER_REGISTRATION_SUCCESS\";\r\nexport const USER_REGISTRATION_FAIL = \"USER_REGISTRATION_FAIL\";","import * as actionTypes from '../constants/userConstants';\r\n\r\n\r\nconst initialState = {\r\n    token: null,\r\n    user: {\r\n        _id: '',\r\n        firstName: '',\r\n        lastName: '',\r\n        email: '',\r\n        role: ''\r\n    },\r\n    authenticate: false,\r\n    authenticating: false,\r\n    loading: false,\r\n    error: null,\r\n    message: ''\r\n}\r\n\r\nexport const authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.USER_LOGIN_REQUEST:\r\n            state = {\r\n                ...state,\r\n                authenticating: true\r\n            }\r\n            break;\r\n        case actionTypes.USER_LOGIN_SUCCESS:\r\n            state = {\r\n                // ...state,\r\n                token: action.payload.token,\r\n                user: action.payload.user,\r\n                authenticate: true,\r\n                authenticating: false\r\n            }\r\n            break;\r\n        case actionTypes.USER_LOGIN_FAIL:\r\n            state = {\r\n                authenticate: false,\r\n                authenticating: false,\r\n                error: action.payload,\r\n            }\r\n            break;\r\n        case actionTypes.USER_LOGOUT_REQUEST:\r\n            state = {\r\n                state: {\r\n                    ...initialState,\r\n                    loading: true\r\n                }\r\n            }\r\n            break;\r\n        case actionTypes.USER_LOGOUT_SUCCESS:\r\n            state = {\r\n                ...initialState,\r\n                loading: false,\r\n                authenticate: false,\r\n                authenticating: false\r\n            }\r\n            break;\r\n        case actionTypes.USER_LOGOUT_FAIL:\r\n            state = {\r\n                authenticate: false,\r\n                authenticating: false,\r\n                loading: false,\r\n                error: action.payload,\r\n            }\r\n            break;\r\n    }\r\n    return state;\r\n}\r\n\r\nconst regInitialState = {\r\n    error: null,\r\n    message: '',\r\n    loading: false\r\n}\r\n\r\nexport const registrationReducer = (state = regInitialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.USER_REGISTRATION_REQUEST:\r\n            state = {\r\n                ...state,\r\n                loading: true\r\n            }\r\n            break;\r\n        case actionTypes.USER_REGISTRATION_SUCCESS:\r\n            state = {\r\n                ...state,\r\n                loading: false,\r\n                message: action.payload\r\n            }\r\n            break;\r\n        case actionTypes.USER_REGISTRATION_FAIL:\r\n            // console.log(action.payload);\r\n            state = {\r\n                loading: false,\r\n                error: action.payload,\r\n            }\r\n            break;\r\n    }\r\n    return state;\r\n}","\r\n\r\nexport const GET_PRODUCTS_REQUEST = \"GET_PRODUCTS_REQUEST\";\r\nexport const GET_PRODUCTS_SUCCESS = \"GET_PRODUCTS_SUCCESS\";\r\nexport const GET_PRODUCTS_FAIL = \"GET_PRODUCTS_FAIL\";\r\n\r\nexport const GET_FILTERED_PRODUCTS_REQUEST = \"GET_FILTERED_PRODUCTS_REQUEST\";\r\nexport const GET_FILTERED_PRODUCTS_SUCCESS = \"GET_FILTERED_PRODUCTS_SUCCESS\";\r\nexport const GET_FILTERED_PRODUCTS_FAIL = \"GET_FILTERED_PRODUCTS_FAIL\";\r\n\r\nexport const GET_PRODUCT_DETAILS_REQUEST = \"GET_PRODUCT_DETAILS_REQUEST\";\r\nexport const GET_PRODUCT_DETAILS_SUCCESS = \"GET_PRODUCT_DETAILS_SUCCESS\";\r\nexport const GET_PRODUCT_DETAILS_FAIL = \"GET_PRODUCT_DETAILS_FAIL\";\r\nexport const GET_PRODUCT_DETAILS_RESET = \"GET_PRODUCT_DETAILS_RESET\";","import { createStore, combineReducers, applyMiddleware } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport thunk from 'redux-thunk';\r\n\r\n// Reducers\r\nimport { cartReducer } from './reducers/cartReducer';\r\nimport { categoryReducer } from './reducers/category.reducer'\r\nimport { authReducer, registrationReducer } from './reducers/user.reducer';\r\nimport { getProductDetailsReducer, getProductsReducer, filteredProductsReducer } from './reducers/productReducers';\r\n\r\nconst reducer = combineReducers({\r\n    auth: authReducer,\r\n    regAuth: registrationReducer,\r\n    cart: cartReducer,\r\n    categories: categoryReducer,\r\n    filteredProducts: filteredProductsReducer,\r\n    getAllProducts: getProductsReducer,\r\n    getProductDetails: getProductDetailsReducer\r\n})\r\n\r\nconst middleware = [thunk];\r\n\r\nconst cartFromLocalStorage = localStorage.getItem('cart') ? JSON.parse(localStorage.getItem('cart')) : []\r\n\r\nconst INITIAL_STATE = {\r\n    cart: {\r\n        cartItems: cartFromLocalStorage\r\n    }\r\n}\r\n\r\nconst store = createStore(\r\n    reducer,\r\n    INITIAL_STATE,\r\n    composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;\r\n","import * as actionTypes from '../constants/productConstants';\r\n\r\nexport const getProductsReducer = (state = { products: [] }, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.GET_PRODUCTS_REQUEST:\r\n            return {\r\n                loading: true,\r\n                products: []\r\n            }\r\n        case actionTypes.GET_PRODUCTS_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                products: action.payload\r\n            }\r\n        case actionTypes.GET_PRODUCTS_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload,\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const filteredProductsReducer = (state = { products: [] }, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.GET_FILTERED_PRODUCTS_REQUEST:\r\n            return {\r\n                loading: true,\r\n                products: []\r\n            }\r\n        case actionTypes.GET_FILTERED_PRODUCTS_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                products: action.payload\r\n            }\r\n        case actionTypes.GET_FILTERED_PRODUCTS_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload,\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const getProductDetailsReducer = (state = { product: {} }, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.GET_PRODUCT_DETAILS_REQUEST:\r\n            return {\r\n                loading: true\r\n            }\r\n        case actionTypes.GET_PRODUCT_DETAILS_SUCCESS:\r\n            return {\r\n                loading:false,\r\n                product: action.payload\r\n            }\r\n        case actionTypes.GET_PRODUCT_DETAILS_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        case actionTypes.GET_PRODUCT_DETAILS_RESET:\r\n            return {\r\n                product: {}\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n","import * as actionTypes from '../constants/cartConstants';\r\nimport store from '../store';\r\nimport axios from 'axios';\r\n\r\nexport const getCartItems = () => {\r\n    return async (dispatch) => {\r\n        try {\r\n            dispatch({ type: actionTypes.ADD_TO_CART_REQUEST });\r\n            const res = await axios.get(`/api/user/cart`);\r\n            if (res.status === 200) {\r\n                // console.log(res.data);\r\n                const cartItems = res.data;\r\n                // console.log(cartItems);\r\n                if (cartItems) {\r\n                    dispatch({\r\n                        type: actionTypes.ADD_TO_CART_SUCCESS,\r\n                        payload: { cartItems },\r\n                    });\r\n                }\r\n            }\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    };\r\n};\r\n\r\nexport const addToCart = (id, qty) => async (dispatch, getState) => {\r\n\r\n    dispatch({\r\n        type: actionTypes.ADD_TO_CART_REQUEST\r\n    })\r\n\r\n    const { data } = await axios.get(`/api/products/${id}`);\r\n    const appStore = store.getState();\r\n    const auth = appStore.auth;\r\n    const currentCart = JSON.parse(localStorage.getItem('cart'))\r\n\r\n    if (qty < 1) { qty = 1; }\r\n    const payload = {\r\n        product: data._id,\r\n        category: data.category,\r\n        name: data.name,\r\n        productImage: data.productImage,\r\n        price: data.price,\r\n        measurement: data.measurement,\r\n        description: data.description,\r\n        inStock: data.inStock,\r\n        qty\r\n    }\r\n\r\n    if (auth.authenticate) {\r\n        // try to add to DB\r\n        const sendIt = {\r\n            cartItems: [\r\n                {\r\n                    product: payload.product,\r\n                    quantity: payload.qty\r\n                }\r\n            ]\r\n        }\r\n        const res = await axios.post(`/api/user/cart/add`, sendIt, { withCredentials: true })\r\n        if (res.status === 201) {\r\n            console.log('status is 201');\r\n            dispatch(getCartItems());\r\n        } else {\r\n            console.log('status is not 201');\r\n        }\r\n\r\n\r\n    } else {\r\n        // add to local storage\r\n        dispatch({\r\n            type: actionTypes.ADD_TO_CART_SUCCESS,\r\n            payload: payload\r\n        })\r\n        localStorage.setItem('cart', JSON.stringify(getState().cart.cartItems));\r\n    }\r\n\r\n}\r\n\r\n// export const addToCart = (id, qty) => async (dispatch, getState) => {\r\n\r\n//     dispatch({\r\n//         type: actionTypes.ADD_TO_CART_REQUEST\r\n//     })\r\n\r\n//     const { data } = await axios.get(`/api/products/${id}`);\r\n//     const appStore = store.getState();\r\n//     const auth = appStore.auth;\r\n//     const currentCart = JSON.parse(localStorage.getItem('cart'))\r\n\r\n//     if (qty < 1) { qty = 1; }\r\n//     const payload = {\r\n//         product: data._id,\r\n//         category: data.category,\r\n//         name: data.name,\r\n//         productImage: data.productImage,\r\n//         price: data.price,\r\n//         measurement: data.measurement,\r\n//         description: data.description,\r\n//         inStock: data.inStock,\r\n//         qty\r\n//     }\r\n\r\n//     if (auth.authenticate) {\r\n//         // try to add to DB\r\n//         dispatch({\r\n//             type: actionTypes.ADD_TO_DB_CART_REQUEST\r\n//         })\r\n//         const data = {\r\n//             cartItems: [\r\n//                 {\r\n//                     product: payload.product,\r\n//                     quantity: payload.qty\r\n//                 }\r\n//             ]\r\n//         }\r\n//         const res = await axios.post('/api/user/cart/add', data, { withCredentials: true })\r\n//         if (res.status === 201) {\r\n//             dispatch(getCartItems());\r\n//         }\r\n//     } else {\r\n//         // add to local storage\r\n//         dispatch({\r\n//             type: actionTypes.ADD_TO_CART_SUCCESS,\r\n//             payload: payload\r\n//         })\r\n//         localStorage.setItem('cart', JSON.stringify(getState().cart.cartItems));\r\n//     }\r\n\r\n// }\r\n\r\n// export const addToCart = (id, qty) => async (dispatch, getState) => {\r\n\r\n//     const { data } = await axios.get(`/api/products/${id}`);\r\n//     const currentCart = JSON.parse(localStorage.getItem('cart'))\r\n\r\n//     if (qty < 1) { qty = 1; }\r\n\r\n//     dispatch({\r\n//         type: actionTypes.ADD_TO_CART,\r\n//         payload: {\r\n//             product: data._id,\r\n//             category: data.category,\r\n//             name: data.name,\r\n//             productImage: data.productImage,\r\n//             price: data.price,\r\n//             measurement: data.measurement,\r\n//             description: data.description,\r\n//             inStock: data.inStock,\r\n//             qty\r\n//         }\r\n//     })\r\n\r\n//     localStorage.setItem('cart', JSON.stringify(getState().cart.cartItems));\r\n// }\r\n\r\nexport const removeFromCart = (id) => (dispatch, getState) => {\r\n    dispatch({\r\n        type: actionTypes.REMOVE_FROM_CART,\r\n        payload: id\r\n    })\r\n\r\n    localStorage.setItem('cart', JSON.stringify(getState().cart.cartItems));\r\n}\r\n","import { useState, useEffect } from 'react';\r\n\r\n// CSS\r\nimport './ProductCard.css';\r\n\r\n// Routing\r\nimport { Link } from 'react-router-dom';\r\n\r\n// Components\r\nimport { Button } from '../../components/Button/Button'\r\n\r\n// Redux\r\nimport { useDispatch } from 'react-redux';\r\nimport { addToCart } from '../../redux/actions/cartActions';\r\n\r\n\r\nconst Product = ({ productId, category, name, productImage, price, measurement, description, inStock }) => {\r\n\r\n    const [qty, setQty] = useState(0);\r\n    const dispatch = useDispatch();\r\n\r\n    const addToCartHandler = () => {\r\n        if (qty < 1) {\r\n            setQty(1);\r\n        }\r\n        dispatch(addToCart(productId, qty));\r\n    }\r\n\r\n    return (\r\n        <div className=\"product\">\r\n            <img src={productImage} alt={name} />\r\n            <div className=\"product-info\">\r\n                <h1\r\n                    style={{\r\n                        textAlign: 'center',\r\n                        marginBottom: '15px',\r\n                        padding: '15px 2px',\r\n                        borderRadius: '4px'\r\n                    }}\r\n                    className=\"info-name\"\r\n                >{name}\r\n                </h1>\r\n                {/* <p className=\"info-description\">{description}</p> */}\r\n                <div\r\n                    style={{\r\n                        display: 'flex',\r\n                        justifyContent: 'space-between',\r\n                        margin: '0px 0px 0px 0px'\r\n                    }}\r\n                    className=\"info-price\"\r\n                >\r\n                    <p>\r\n                        ${price.toFixed(2)} / {measurement}\r\n                    </p>\r\n                    <p>\r\n                        {inStock ? \" In Stock.\" : \" Out Of Stock.\"}\r\n                    </p>\r\n                </div>\r\n                <p className=\"add-to-cart-quantity\">\r\n                    <label htmlFor=\"quantity\">Quantity: </label>\r\n                    <input\r\n                        min=\"0\"\r\n                        type=\"number\"\r\n                        name=\"quantity\"\r\n                        onChange={(e) => e.target.value < 0 ? setQty(0) : setQty(e.target.value)}\r\n                        value={qty}\r\n                    />\r\n                </p>\r\n                <p className=\"add-to-cart-button\">\r\n                    {\r\n                        inStock\r\n                            ? <Button buttonSize=\"btn--sm\" onClick={addToCartHandler}>Add To Cart</Button>\r\n                            : <Button buttonSize=\"btn--sm\" buttonStyle='btn-disabled'>Add To Cart</Button>\r\n                    }\r\n\r\n                </p>\r\n                <Link to={`/product/${productId}`} className=\"info-button btn--primary btn--sm\">View</Link>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Product;","import * as actionTypes from '../constants/category.constants';\r\nimport axios from 'axios';\r\n\r\nexport const getAllCategories = () => {\r\n    return async dispatch => {\r\n        dispatch({\r\n            type: actionTypes.GET_ALL_CATEGORIES_REQUEST\r\n        });\r\n\r\n        const res = await axios.get(`/api/categories`);\r\n\r\n        if (res.status === 200) {\r\n            const { categoryList } = res.data\r\n            dispatch({\r\n                type: actionTypes.GET_ALL_CATEGORIES_SUCCESS,\r\n                payload: { categoryList: categoryList }\r\n            })\r\n        } else {\r\n            dispatch({\r\n                type: actionTypes.GET_ALL_CATEGORIES_FAIL,\r\n                payload: { error: res.data.error }\r\n            })\r\n        }\r\n    }\r\n}","import { useEffect } from 'react';\r\n\r\n// Routing\r\nimport { Link } from 'react-router-dom';\r\n\r\n// CSS\r\nimport './CategoryMenu.css';\r\n\r\n// Redux\r\nimport { getAllCategories } from '../../redux/actions/category.actions';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nconst CategoryMenu = () => {\r\n\r\n    const categories = useSelector(state => state.categories);\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        dispatch(getAllCategories())\r\n    }, [])\r\n\r\n    // Generare a list of the categories and their children to display on page\r\n    const renderCategories = (categories) => {\r\n        let myCategories = [];\r\n        for (let category of categories) {\r\n            myCategories.push(\r\n                <li key={category._id}>\r\n                    {\r\n                        category.parentId\r\n                            ? <Link className=\"btn btn--primary btn--med\" to={`/category/${category.name}`}>{category.name}</Link>\r\n                            : <span>{category.name}</span>\r\n                    }\r\n                    {category.children.length > 0 ? (<ul>{renderCategories(category.children)}</ul>) : null}\r\n                </li>\r\n            );\r\n        }\r\n        // console.log(myCategories);\r\n        return myCategories;\r\n    }\r\n\r\n    return (\r\n        <div className=\"cat-menu-header\">\r\n            <ul>\r\n                {\r\n                    categories.categoryList.length > 0\r\n                        ? renderCategories(categories.categoryList)\r\n                        : null\r\n                }\r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CategoryMenu;","import { useEffect, useState } from 'react';\r\n\r\n// CSS\r\nimport './ProductSection.css';\r\n\r\n// Components\r\nimport Product from '../ProductCard/ProductCard';\r\n\r\nconst ProductSection = ({ products, loading, error, sectionImg, imageAlt, filterOne, filterTwo, filterThree }) => {\r\n\r\n    const [show, setShow] = useState(false);\r\n\r\n    const handleShow = () => {\r\n        setShow(!show);\r\n    }\r\n\r\n    return (\r\n        <div className=\"product-section\">\r\n            <div className=\"sectionImg\">\r\n                <img onClick={handleShow} src={sectionImg} alt={imageAlt} />\r\n            </div>\r\n            <div className={show ? \"our-products-screen-products show\" : \"our-products-screen-products\"}>\r\n                {\r\n                    loading ? (\r\n                        <h2>Loading...</h2>\r\n                    ) : error ? (\r\n                        <h2>{error}</h2>\r\n                    ) :\r\n                        products.products\r\n                            ? products.products.map((product, idx) =>\r\n                                product.category.name === filterOne\r\n                                    || product.category.name === filterTwo\r\n                                    || product.category.name === filterThree\r\n                                    ? <Product key={idx}\r\n                                        productId={product._id}\r\n                                        category={product.category._id}\r\n                                        name={product.name}\r\n                                        productImage={product.productImage}\r\n                                        price={product.price}\r\n                                        measurement={product.measurement}\r\n                                        description={product.description}\r\n                                        inStock={product.inStock}\r\n                                    />\r\n                                    : null\r\n                            )\r\n                            : null\r\n                }\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ProductSection;","import * as actionTypes from '../constants/productConstants';\r\nimport axios from 'axios';\r\n\r\n\r\nexport const getAllProducts = () => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: actionTypes.GET_PRODUCTS_REQUEST });\r\n\r\n        const res = await axios.get(`/api/categories/products`);\r\n\r\n        if (res.status === 200) {\r\n            dispatch({\r\n                type: actionTypes.GET_PRODUCTS_SUCCESS,\r\n                payload: res.data\r\n            })\r\n        }\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: actionTypes.GET_PRODUCTS_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message\r\n        });\r\n    };\r\n};\r\n\r\nexport const getProductsByCat = (name) => {\r\n    return async (dispatch) => {\r\n        \r\n        dispatch({\r\n            type: actionTypes.GET_FILTERED_PRODUCTS_REQUEST\r\n        })\r\n\r\n        const res = await axios.get(`/api/category/products/${name}`);\r\n        if (res.status === 200) {\r\n            dispatch({\r\n                type: actionTypes.GET_FILTERED_PRODUCTS_SUCCESS,\r\n                payload: res.data\r\n            })\r\n        } else {\r\n            dispatch({\r\n                type: actionTypes.GET_FILTERED_PRODUCTS_FAIL,\r\n                payload: {error: res.data.error}\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport const getProductDetails = (id) => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: actionTypes.GET_PRODUCT_DETAILS_REQUEST });\r\n\r\n        const { data } = await axios.get(`/api/products/${id}`);\r\n\r\n        dispatch({\r\n            type: actionTypes.GET_PRODUCT_DETAILS_SUCCESS,\r\n            payload: data\r\n        });\r\n    } catch (error) {\r\n        dispatch({\r\n            type: actionTypes.GET_PRODUCT_DETAILS_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message\r\n        });\r\n    }\r\n};\r\n\r\nexport const removeProductDetails = () => (dispatch) => {\r\n    dispatch({\r\n        type: actionTypes.GET_PRODUCT_DETAILS_RESET\r\n    });\r\n};","import './OurProductsScreen.css';\r\nimport { useEffect } from 'react';\r\n\r\n// Components\r\nimport Product from '../../components/ProductCard/ProductCard';\r\nimport CategoryMenu from '../../components/CategoryMenu/CategoryMenu';\r\nimport ProductSection from '../../components/ProductSection/ProductSection';\r\n\r\n// Redux\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { getAllProducts as listProducts } from '../../redux/actions/productActions';\r\nimport { getAllCategories as listCategories } from '../../redux/actions/category.actions';\r\n\r\nconst OurProductsScreen = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const getAllProducts = useSelector((state) => state.getAllProducts);\r\n    const { products, loading, error } = getAllProducts;\r\n\r\n    const getAllCategories = useSelector((state) => state.categories);\r\n    const { categoryList } = getAllCategories;\r\n    // console.log(categoryList);\r\n\r\n    useEffect(() => {\r\n        dispatch(listProducts())\r\n        dispatch(listCategories())\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            <CategoryMenu />\r\n            <div className=\"our-products-screen\">\r\n                <ProductSection\r\n                    filterOne={'Milk'}\r\n                    filterTwo={\"Cheese\"}\r\n                    filterThree={\"Eggs\"}\r\n                    sectionImg={require('../../img/dairy-eggs-logo.png').default}\r\n                    imageAlt={'dairy-eggs-logo'}\r\n                    products={products}\r\n                    loading={loading}\r\n                    error={error}\r\n                />\r\n                <ProductSection\r\n                    filterOne={'Beef'}\r\n                    sectionImg={require('../../img/beef-logo.png').default}\r\n                    imageAlt={'beef-logo'}\r\n                    products={products}\r\n                    loading={loading}\r\n                    error={error}\r\n                />\r\n                <ProductSection\r\n                    filterOne={'Pork'}\r\n                    sectionImg={require('../../img/pork-logo.png').default}\r\n                    imageAlt={'pork-logo'}\r\n                    products={products}\r\n                    loading={loading}\r\n                    error={error}\r\n                />\r\n                <ProductSection\r\n                    filterOne={'Chicken'}\r\n                    filterTwo={\"Turkey\"}\r\n                    sectionImg={require('../../img/poultry-logo.png').default}\r\n                    imageAlt={'poultry-logo'}\r\n                    products={products}\r\n                    loading={loading}\r\n                    error={error}\r\n                />\r\n                <ProductSection\r\n                    filterOne={'Lamb'}\r\n                    sectionImg={require('../../img/lamb-logo.png').default}\r\n                    imageAlt={'lamb-logo'}\r\n                    products={products}\r\n                    loading={loading}\r\n                    error={error}\r\n                />\r\n                <ProductSection\r\n                    filterOne={'Goat'}\r\n                    sectionImg={require('../../img/goat-logo.png').default}\r\n                    imageAlt={'goat-logo'}\r\n                    products={products}\r\n                    loading={loading}\r\n                    error={error}\r\n                />\r\n                <ProductSection\r\n                    filterOne={'Raw Honey'}\r\n                    filterTwo={\"Creamed Honey\"}\r\n                    sectionImg={require('../../img/honey-logo.png').default}\r\n                    imageAlt={'honey-logo'}\r\n                    products={products}\r\n                    loading={loading}\r\n                    error={error}\r\n                />\r\n                <ProductSection\r\n                    filterOne={'Packs'}\r\n                    sectionImg={require('../../img/express-packs-logo.png').default}\r\n                    imageAlt={'express-packs-logo'}\r\n                    products={products}\r\n                    loading={loading}\r\n                    error={error}\r\n                />\r\n\r\n            </div>\r\n        </>\r\n    )\r\n}\r\nexport default OurProductsScreen;\r\n\r\n\r\n\r\n{/* <div>\r\n                    <img src={require('../../img/beef-logo.png').default} alt=\"beef-logo\" />\r\n                </div>\r\n                <div className=\"our-products-screen-products\">\r\n                    {\r\n                        loading ? (\r\n                            <h2>Loading...</h2>\r\n                        ) : error ? (\r\n                            <h2>{error}</h2>\r\n                        ) :\r\n                            products.products\r\n                                ? products.products.map((product, idx) =>\r\n                                    product.category.name == \"Beef\"\r\n                                        ? <Product key={idx}\r\n                                            productId={product._id}\r\n                                            category={product.category._id}\r\n                                            name={product.name}\r\n                                            productImage={product.productImage}\r\n                                            price={product.price}\r\n                                            measurement={product.measurement}\r\n                                            description={product.description}\r\n                                            inStock={product.inStock}\r\n                                        />\r\n                                        : null\r\n                                )\r\n                                : null\r\n                    }\r\n\r\n                </div> */}\r\n\r\n\r\n\r\n\r\n\r\n\r\n// const testCatList = (categories) => {\r\n    //     let newCatList = [];\r\n    //     let subCats = [];\r\n    //     for (const category of categories) {\r\n    //         newCatList.push(\r\n    //             category._id\r\n    //         )\r\n    //         if (category.children.length > 0) {\r\n    //             subCats.push(\r\n    //                 testCatList(category.children)\r\n    //             )\r\n    //         }\r\n    //     }\r\n    //     for (const arr of subCats) {\r\n    //         for (const catId of arr) {\r\n    //             newCatList.push(\r\n    //                 catId\r\n    //             )\r\n    //         }\r\n    //     }\r\n        // console.log(subCats);\r\n    //     return newCatList;\r\n    // }\r\n\r\n    // const catList = testCatList(categoryList);\r\n    // console.log(catList[17]);\r\n\r\n    // const workPlease = (catList, products) => {\r\n    //     const output = [];\r\n    //     for (const categoryId of catList) {\r\n    //         products.map((product, idx) => {\r\n    //             if (product.category === categoryId) {\r\n    //                 output.push(\r\n    //                     <>\r\n    //                         <Product key={idx}\r\n    //                             productId={product._id}\r\n    //                             category={product.category}\r\n    //                             name={product.name}\r\n    //                             productImage={product.productImage}\r\n    //                             price={product.price}\r\n    //                             measurement={product.measurement}\r\n    //                             description={product.description}\r\n    //                             inStock={product.inStock}\r\n    //                         />\r\n    //                     </>\r\n    //                 )\r\n    //             }\r\n    //         })\r\n    //     }\r\n    //     return output;\r\n    // }\r\n","import { Form, Col } from 'react-bootstrap';\r\n\r\n\r\n/**\r\n * @author\r\n * @function InputDefault\r\n */\r\n\r\nconst InputDefault = (props) => {\r\n    return (\r\n        <>\r\n            <Form.Label style={{marginLeft: '2px'}}>{props.label}</Form.Label>\r\n            <Form.Control\r\n                type={props.type}\r\n                name={props.name}\r\n                placeholder={props.placeholder}\r\n                value={props.value}\r\n                onChange={props.onChange}\r\n            />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default InputDefault;\r\n\r\n\r\n//  controlId: formBasic{field-type-here} / formGridText{field-type-here}","import * as actionTypes from '../constants/userConstants';\r\nimport axios from 'axios';\r\n\r\n\r\nexport const register = (user) => {\r\n    return async (dispatch) => {\r\n\r\n        dispatch({\r\n            type: actionTypes.USER_REGISTRATION_REQUEST,\r\n            payload: {\r\n                ...user\r\n            }\r\n        });\r\n\r\n        await axios.post(`http://localhost:8000/api/users/register`, { ...user }, { withCredentials: true })\r\n            .then(res => {\r\n                // console.log(res.data);\r\n                if (res.data.message) {\r\n                    const { message } = res.data;\r\n                    // console.log(message);\r\n                    dispatch({\r\n                        type: actionTypes.USER_REGISTRATION_SUCCESS,\r\n                        payload: {\r\n                            message\r\n                        }\r\n                    })\r\n                } else {\r\n                    // console.log(\"number 1\");\r\n                    dispatch({\r\n                        type: actionTypes.USER_REGISTRATION_FAIL,\r\n                        payload: {\r\n                            error: res.data\r\n                        }\r\n                    })\r\n                }\r\n            })\r\n            .catch(err => {\r\n                // console.log(\"number 2\");\r\n                // if (err) {\r\n                //     console.log(err.response);\r\n                // }\r\n                dispatch({\r\n                    type: actionTypes.USER_REGISTRATION_FAIL,\r\n                    payload: {\r\n                        error: err.response.data.error\r\n                    }\r\n                })\r\n            })\r\n    }\r\n}\r\n\r\n\r\nexport const login = (user) => {\r\n    return async (dispatch) => {\r\n\r\n        dispatch({\r\n            type: actionTypes.USER_LOGIN_REQUEST,\r\n            payload: {\r\n                ...user\r\n            }\r\n        });\r\n\r\n        await axios.post(`http://localhost:8000/api/users/login`, { ...user }, { withCredentials: true })\r\n            .then(res => {\r\n                // console.log(res.data);\r\n                if (res.data.message) {\r\n                    const { token, user } = res.data;\r\n                    localStorage.setItem('token', token);\r\n                    localStorage.setItem('user', JSON.stringify(user));\r\n                    dispatch({\r\n                        type: actionTypes.USER_LOGIN_SUCCESS,\r\n                        payload: {\r\n                            token, user\r\n                        }\r\n                    })\r\n                } else {\r\n                    // console.log('inside the else');\r\n                    // console.log(res.data);\r\n                    dispatch({\r\n                        type: actionTypes.USER_LOGIN_FAIL,\r\n                        payload: res.data\r\n                    })\r\n                }\r\n            })\r\n            .catch(err => {\r\n                // console.log('.catch');\r\n                // console.log(err.response.data);\r\n                dispatch({\r\n                    type: actionTypes.USER_LOGIN_FAIL,\r\n                    payload: err.response.data\r\n                })\r\n            })\r\n    }\r\n}\r\n\r\nexport const isUserLoggedIn = () => {\r\n    return async (dispatch) => {\r\n        const token = localStorage.getItem('token');\r\n        if (token) {\r\n            const user = JSON.parse(localStorage.getItem('user'));\r\n            dispatch({\r\n                type: actionTypes.USER_LOGIN_SUCCESS,\r\n                payload: {\r\n                    token, user\r\n                }\r\n            })\r\n        }\r\n        // else {\r\n        //     dispatch({\r\n        //         type: actionTypes.ADMIN_LOGIN_FAIL,\r\n        //         payload: {\r\n        //             error: 'Failed to login.' \r\n        //         }\r\n        //     })\r\n        // }\r\n    }\r\n}\r\n\r\nexport const logout = () => {\r\n    return async (dispatch) => {\r\n\r\n        dispatch({\r\n            type: actionTypes.USER_LOGOUT_REQUEST\r\n        });\r\n\r\n        const token = localStorage.getItem('token');\r\n\r\n        await axios.post(`http://localhost:8000/api/users/logout`, token, { withCredentials: true })\r\n            .then(res => {\r\n                if (res.status === 200) {\r\n                    // console.log(\"success\");\r\n                    localStorage.clear();\r\n                    dispatch({\r\n                        type: actionTypes.USER_LOGOUT_SUCCESS\r\n                    });\r\n                } else {\r\n                    dispatch({\r\n                        type: actionTypes.USER_LOGOUT_FAIL,\r\n                        payload: res.data.error\r\n                    });\r\n                }\r\n            })\r\n            .catch(err => {\r\n                console.log(err.response.data);\r\n                dispatch({\r\n                    type: actionTypes.USER_LOGOUT_FAIL,\r\n                    payload: err.response.data\r\n                })\r\n            })\r\n    }\r\n}\r\n\r\n","import './ProductScreen.css';\r\nimport { useState, useEffect } from 'react';\r\n\r\n// Components\r\nimport { Button } from '../../components/Button/Button'\r\n\r\n// Redux\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getProductDetails } from '../../redux/actions/productActions';\r\nimport { addToCart } from '../../redux/actions/cartActions';\r\n\r\nconst ProductScreen = ({ match, history }) => {\r\n\r\n    const [qty, setQty] = useState(1);\r\n    const dispatch = useDispatch();\r\n\r\n    const productDetails = useSelector(state => state.getProductDetails);\r\n    const { loading, error, product } = productDetails;\r\n\r\n    useEffect(() => {\r\n        if (product && match.params.id !== product._id) {\r\n            dispatch(getProductDetails(match.params.id))\r\n        }\r\n    }, [dispatch, product, match]);\r\n\r\n    const addToCartHandler = () => {\r\n        dispatch(addToCart(product._id, qty));\r\n        history.push('/cart');\r\n        // history.goBack();\r\n    }\r\n\r\n    return (\r\n        <div className=\"product-screen\">\r\n            {loading ? <h2>Loading...</h2> : error ? <h2>{error}</h2> :\r\n                <>\r\n                    <div className=\"product-screen-left\">\r\n                        <div className=\"left-image\">\r\n                            <img src={product.productImage} alt=\"product name\" />\r\n                        </div>\r\n                        <div className=\"left-info\">\r\n                            <p className=\"left-name\">{product.name}</p>\r\n                            <p className=\"left-price\">${product.price} / {product.measurement}</p>\r\n                            <p className=\"left-description\">{product.description}</p>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"product-screen-right\">\r\n                        <div className=\"right-info\">\r\n                            <p className=\"right-price\">\r\n                                Price: <span className=\"right-price-span\">${product.price} / {product.measurement}</span>\r\n                            </p>\r\n                            <p className=\"right-status\">\r\n                                Status: <span className=\"right-status-span\">{product.inStock ? \"In Stock.\" : \"Out Of Stock.\"}</span>\r\n                            </p>\r\n                            <p className=\"right-quantity\">\r\n                                <label htmlFor=\"quantity\">Quantity</label>\r\n                                <input \r\n                                    min=\"0\"\r\n                                    type=\"number\" \r\n                                    name=\"quantity\" \r\n                                    onChange={(e) => e.target.value < 1 ? setQty(1) : setQty(e.target.value)}\r\n                                    value={qty}\r\n                                />\r\n                            </p>\r\n                            <p className=\"right-button\">\r\n                                <Button onClick={addToCartHandler}>Add To Cart</Button>\r\n                                {/* <button type=\"button\">Add To Cart</button> */}\r\n                            </p>\r\n                        </div>\r\n                    </div>\r\n                </>\r\n            }\r\n        </div>\r\n    )\r\n}\r\nexport default ProductScreen;","import './HomeScreen.css';\r\n\r\n// Components\r\n\r\n\r\nconst HomeScreen = () => {\r\n\r\n    return (\r\n        <div className=\"homescreen\">\r\n            <h2 className=\"homescreen-title\">Home</h2>\r\n            <div className=\"homescreen-products\">\r\n                \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default HomeScreen;","import './CartItem.css';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst CartItem = ({ item, qtyChangeHandler, removeFromCartHandler }) => {\r\n\r\n    // console.log(item);\r\n\r\n    return (\r\n        <div className=\"cart-item\">\r\n            <div className=\"cart-item-image\">\r\n                <img src={item.product.productImage} alt={item.product.name} />\r\n            </div>\r\n            <Link to={`/product/${item.product._id}`} className=\"btn btn--primary btn--med cart-item-name\">\r\n                {item.product.name}\r\n            </Link>\r\n            <p className=\"cart-item-price\">\r\n                ${item.product.price.toFixed(2)} / \r\n                {\r\n                    item.product.name.includes('Calf') || item.product.name.includes('Box')\r\n                        ? \" pack\"\r\n                        : item.product.measurement\r\n                }\r\n            </p>\r\n            <p className=\"right-quantity\">\r\n                <label htmlFor=\"quantity\">Quantity</label>\r\n                <input\r\n                    min=\"1\"\r\n                    type=\"number\"\r\n                    name=\"quantity\"\r\n                    onChange={(e) => e.target.value <= 0 ? item.quantity = 1 : qtyChangeHandler(item.product._id, e.target.value) }\r\n                    value={item.quantity}\r\n                />\r\n            </p>\r\n\r\n            <button\r\n                className=\"cart-item-delete-btn btn btn--primary btn--med\"\r\n                onClick={() => removeFromCartHandler(item.product.product)}\r\n            >\r\n                <i className=\"fas fa-trash\"></i>\r\n            </button>\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\nexport default CartItem;","import './CartScreen.css';\r\nimport { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\n\r\n// Components\r\nimport CartItem from '../../components/CartItem/CartItem';\r\nimport { Button } from '../../components/Button/Button';\r\nimport { addToCart, removeFromCart, getCartItems } from '../../redux/actions/cartActions';\r\n\r\n\r\n\r\n\r\n\r\nconst CartScreen = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const auth = useSelector((state) => state.auth);\r\n\r\n    const cart = useSelector(state => state.cart);\r\n    const [cartItems, setCartItems] = useState(cart.cartItems);\r\n\r\n    useEffect(() => {\r\n        setCartItems(cart.cartItems);\r\n    }, [cart.cartItems]);\r\n\r\n    // useEffect(() => {\r\n    //     if (auth.authenticate) {\r\n    //         dispatch(getCartItems());\r\n    //     }\r\n    // }, [auth.authenticate]);\r\n\r\n    const qtyChangeHandler = (id, qty) => {\r\n        dispatch(addToCart(id, qty));\r\n    }\r\n\r\n    const removeFromCartHandler = (id) => {\r\n        dispatch(removeFromCart(id));\r\n    }\r\n\r\n    const getCartCount = () => {\r\n        return cartItems.reduce((qty, item) => Number(item.qty) + qty, 0);\r\n    };\r\n\r\n\r\n\r\n    const getCartSubTotal = () => {\r\n        if (cartItems.length > 0) {\r\n            // console.log(cartItems);\r\n            for (const cItem of cartItems) {\r\n                if (cItem.name.includes('Half Calf')) {\r\n                    cItem.price = 200 * 7\r\n                } else if (cItem.name.includes(\"Whole Calf\")) {\r\n                    cItem.price = 450 * 6.5\r\n                } else if (cItem.name.includes('Pork Mix Box')) {\r\n                    cItem.price = 25 * 7.5\r\n                }\r\n            }\r\n        }\r\n        let output = cartItems.reduce((price, item) => item.price * item.qty + price, 0);\r\n        return output\r\n    }\r\n\r\n    return (\r\n        <div className=\"cart-screen\">\r\n            <div className=\"cart-screen-left\">\r\n                <h2>Shopping Cart</h2>\r\n                {\r\n                    cartItems.length === 0\r\n                        ? (\r\n                            <div>\r\n                                <p>Your cart is empty</p>\r\n                                <p>\r\n                                    <Link\r\n                                        className=\"btn btn--primary btn--med products-button\"\r\n                                        to=\"/our-products\"\r\n                                    >\r\n                                        Browse our products!\r\n                                    </Link>\r\n                                </p>\r\n                                <h3 style={{ textAlign: 'center' }}>Or</h3>\r\n                                <p>\r\n                                    <Link\r\n                                        className=\"btn btn--primary btn--med products-button\"\r\n                                        to=\"/order-form\"\r\n                                    >\r\n                                        Check out our Easy Order Form!\r\n                                    </Link>\r\n                                </p>\r\n                            </div>\r\n                        ) : (\r\n                            <>\r\n                                {\r\n                                    cartItems.map((item, idx) => (\r\n                                        <CartItem\r\n                                            key={idx}\r\n                                            item={item}\r\n                                            qtyChangeHandler={qtyChangeHandler}\r\n                                            removeFromCartHandler={removeFromCartHandler}\r\n                                        />\r\n                                    ))\r\n                                }\r\n                                <p>\r\n                                    <Link\r\n                                        className=\"btn btn--primary btn--med products-button\"\r\n                                        to=\"/our-products\"\r\n                                    >\r\n                                        Continue Shopping\r\n                                    </Link>\r\n                                </p>\r\n                            </>\r\n                        )\r\n                }\r\n            </div>\r\n            <div className=\"cart-screen-right\">\r\n                <div className=\"cart-screen-info\">\r\n                    <p>\r\n                        {\r\n                            getCartCount() !== 0\r\n                                ? getCartCount() > 1\r\n                                    ? 'Estimated total for your ' + getCartCount() + ' items.'\r\n                                    : 'Estimated total for your item.'\r\n                                : \"Your cart is empty.\"\r\n                        }\r\n                    </p>\r\n                    <p>\r\n                        {\r\n                            getCartCount() > 0\r\n                                ? getCartSubTotal().toFixed(2)\r\n                                : ''\r\n                        }\r\n                    </p>\r\n                </div>\r\n                <div className=\"cart-screen-check-out\">\r\n                    <Button>Proceed To Checkout</Button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default CartScreen;","import { useState, useEffect } from 'react';\r\n\r\n// CSS\r\nimport './OrderFormProduct.css'\r\n\r\n// Components\r\nimport { Button } from '../Button/Button'\r\n\r\n// Redux\r\nimport { useDispatch } from 'react-redux';\r\nimport { addToCart } from '../../redux/actions/cartActions';\r\n\r\n\r\nconst OrderFormProduct = ({ product }) => {\r\n\r\n    const [qty, setQty] = useState(0);\r\n    const dispatch = useDispatch();\r\n\r\n    const addToCartHandler = (product) => {\r\n        if (qty < 1) {\r\n            setQty(1);\r\n        }\r\n        dispatch(addToCart(product._id, qty));\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <td style={{ width: '25%' }}>{product.name}</td>\r\n            <td style={{ width: '10%' }}>${product.price.toFixed(2)} / {product.measurement}</td>\r\n            <td style={{ width: '25%' }}>{product.description}</td>\r\n            <td style={{ width: '10%', textAlign: 'center' }}>{product.inStock ? \" In Stock.\" : \" Out Of Stock.\"}</td>\r\n            <td>\r\n                <p style={{ display: 'flex', justifyContent: 'space-evenly', alignItems: 'center', margin: '0' }} >\r\n                    <label htmlFor=\"quantity\">Quantity: </label>\r\n                    <input\r\n                        className=\"add-to-cart-input\"\r\n                        min=\"0\"\r\n                        type=\"number\"\r\n                        name=\"quantity\"\r\n                        onChange={(e) => e.target.value < 1 ? setQty(1) : setQty(e.target.value)}\r\n                        value={qty}\r\n                    />\r\n                    {\r\n                        product.inStock\r\n                            ? <Button\r\n                                buttonSize='btn--sm'\r\n                                onClick={() => addToCartHandler(product)}\r\n                            >Add\r\n                            </Button>\r\n                            : <Button\r\n                                buttonSize='btn--sm'\r\n                                buttonStyle='btn-disabled'\r\n                            >Add\r\n                            </Button>\r\n                    }\r\n                </p>\r\n            </td>\r\n        </>\r\n    )\r\n}\r\nexport default OrderFormProduct;","import React from 'react';\r\n\r\n// Components\r\nimport OrderFormProduct from '../ProductOrderFormCard/OrderFormProduct';\r\n\r\nconst EasyOrderSection = ({ products, loading, error, sectionImg, imageAlt, filterOne, filterTwo, filterThree }) => {\r\n    return (\r\n        <>\r\n            <tr>\r\n                <td colSpan=\"5\" style={{ maxHeight: '50px', background: '#3E6F38' }}>\r\n                    <img style={{ maxHeight: '50px' }} src={sectionImg} alt={imageAlt} />\r\n                </td>\r\n            </tr>\r\n            {\r\n                products.products\r\n                    ? products.products.map((product, idx) =>\r\n                        product.category.name === filterOne\r\n                            || product.category.name === filterTwo\r\n                            || product.category.name === filterThree\r\n                            ? <tr className=\"align-middle\" key={idx}>\r\n                                <OrderFormProduct\r\n                                    product={product}\r\n                                />\r\n                            </tr>\r\n                            : null\r\n                    )\r\n                    : <tr><td>Failed</td></tr>\r\n            }\r\n        </>\r\n    );\r\n};\r\n\r\nexport default EasyOrderSection;","import { useEffect, useState } from 'react';\r\n\r\n// Components\r\nimport EasyOrderSection from '../../components/EasyOrderSection/EasyOrderSection';\r\n\r\n// Redux\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { getAllProducts as listProducts } from '../../redux/actions/productActions';\r\n\r\n\r\nconst OrderForm = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const getAllProducts = useSelector((state) => state.getAllProducts);\r\n    const { products, loading, error } = getAllProducts;\r\n\r\n    useEffect(() => {\r\n        dispatch(listProducts())\r\n    }, [])\r\n\r\n    const renderProducts = () => {\r\n        return (\r\n            <table style={{ width: '80%' }} className='table table-hover table-bordered'>\r\n                {/* <thead>\r\n                    <tr>\r\n                        <th>Name</th>\r\n                        <th>Price</th>\r\n                        <th>Description</th>\r\n                        <th>Stock Status</th>\r\n                        <th style={{ textAlign: 'center' }}>Action</th>\r\n                    </tr>\r\n                </thead> */}\r\n                <tbody>\r\n                    <EasyOrderSection\r\n                        filterOne={'Milk'}\r\n                        filterTwo={\"Cheese\"}\r\n                        filterThree={\"Eggs\"}\r\n                        sectionImg={require('../../img/dairy-eggs-logo.png').default}\r\n                        imageAlt={'dairy-eggs-logo'}\r\n                        products={products}\r\n                        loading={loading}\r\n                        error={error}\r\n                    />\r\n                    <EasyOrderSection\r\n                        filterOne={'Beef'}\r\n                        sectionImg={require('../../img/beef-logo.png').default}\r\n                        imageAlt={'beef-logo'}\r\n                        products={products}\r\n                        loading={loading}\r\n                        error={error}\r\n                    />\r\n                    <EasyOrderSection\r\n                        filterOne={'Pork'}\r\n                        sectionImg={require('../../img/pork-logo.png').default}\r\n                        imageAlt={'pork-logo'}\r\n                        products={products}\r\n                        loading={loading}\r\n                        error={error}\r\n                    />\r\n                    <EasyOrderSection\r\n                        filterOne={'Chicken'}\r\n                        filterTwo={\"Turkey\"}\r\n                        sectionImg={require('../../img/poultry-logo.png').default}\r\n                        imageAlt={'poultry-logo'}\r\n                        products={products}\r\n                        loading={loading}\r\n                        error={error}\r\n                    />\r\n                    <EasyOrderSection\r\n                        filterOne={'Lamb'}\r\n                        sectionImg={require('../../img/lamb-logo.png').default}\r\n                        imageAlt={'lamb-logo'}\r\n                        products={products}\r\n                        loading={loading}\r\n                        error={error}\r\n                    />\r\n                    <EasyOrderSection\r\n                        filterOne={'Goat'}\r\n                        sectionImg={require('../../img/goat-logo.png').default}\r\n                        imageAlt={'goat-logo'}\r\n                        products={products}\r\n                        loading={loading}\r\n                        error={error}\r\n                    />\r\n                    <EasyOrderSection\r\n                        filterOne={'Raw Honey'}\r\n                        filterTwo={\"Creamed Honey\"}\r\n                        sectionImg={require('../../img/honey-logo.png').default}\r\n                        imageAlt={'honey-logo'}\r\n                        products={products}\r\n                        loading={loading}\r\n                        error={error}\r\n                    />\r\n                    <EasyOrderSection\r\n                        filterOne={'Packs'}\r\n                        sectionImg={require('../../img/express-packs-logo.png').default}\r\n                        imageAlt={'express-packs-logo'}\r\n                        products={products}\r\n                        loading={loading}\r\n                        error={error}\r\n                    />\r\n                </tbody>\r\n            </table>\r\n        )\r\n    }\r\n\r\n\r\n    return (\r\n        <div style={{ display: 'flex', justifyContent: 'center' }}>\r\n            {renderProducts()}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default OrderForm;","\r\n\r\nexport const MenuItems = [\r\n    {\r\n        title: 'Home',\r\n        url: '/',\r\n        cName: 'nav-links'\r\n    },\r\n    {\r\n        title: 'Browse Products',\r\n        url: '/our-products',\r\n        cName: 'nav-links'\r\n    },\r\n    // {\r\n    //     title: 'How To Order',\r\n    //     url: '#',\r\n    //     cName: 'nav-links'\r\n    // },\r\n    {\r\n        title: 'Easy Order',\r\n        url: '/order-form',\r\n        cName: 'nav-links'\r\n    },\r\n    {\r\n        title: 'Contact Us',\r\n        url: '#',\r\n        cName: 'nav-links'\r\n    },\r\n    // {\r\n    //     title: 'Sign In',\r\n    //     url: '/login',\r\n    //     cName: 'nav-links'\r\n    // },\r\n    // {\r\n    //     title: '',\r\n    //     url: '#',\r\n    //     cName: 'nav-links fas fa-shopping-cart'\r\n    // },\r\n    // {\r\n    //     title: 'Sign Up',\r\n    //     url: '/register',\r\n    //     cName: 'nav-links-mobile'\r\n    // },\r\n\r\n]","import { Redirect } from 'react-router-dom';\r\nimport React, { useEffect, useState } from 'react';\r\n\r\n// Bootstrap Components\r\nimport { Container, Col, Row, Form, Button, Modal } from 'react-bootstrap';\r\n\r\n// Components\r\n// import Layout from '../../components/Layout/Layout';\r\nimport InputDefault from '../../components/UI/Inputs/InputDefault';\r\n\r\n// Redux\r\nimport { register } from '../../redux/actions/userAuth.actions';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nconst RegistrationModal = (props) => {\r\n\r\n    const {\r\n        show,\r\n        size,\r\n        onHide,\r\n        handleClose\r\n    } = props;\r\n\r\n    const auth = useSelector(state => state.auth);\r\n    const regAuth = useSelector(state => state.regAuth);\r\n    const dispatch = useDispatch();\r\n\r\n    const initialReg = {\r\n        firstName: \"\",\r\n        lastName: \"\",\r\n        email: \"\",\r\n        password: \"\",\r\n        confirmPassword: \"\",\r\n        contactNumber: \"\",\r\n        street1: \"\",\r\n        street2: \"\",\r\n        city: \"\",\r\n        addressState: \"\",\r\n        zip: \"\",\r\n    }\r\n    const [reg, setReg] = useState(initialReg);\r\n    const [regError, setRegError] = useState(initialReg);\r\n\r\n    const handleRegInputs = (e) => {\r\n        setReg({\r\n            ...reg,\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n    const handleRegistration = (e) => {\r\n        e.preventDefault();\r\n        const user = {\r\n            firstName: reg.firstName,\r\n            lastName: reg.lastName,\r\n            email: reg.email,\r\n            password: reg.password,\r\n            confirmPassword: reg.confirmPassword,\r\n            contactNumber: reg.contactNumber,\r\n            street1: reg.street1,\r\n            street2: reg.street2,\r\n            city: reg.city,\r\n            addressState: reg.addressState,\r\n            zip: reg.zip\r\n        }\r\n        dispatch(register(user))\r\n        setReg(initialReg);\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (regAuth.error) {\r\n            if (typeof (regAuth.error.error) !== 'string') {\r\n                // console.log(regAuth.error.error);\r\n                // console.log(typeof (regAuth.error.error));\r\n                setRegError({\r\n                    firstName: regAuth.error.error.firstName,\r\n                    lastName: regAuth.error.error.lastName,\r\n                    email: regAuth.error.error.email,\r\n                    password: regAuth.error.error.password,\r\n                    confirmPassword: regAuth.error.error.confirmPassword,\r\n                    contactNumber: regAuth.error.error.contactNumber,\r\n                    street1: regAuth.error.error.street1,\r\n                    street2: regAuth.error.error.street2,\r\n                    city: regAuth.error.error.city,\r\n                    addressState: regAuth.error.error.addressState,\r\n                    zip: regAuth.error.error.zip\r\n                })\r\n            } else {\r\n                // console.log(regAuth.error.error);\r\n                // console.log(typeof (regAuth.error.error));\r\n                setRegError({\r\n                    errorMessage: regAuth.error.error\r\n                })\r\n            }\r\n\r\n        }\r\n    }, [regAuth])\r\n\r\n    // if (auth.authenticate) {\r\n    //     return <Redirect to={`/`} />\r\n    // }\r\n\r\n    if (regAuth.loading) {\r\n        return <p>Loading...</p>\r\n    }\r\n\r\n    return (\r\n        <Modal\r\n            show={show}\r\n            size={size}\r\n            aria-labelledby=\"contained-modal-title-vcenter\"\r\n            centered\r\n            onHide={onHide}\r\n            // backdrop=\"static\"\r\n            // keyboard={false}\r\n        >\r\n            <Modal.Header >\r\n                <Modal.Title>New User</Modal.Title>\r\n                <Button className=\"btn btn--primary btn--med sign-up-btn\"  onClick={handleClose}>\r\n                                        Close\r\n                                    </Button>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <Container>\r\n                    <Row style={{ marginTop: '40px' }}>\r\n                        <Col>\r\n                            <Form onSubmit={handleRegistration}>\r\n                                <Row style={{ marginBottom: '20px' }}>\r\n                                    <Form.Group style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n                                        <Form.Text className=\"text-danger font-weight-bold\">\r\n                                            {regError.errorMessage ? regError.errorMessage : \"\"}\r\n                                        </Form.Text>\r\n                                    </Form.Group>\r\n                                </Row>\r\n                                <Row style={{ marginBottom: '20px' }}>\r\n                                    <Col md={6}>\r\n                                        <Form.Group controlId=\"formBasicFirst\">\r\n                                            <InputDefault\r\n                                                name=\"firstName\"\r\n                                                label=\"First Name\"\r\n                                                type=\"text\"\r\n                                                placeholder=\"First Name\"\r\n                                                value={reg.firstName}\r\n                                                onChange={handleRegInputs}\r\n                                            />\r\n                                            <Form.Text className=\"text-danger font-weight-bold\">\r\n                                                {regError.firstName ? regError.firstName.message : \"\"}\r\n                                            </Form.Text>\r\n                                        </Form.Group>\r\n                                    </Col>\r\n                                    <Col md={6}>\r\n                                        <Form.Group controlId=\"formBasicLast\">\r\n                                            <InputDefault\r\n                                                name=\"lastName\"\r\n                                                label=\"Last Name\"\r\n                                                type=\"text\"\r\n                                                placeholder=\"Last Name\"\r\n                                                value={reg.lastName}\r\n                                                onChange={handleRegInputs}\r\n                                            />\r\n                                            <Form.Text className=\"text-danger font-weight-bold\">\r\n                                                {regError.lastName ? regError.lastName.message : \"\"}\r\n                                            </Form.Text>\r\n                                        </Form.Group>\r\n                                    </Col>\r\n                                </Row>\r\n                                <Row style={{ marginBottom: '20px' }}>\r\n                                    <Form.Group as={Col} controlId=\"formBasicEmail\">\r\n                                        <InputDefault\r\n                                            name=\"email\"\r\n                                            label=\"Email Address\"\r\n                                            type=\"email\"\r\n                                            placeholder=\"Email Address\"\r\n                                            value={reg.email}\r\n                                            onChange={handleRegInputs}\r\n                                        />\r\n                                        <Form.Text className=\"text-danger font-weight-bold\">\r\n                                            {regError.email ? regError.email.message : \"\"}\r\n                                        </Form.Text>\r\n                                    </Form.Group>\r\n                                    <Form.Group as={Col} controlId=\"formBasicContactNum\">\r\n                                        <InputDefault\r\n                                            name=\"contactNumber\"\r\n                                            label=\"Contact Phone Number\"\r\n                                            type=\"text\"\r\n                                            placeholder=\"555-555-5555\"\r\n                                            value={reg.contactNumber}\r\n                                            onChange={handleRegInputs}\r\n                                        />\r\n                                        <Form.Text className=\"text-danger font-weight-bold\">\r\n                                            {regError.contactNumber ? regError.contactNumber.message : \"\"}\r\n                                        </Form.Text>\r\n                                    </Form.Group>\r\n                                </Row>\r\n\r\n                                <Row style={{ marginBottom: '20px' }}>\r\n                                    <Form.Group as={Col} controlId=\"formGridPass\">\r\n                                        <InputDefault\r\n                                            name=\"password\"\r\n                                            label=\"Password\"\r\n                                            type=\"password\"\r\n                                            placeholder=\"Password\"\r\n                                            value={reg.password}\r\n                                            onChange={handleRegInputs}\r\n                                        />\r\n                                        <Form.Text className=\"text-danger font-weight-bold\">\r\n                                            {regError.password ? regError.password.message : \"\"}\r\n                                        </Form.Text>\r\n                                    </Form.Group>\r\n                                    <Form.Group as={Col} controlId=\"formGridCPass\">\r\n                                        <InputDefault\r\n                                            name=\"confirmPassword\"\r\n                                            label=\"Confirm Password\"\r\n                                            type=\"password\"\r\n                                            placeholder=\"Confirm Password\"\r\n                                            value={reg.confirmPassword}\r\n                                            onChange={handleRegInputs}\r\n                                        />\r\n                                        <Form.Text className=\"text-danger font-weight-bold\">\r\n                                            {regError.confirmPassword ? regError.confirmPassword.message : \"\"}\r\n                                        </Form.Text>\r\n                                    </Form.Group>\r\n                                </Row>\r\n                                <Row style={{ marginBottom: '20px' }}>\r\n                                    <Form.Group controlId=\"formGridAddress1\">\r\n                                        <InputDefault\r\n                                            name=\"street1\"\r\n                                            label=\"Address\"\r\n                                            type=\"text\"\r\n                                            placeholder=\"1234 Main St\"\r\n                                            value={reg.street1}\r\n                                            onChange={handleRegInputs}\r\n                                        />\r\n                                        <Form.Text className=\"text-danger font-weight-bold\">\r\n                                            {regError.street1 ? regError.street1.message : \"\"}\r\n                                        </Form.Text>\r\n                                    </Form.Group>\r\n                                </Row>\r\n                                <Row style={{ marginBottom: '20px' }}>\r\n                                    <Form.Group controlId=\"formGridAddress2\">\r\n                                        <InputDefault\r\n                                            name=\"street2\"\r\n                                            label=\"Address 2\"\r\n                                            type=\"text\"\r\n                                            placeholder=\"Apartment, studio, or floor\"\r\n                                            value={reg.street2}\r\n                                            onChange={handleRegInputs}\r\n                                        />\r\n                                        <Form.Text className=\"text-danger font-weight-bold\">\r\n                                            {regError.street2 ? regError.street2.message : \"\"}\r\n                                        </Form.Text>\r\n                                    </Form.Group>\r\n                                </Row>\r\n                                <Row style={{ marginBottom: '20px' }}>\r\n                                    <Form.Group as={Col} controlId=\"formGridCity\">\r\n                                        <InputDefault\r\n                                            name=\"city\"\r\n                                            label=\"City\"\r\n                                            type=\"text\"\r\n                                            placeholder=\"City\"\r\n                                            value={reg.city}\r\n                                            onChange={handleRegInputs}\r\n                                        />\r\n                                        <Form.Text className=\"text-danger font-weight-bold\">\r\n                                            {regError.city ? regError.city.message : \"\"}\r\n                                        </Form.Text>\r\n                                    </Form.Group>\r\n                                    <Form.Group as={Col} controlId=\"formGridState\">\r\n                                        <InputDefault\r\n                                            name=\"addressState\"\r\n                                            label=\"State\"\r\n                                            type=\"text\"\r\n                                            placeholder=\"State\"\r\n                                            value={reg.addressState}\r\n                                            onChange={handleRegInputs}\r\n                                        />\r\n                                        <Form.Text className=\"text-danger font-weight-bold\">\r\n                                            {regError.addressState ? regError.addressState.message : \"\"}\r\n                                        </Form.Text>\r\n                                    </Form.Group>\r\n                                    <Form.Group as={Col} controlId=\"formGridZip\">\r\n                                        <InputDefault\r\n                                            name=\"zip\"\r\n                                            label=\"Zip\"\r\n                                            type=\"text\"\r\n                                            placeholder=\"Zip Code\"\r\n                                            value={reg.zip}\r\n                                            onChange={handleRegInputs}\r\n                                        />\r\n                                        <Form.Text className=\"text-danger font-weight-bold\">\r\n                                            {regError.zip ? regError.zip.message : \"\"}\r\n                                        </Form.Text>\r\n                                    </Form.Group>\r\n                                </Row>\r\n\r\n                                <Form.Group style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n                                    <Button onClick={handleClose} className=\"btn btn--primary btn--med sign-up-btn\" type=\"submit\">\r\n                                        Submit\r\n                                    </Button>\r\n                                    \r\n                                </Form.Group>\r\n\r\n                            </Form>\r\n                        </Col>\r\n                    </Row>\r\n\r\n                </Container>\r\n            </Modal.Body>\r\n        </Modal>\r\n    );\r\n};\r\n\r\nexport default RegistrationModal;","import React, { useState, useEffect } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\n// Bootstrap Components\r\nimport { Container, Row, Form, Col, Button, Modal } from 'react-bootstrap';\r\n\r\n// Components\r\nimport InputDefault from '../../components/UI/Inputs/InputDefault';\r\n\r\n// Redux\r\nimport { login } from '../../redux/actions/userAuth.actions'\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nconst LoginModal = (props) => {\r\n\r\n    const {\r\n        show,\r\n        size,\r\n        onHide,\r\n        handleClose\r\n    } = props;\r\n\r\n    const auth = useSelector(state => state.auth);\r\n    const dispatch = useDispatch();\r\n\r\n    // const [email, setEmail] = useState('');\r\n    // const [password, setPassword] = useState('');\r\n\r\n    const initialLog = {\r\n        email: '',\r\n        password: ''\r\n    }\r\n    const [log, setLog] = useState(initialLog);\r\n    const [logError, setLogError] = useState('');\r\n\r\n    const handleLogInputs = (e) => {\r\n        setLog({\r\n            ...log,\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n    // const tryLogin = async (e) => {\r\n    //     e.preventDefault();\r\n\r\n    //     await userLogin(e);\r\n    //     if (auth.authenticate) {\r\n    //         handleClose();\r\n\r\n    //     }\r\n    // }\r\n\r\n    const userLogin = (e) => {\r\n        e.preventDefault();\r\n        const user = {\r\n            email: log.email,\r\n            password: log.password\r\n        }\r\n        dispatch(login(user))\r\n        setLog(initialLog);\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (auth.error) {\r\n            if (auth.error.message) {\r\n                // console.log(\"auth.error.message\");\r\n                // console.log(auth.error);\r\n                // console.log(auth.error.message);\r\n                setLogError({\r\n                    message: auth.error.message\r\n                })\r\n            } else {\r\n                // console.log(\"auth.error.error\");\r\n                // console.log(auth.error);\r\n                // console.log(auth.error.error);\r\n                setLogError({\r\n                    error: auth.error.error\r\n                })\r\n            }\r\n        } else {\r\n            setLogError(\"\")\r\n        }\r\n    }, [auth.error])\r\n\r\n    return (\r\n        <Modal\r\n            show={show}\r\n            size={size}\r\n            aria-labelledby=\"contained-modal-title-vcenter\"\r\n            centered\r\n            onHide={onHide}\r\n        // backdrop=\"static\"\r\n        // keyboard={false}\r\n        >\r\n            <Modal.Header >\r\n                <Modal.Title>Login</Modal.Title>\r\n                <Button className=\"btn btn--primary btn--med sign-up-btn\" onClick={handleClose}>\r\n                    Close\r\n                </Button>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <Container>\r\n                    <Row>\r\n                        <Col>\r\n                            <Form >\r\n\r\n                                <Form.Group style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n                                    <Form.Text className=\"text-danger font-weight-bold\">\r\n                                        {\r\n                                            logError\r\n                                                ? logError.error\r\n                                                    ? logError.error\r\n                                                    : logError.message\r\n                                                : \"\"\r\n                                        }\r\n                                    </Form.Text>\r\n                                </Form.Group>\r\n                                <Row>\r\n                                    <Form.Group as={Col} controlId=\"formBasicEmail\">\r\n                                        <InputDefault\r\n                                            name=\"email\"\r\n                                            label=\"Email Address\"\r\n                                            type=\"email\"\r\n                                            placeholder=\"Email Address\"\r\n                                            value={log.email}\r\n                                            onChange={handleLogInputs}\r\n                                        />\r\n                                        {/* \r\n                                        <Form.Text className=\"text-muted\">\r\n                                            {error.email ? error.email.message : \"\"}\r\n                                        </Form.Text> \r\n                                    */}\r\n                                    </Form.Group>\r\n                                </Row>\r\n                                <Row style={{marginTop: '10px'}}>\r\n                                    <Form.Group as={Col} controlId=\"formGridPass\">\r\n                                        <InputDefault\r\n                                            name=\"password\"\r\n                                            label=\"Password\"\r\n                                            type=\"password\"\r\n                                            placeholder=\"Password\"\r\n                                            value={log.password}\r\n                                            onChange={handleLogInputs}\r\n                                        />\r\n                                    </Form.Group>\r\n                                </Row>\r\n\r\n                                <Form.Group style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n                                    <Button style={{ marginTop: '10px' }} onClick={userLogin} className=\"btn btn--primary btn--med sign-up-btn\" type=\"submit\">\r\n                                        Submit\r\n                                    </Button>\r\n\r\n                                </Form.Group>\r\n                            </Form>\r\n                        </Col>\r\n                    </Row>\r\n\r\n                </Container>\r\n            </Modal.Body>\r\n        </Modal>\r\n    );\r\n};\r\n\r\nexport default LoginModal;","import { Button } from \"../Button/Button\";\r\nimport { MenuItems } from './MenuItems';\r\nimport { useEffect, useState } from \"react\";\r\nimport './Navbar.css';\r\nimport { Link, Redirect } from 'react-router-dom';\r\n\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport RegistrationModal from \"../Registration/RegistrationModal\";\r\nimport LoginModal from \"../Login/LoginModal\";\r\nimport { logout, login } from \"../../redux/actions/userAuth.actions\";\r\n\r\nconst NavBar = () => {\r\n\r\n    const auth = useSelector(state => state.auth);\r\n    const dispatch = useDispatch();\r\n\r\n    const [clicked, setClicked] = useState(false);\r\n\r\n    const [loginModal, setLoginModal] = useState(false);\r\n    const showLoginModal = () => setLoginModal(true);\r\n    const hideLoginModal = () => setLoginModal(false);\r\n\r\n    const [regModal, setRegModal] = useState(false);\r\n    const showRegModal = () => setRegModal(true);\r\n    const hideRegModal = () => setRegModal(false);\r\n\r\n    const handleClick = () => {\r\n        if (clicked) {\r\n            setClicked(false)\r\n        } else {\r\n            setClicked(true)\r\n        }\r\n    }\r\n\r\n    const cart = useSelector(state => state.cart);\r\n    const { cartItems } = cart;\r\n\r\n    const getCartCount = () => {\r\n        return cartItems.reduce((quantity, item) => quantity + Number(item.quantity), 0)\r\n    }\r\n\r\n    const handleLogout = () => {\r\n        dispatch(logout())\r\n        return <Redirect to={'/'} />\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (auth.authenticate) {\r\n            hideLoginModal()\r\n        }\r\n    }, [auth.authenticate])\r\n\r\n    return (\r\n        <nav className=\"NavbarItems\">\r\n            <div className=\"navbar-logo\">\r\n                <a href=\"/\">\r\n                    <img className=\" navbar-logo-img\" src={require('../../img/FarmToHomeLogoLong.png').default} alt=\"farm-to-home-logo\" />\r\n                </a>\r\n            </div>\r\n            <div className=\"menu-icon\" onClick={handleClick}>\r\n                <i className={clicked ? 'fas fa-times' : 'fas fa-bars'}></i>\r\n            </div>\r\n            <ul className={clicked ? 'nav-menu active' : 'nav-menu'}>\r\n                {\r\n                    MenuItems.map((item, idx) => {\r\n                        return (\r\n                            <li key={idx}>\r\n                                <Link className={item.cName} to={item.url}>{item.title}</Link>\r\n                            </li>\r\n                        )\r\n                    })\r\n                }\r\n                <li>\r\n                    <Link className=\"nav-links fas fa-shopping-cart cart\" to=\"/cart\">\r\n                        <span className=\"cart-badge\">{getCartCount()}</span>\r\n                    </Link>\r\n                </li>\r\n            </ul>\r\n\r\n            {\r\n                !auth.authenticate\r\n                    ? <div style={{ display: 'flex' }}>\r\n\r\n                        <button\r\n                            style={{ marginRight: '10px' }}\r\n                            className=\"btn btn--primary btn--med sign-up-btn\"\r\n                            onClick={showLoginModal}>\r\n                            Login\r\n                        </button>\r\n\r\n                        <button\r\n                            className=\"btn btn--primary btn--med sign-up-btn\"\r\n                            onClick={showRegModal}>\r\n                            Register\r\n                        </button>\r\n                        {/* <Link className=\"btn btn--primary btn--med sign-up-btn\" to={'/register'}>Register</Link> */}\r\n                    </div>\r\n                    : <button\r\n                        style={{ marginRight: '10px' }}\r\n                        className=\"btn btn--primary btn--med sign-up-btn\"\r\n                        onClick={handleLogout}>\r\n                        Logout\r\n                    </button>\r\n            }\r\n\r\n\r\n\r\n            <RegistrationModal\r\n                show={regModal}\r\n                size={'lg'}\r\n                onHide={hideRegModal}\r\n                handleClose={hideRegModal}\r\n            />\r\n\r\n            <LoginModal\r\n                show={loginModal}\r\n                size={'lg'}\r\n                onHide={hideLoginModal}\r\n                handleClose={hideLoginModal}\r\n            />\r\n\r\n        </nav>\r\n    )\r\n}\r\n\r\n// class NavBar extends Component{\r\n\r\n//     state = {clicked: false}\r\n\r\n//     handleClick = () => {\r\n//         this.setState({clicked: !this.state.clicked})\r\n//     }\r\n\r\n//     render() {\r\n//         return(\r\n//             <nav className=\"NavbarItems\">\r\n//                 <div className=\"navbar-logo\">\r\n//                     <a href=\"/\">\r\n//                         <img className=\" navbar-logo-img\" src={ require('../../img/FarmToHomeLogoLong.png').default } alt=\"farm-to-home-logo\" />\r\n//                     </a>\r\n//                 </div>\r\n//                 <div className=\"menu-icon\" onClick={this.handleClick}>\r\n//                     <i className={this.state.clicked ? 'fas fa-times' : 'fas fa-bars'}></i>\r\n//                 </div>\r\n//                 <ul className={this.state.clicked ? 'nav-menu active' : 'nav-menu'}>\r\n//                     {MenuItems.map((item, idx) => {\r\n//                         return(\r\n//                             <li key={idx}>\r\n//                                 <a className={item.cName} href={item.url}>\r\n//                                     {item.title}\r\n//                                 </a>\r\n//                             </li>\r\n//                         )\r\n//                     })}\r\n//                     <li>\r\n//                         <a className=\"nav-links fas fa-shopping-cart cart\" href=\"/cart\"> \r\n//                             <span className=\"cart-badge\">0</span>\r\n\r\n//                         </a>\r\n//                     </li>\r\n//                 </ul>\r\n//                 <div className=\"sign-up-btn\">\r\n//                     <Button>Sign Up</Button>\r\n//                 </div>\r\n//             </nav>\r\n//         )\r\n//     }\r\n// }\r\n\r\nexport default NavBar;","import { useEffect } from 'react';\r\n\r\n// Components\r\nimport Product from '../../components/ProductCard/ProductCard';\r\nimport CategoryMenu from '../../components/CategoryMenu/CategoryMenu';\r\n\r\n// Redux\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getProductsByCat } from '../../redux/actions/productActions';\r\n\r\n\r\nconst FilteredProductScreen = (props) => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const getFilteredProducts = useSelector(state => state.filteredProducts);\r\n    const { products, loading, error } = getFilteredProducts;\r\n\r\n    useEffect(() => {\r\n        const { match } = props;\r\n        dispatch(getProductsByCat(match.params.name));\r\n    }, [props.match.params])\r\n\r\n    return (\r\n        <>\r\n            <CategoryMenu />\r\n            <div className=\"our-products-screen\">\r\n                <div className=\"our-products-screen-products show\">\r\n\r\n                    {\r\n                        loading ? (\r\n                            <h2>Loading...</h2>\r\n                        ) : error ? (\r\n                            <h2>{error}</h2>\r\n                        ) :\r\n                            products.products\r\n                                ? products.products.map((product, idx) =>\r\n                                    <Product key={idx}\r\n                                        productId={product._id}\r\n                                        category={product.category}\r\n                                        name={product.name}\r\n                                        productImage={product.productImage}\r\n                                        price={product.price}\r\n                                        measurement={product.measurement}\r\n                                        description={product.description}\r\n                                        inStock={product.inStock}\r\n                                    />)\r\n                                : <p>something else</p>\r\n                    }\r\n\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default FilteredProductScreen;","import { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport { useEffect } from 'react';\nimport './App.css';\n\n// Screens\nimport OurProductsScreen from './views/OurProductsScreen/OurProductsScreen';\nimport RegisterScreen from './views/RegisterScreen/RegisterScreen';\nimport ProductScreen from './views/ProductScreen/ProductScreen';\nimport LoginScreen from './views/LoginScreen/LoginScreen';\nimport HomeScreen from './views/HomeScreen/HomeScreen';\nimport CartScreen from './views/CartScreen/CartScreen';\nimport OrderForm from './views/OrderForm/OrderForm';\n\n// Components\nimport Navbar from './components/Navbar/NavBar';\nimport FilteredProductScreen from './views/FilteredProductScreen/FilteredProductScreen';\n\n// Redux\nimport { useDispatch, useSelector } from 'react-redux';\nimport { isUserLoggedIn } from './redux/actions/userAuth.actions';\n\n\nconst App = () => {\n\n  const dispatch = useDispatch();\n  const auth = useSelector((state) => state.auth);\n\n  useEffect(() => {\n    if (!auth.authenticate) {\n      dispatch(isUserLoggedIn());\n    }\n  }, [auth.authenticate]);\n\n  return (\n    <div className=\"App\">\n      <Router>\n        <Navbar />\n        <main>\n          <Switch>\n            <Route exact path=\"/\" component={HomeScreen} />\n            <Route exact path=\"/our-products\" component={OurProductsScreen} />\n            <Route exact path=\"/order-form\" component={OrderForm} />\n            <Route exact path=\"/cart\" component={CartScreen} />\n            <Route path=\"/category/:name\" component={FilteredProductScreen} />\n            <Route path=\"/product/:id\" component={ProductScreen} />\n          </Switch>\n        </main>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","import 'bootstrap/dist/css/bootstrap.css';\nimport ReactDOM from 'react-dom';\nimport React from 'react';\nimport App from './App';\nimport './index.css';\n\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById('root')\n);\n\n","export default __webpack_public_path__ + \"static/media/dairy-eggs-logo.9fa3d884.png\";","export default __webpack_public_path__ + \"static/media/beef-logo.f193b740.png\";","export default __webpack_public_path__ + \"static/media/pork-logo.2210e317.png\";","export default __webpack_public_path__ + \"static/media/poultry-logo.e34bfc85.png\";","export default __webpack_public_path__ + \"static/media/lamb-logo.8c5d4b21.png\";","export default __webpack_public_path__ + \"static/media/goat-logo.856523f9.png\";","export default __webpack_public_path__ + \"static/media/honey-logo.61b046db.png\";","export default __webpack_public_path__ + \"static/media/express-packs-logo.f7f5ca83.png\";"],"sourceRoot":""}