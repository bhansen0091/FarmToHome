{"version":3,"sources":["img/FarmToHomeLogoLong.png","components/Button/Button.jsx","redux/constants/cartConstants.js","redux/reducers/cartReducer.js","redux/constants/category.constants.js","redux/reducers/category.reducer.js","redux/constants/userConstants.js","redux/reducers/user.reducer.js","redux/constants/productConstants.js","redux/store.js","redux/reducers/productReducers.js","redux/actions/cartActions.js","components/ProductCard/ProductCard.jsx","redux/actions/category.actions.js","components/CategoryMenu/CategoryMenu.jsx","components/ProductSection/ProductSection.jsx","redux/actions/productActions.js","views/OurProductsScreen/OurProductsScreen.jsx","redux/actions/userAuth.actions.js","components/UI/Inputs/InputDefault.jsx","components/Registration/RegistrationModal.jsx","components/Login/LoginModal.jsx","components/Card/Card.jsx","views/CheckoutScreen/AddressForm.jsx","components/CartItem/CartItem.jsx","views/CartScreen/CartScreen.jsx","views/CheckoutScreen/CheckoutScreen.jsx","views/ProductScreen/ProductScreen.jsx","components/OrderScreenCard/OrderScreenCard.jsx","views/OrdersScreen/OrdersScreen.jsx","views/HomeScreen/HomeScreen.jsx","components/ProductOrderFormCard/OrderFormProduct.jsx","components/EasyOrderSection/EasyOrderSection.jsx","views/OrderForm/OrderForm.jsx","components/Navbar/MenuItems.jsx","components/Navbar/NavBar.jsx","views/FilteredProductScreen/FilteredProductScreen.jsx","App.jsx","index.js","img/dairy-eggs-logo.png","img/beef-logo.png","img/pork-logo.png","img/poultry-logo.png","img/lamb-logo.png","img/goat-logo.png","img/honey-logo.png","img/express-packs-logo.png"],"names":["STYLES","SIZES","Button","children","type","onClick","buttonStyle","buttonSize","checkButtonStyle","includes","checkButtonSize","className","ADD_TO_CART_REQUEST","ADD_TO_CART_SUCCESS","ADD_TO_CART_FAIL","REMOVE_FROM_CART_SUCCESS","ADD_TO_DB_CART_REQUEST","ADD_TO_DB_CART_SUCCESS","REMOVE_FROM_DB_CART_SUCCESS","CART_RESET_SUCCESS","initialState","cartItems","updatingCart","error","message","GET_ALL_CATEGORIES_REQUEST","GET_ALL_CATEGORIES_SUCCESS","categoryList","loading","USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_LOGOUT_REQUEST","USER_LOGOUT_SUCCESS","USER_LOGOUT_FAIL","USER_REGISTRATION_REQUEST","USER_REGISTRATION_SUCCESS","USER_REGISTRATION_FAIL","GET_USER_ADDRESS_REQUEST","GET_USER_ADDRESS_SUCCESS","GET_USER_ADDRESS_FAILURE","RESET_ADDRESS_REQUEST","RESET_ADDRESS_SUCCESS","RESET_ADDRESS_FAILURE","ADD_USER_ADDRESS_REQUEST","ADD_USER_ADDRESS_SUCCESS","ADD_USER_ADDRESS_FAILURE","ADD_USER_ORDER_SUCCESS","GET_USER_ORDER_REQUEST","GET_USER_ORDER_SUCCESS","GET_USER_ORDER_FAILURE","GET_USER_ORDER_DETAILS_REQUEST","GET_USER_ORDER_DETAILS_SUCCESS","user","_id","firstName","lastName","email","role","authenticate","authenticating","regInitialState","userDetailsInitialState","address","orders","orderDetails","orderFetching","placedOrderId","GET_PRODUCTS_REQUEST","GET_PRODUCTS_SUCCESS","GET_PRODUCTS_FAIL","GET_FILTERED_PRODUCTS_REQUEST","GET_FILTERED_PRODUCTS_SUCCESS","GET_FILTERED_PRODUCTS_FAIL","GET_PRODUCT_DETAILS_REQUEST","GET_PRODUCT_DETAILS_SUCCESS","GET_PRODUCT_DETAILS_FAIL","GET_PRODUCT_DETAILS_RESET","reducer","combineReducers","auth","state","action","actionTypes","payload","regAuth","cart","item","find","x","product","existItem","map","filter","categories","filteredProducts","products","getAllProducts","getProductDetails","userDetails","fieldErrors","order","middleware","thunk","INITIAL_STATE","localStorage","getItem","JSON","parse","store","createStore","composeWithDevTools","applyMiddleware","getCartItems","dispatch","a","axios","get","res","status","data","console","log","addToCart","id","qty","getState","appStore","category","name","productImage","price","measurement","description","inStock","sendIt","quantity","post","withCredentials","setItem","stringify","Product","productId","useState","setQty","useDispatch","src","alt","style","textAlign","marginBottom","padding","borderRadius","display","justifyContent","margin","toFixed","htmlFor","min","onChange","e","target","value","to","getAllCategories","CategoryMenu","useSelector","useEffect","length","renderCategories","myCategories","push","parentId","ProductSection","sectionImg","imageAlt","filterOne","filterTwo","filterThree","show","setShow","idx","response","OurProductsScreen","listProducts","listCategories","require","default","getAddress","userAddress","InputDefault","props","Form","Label","marginLeft","label","Control","placeholder","RegistrationModal","size","onHide","handleClose","initialReg","password","confirmPassword","contactNumber","reg","setReg","regError","setRegError","handleRegInputs","errorMessage","Modal","aria-labelledby","centered","Header","Title","Body","Container","Row","Col","onSubmit","preventDefault","then","catch","err","register","Group","Text","md","controlId","as","LoginModal","initialLog","setLog","logError","setLogError","handleLogInputs","marginTop","login","Card","headerLeft","headerRight","alignSelf","fontSize","fontWeight","AddressForm","initialData","initialAddress","mobileNumber","zipCode","streetOne","streetTwo","city","alternatePhone","addressType","setAddress","addressError","setAddressError","submitFlag","setSubmitFlag","handleInputs","onAddressSubmit","errors","errorArray","Object","entries","array","keyName","substring","splice","errorVal","addAddress","_address","slice","onSubmitForm","alignItems","Check","inline","defaultChecked","readOnly","CartItem","qtyChangeHandler","removeFromCartHandler","CartScreen","setCartItems","removeFromCart","getCartCount","reduce","Number","onlyCartItems","cItem","getCartSubTotal","CheckoutStep","active","stepNumber","title","body","Address","adr","selectAddress","enableAddressEditForm","confirmDeliveryAddress","edit","withoutLayout","onCancel","width","selected","CheckoutScreen","newAddress","setNewAddress","loginModal","setLoginModal","hideLoginModal","regModal","setRegModal","hideRegModal","selectedAddress","setSelectedAddress","confirmAddressOption","setConfirmAddressOption","orderSummaryOption","setOrderSummaryOption","orderConfirmation","setOrderConfirmation","finalizeOrderOption","setFinalizeOrderOption","confirmOrder","setConfirmOrder","addr","updatedAddress","history","marginRight","Table","totalAmount","items","payablePrice","purchasedQty","addressId","paymentStatus","cartActionTypes","addOrder","ProductScreen","match","productDetails","params","OrderScreenCard","initialProduct","verticalAlign","addToCartHandler","OrdersScreen","makeDate","date","Date","createdAt","month","getMonth","day","getDate","year","getFullYear","alignContent","flexDirection","bordered","colSpan","backgroundColor","addOrderToCartHandler","HomeScreen","OrderFormProduct","EasyOrderSection","maxHeight","background","OrderForm","MenuItems","url","cName","NavBar","useHistory","clicked","setClicked","removeItem","keys","key","index","href","Dropdown","Toggle","Menu","Item","clear","FilteredProductScreen","getFilteredProducts","App","updateingCart","exact","path","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8bbbb35d.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/FarmToHomeLogoLong.b993482a.png\";","\r\n\r\nimport './Button.css';\r\n\r\nconst STYLES = [\r\n    'btn--primary',\r\n    'btn--outline',\r\n    'btn--orange',\r\n    'btn-disabled'\r\n]\r\n\r\nconst SIZES = [\r\n    'btn--med',\r\n    'btn--sm',\r\n    'btn--large'\r\n]\r\n\r\nexport const Button = ({\r\n    children,\r\n    type,\r\n    onClick,\r\n    buttonStyle,\r\n    buttonSize\r\n}) => {\r\n    const checkButtonStyle = STYLES.includes(buttonStyle) ? buttonSize : STYLES[0]\r\n\r\n    const checkButtonSize = SIZES.includes(buttonSize) ? buttonSize : SIZES[0]\r\n\r\n    return(\r\n        <button className={`btn ${checkButtonStyle} ${checkButtonSize}`} onClick = {onClick} type={type}>\r\n            {children}\r\n        </button>\r\n    )\r\n}","\r\n// OLD\r\nexport const ADD_TO_CART = \"ADD_TO_CART\";\r\nexport const REMOVE_FROM_CART = \"REMOVE_FROM_CART\";\r\nexport const CART_RESET = \"CART_RESET\";\r\n\r\n// Add to Local Cart\r\nexport const ADD_TO_CART_REQUEST = \"ADD_TO_CART_REQUEST\";\r\nexport const ADD_TO_CART_SUCCESS = \"ADD_TO_CART_SUCCESS\";\r\nexport const ADD_TO_CART_FAIL = \"ADD_TO_CART_FAIL\";\r\n\r\n// Remove from Local Cart\r\nexport const REMOVE_FROM_CART_REQUEST = \"REMOVE_FROM_CART_REQUEST\";\r\nexport const REMOVE_FROM_CART_SUCCESS = \"REMOVE_FROM_CART_SUCCESS\";\r\nexport const REMOVE_FROM_CART_FAIL = \"REMOVE_FROM_CART_FAIL\";\r\n\r\n// Add to User Cart on DB\r\nexport const ADD_TO_DB_CART_REQUEST = \"ADD_TO_DB_CART_REQUEST\";\r\nexport const ADD_TO_DB_CART_SUCCESS = \"ADD_TO_DB_CART_SUCCESS\";\r\nexport const ADD_TO_DB_CART_FAIL = \"ADD_TO_DB_CART_FAIL\";\r\n\r\n// Remove from Local Cart\r\nexport const REMOVE_FROM_DB_CART_REQUEST = \"REMOVE_FROM_DB_CART_REQUEST\";\r\nexport const REMOVE_FROM_DB_CART_SUCCESS = \"REMOVE_FROM_DB_CART_SUCCESS\";\r\nexport const REMOVE_FROM_DB_CART_FAIL = \"REMOVE_FROM_DB_CART_FAIL\";\r\n\r\n// Reset Cart\r\nexport const CART_RESET_REQUEST = \"CART_RESET_REQUEST\";\r\nexport const CART_RESET_SUCCESS = \"CART_RESET_SUCCESS\";\r\nexport const CART_RESET_FAIL = \"CART_RESET_FAIL\";","import * as actionTypes from '../constants/cartConstants';\r\n\r\nexport const cartReduce = (state = { cartItems: [] }, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.ADD_TO_CART:\r\n            const item = action.payload;\r\n\r\n            const existItem = state.cartItems.find((x) => x.product === item.product);\r\n\r\n            if (existItem) {\r\n                return {\r\n                    ...state,\r\n                    cartItems: state.cartItems.map((x) => x.product === existItem.product ? item : x)\r\n                };\r\n            } else {\r\n                return {\r\n                    ...state,\r\n                    cartItems: [...state.cartItems, item]\r\n                };\r\n            }\r\n        case actionTypes.REMOVE_FROM_CART:\r\n            return {\r\n                ...state,\r\n                cartItems: state.cartItems.filter((x) => x.product !== action.payload)\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nconst initialState = {\r\n    cartItems: [],\r\n    updatingCart: false,\r\n    error: null,\r\n    message: ''\r\n}\r\n\r\nexport const cartReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.ADD_TO_CART_REQUEST:\r\n            state = {\r\n                ...state,\r\n                updatingCart: true\r\n            }\r\n            break;\r\n        case actionTypes.ADD_TO_DB_CART_REQUEST:\r\n            state = {\r\n                ...state,\r\n                updatingCart: true\r\n            }\r\n            break;\r\n        case actionTypes.ADD_TO_CART_SUCCESS:\r\n\r\n            const item = action.payload.cartItems.find((x) => x.product._id)\r\n\r\n            const existItem = state.cartItems.find((x) => x.product._id === item.product._id);\r\n            if (existItem) {\r\n                state = {\r\n                    ...state,\r\n                    cartItems: state.cartItems.map((x) => x.product._id === existItem.product._id ? item : x),\r\n                    message: 'Existing Item',\r\n                    updatingCart: false\r\n                }\r\n            } else {\r\n                state = {\r\n                    ...state,\r\n                    cartItems: [...state.cartItems, item],\r\n                    updatingCart: false,\r\n                    message: 'New Item',\r\n                }\r\n            }\r\n            break;\r\n        case actionTypes.ADD_TO_DB_CART_SUCCESS:\r\n            state = {\r\n                ...state,\r\n                cartItems: action.payload.cartItems,\r\n                updatingCart: false\r\n            }\r\n            break;\r\n        case actionTypes.ADD_TO_CART_FAIL:\r\n            state = {\r\n                ...state,\r\n                updatingCart: false,\r\n                error: action.payload.error\r\n            }\r\n            break;\r\n        case actionTypes.CART_RESET_SUCCESS:\r\n            state = {\r\n                ...initialState\r\n            }\r\n        case actionTypes.REMOVE_FROM_DB_CART_SUCCESS:\r\n            state = {\r\n                ...state,\r\n                updatingCart: true\r\n            }\r\n            break;\r\n        case actionTypes.REMOVE_FROM_CART_SUCCESS:\r\n            state = {\r\n                ...state,\r\n                cartItems: state.cartItems.filter((x) => x.product._id !== action.payload),\r\n                message: action.payload\r\n            }\r\n            break;\r\n    }\r\n    return state;\r\n}\r\n\r\n","\r\n\r\n// Get Categories\r\nexport const GET_ALL_CATEGORIES_REQUEST = \"GET_ALL_CATEGORIES_REQUEST\";\r\nexport const GET_ALL_CATEGORIES_SUCCESS = \"GET_ALL_CATEGORIES_SUCCESS\";\r\nexport const GET_ALL_CATEGORIES_FAIL = \"GET_ALL_CATEGORIES_FAIL\";","import * as actionTypes from '../constants/category.constants';\r\n\r\nconst initialState = {\r\n    categoryList: [],\r\n    loading: false,\r\n    error: null\r\n};\r\n\r\nconst buildNewCategoryList = (parentId, categoryList, category) => {\r\n    const newCategoryList = [];\r\n\r\n    if (parentId === undefined) {\r\n        return [\r\n            ...categoryList,\r\n            {\r\n                _id: category._id,\r\n                name: category.name,\r\n                children: []\r\n            }\r\n        ]\r\n    }\r\n\r\n    for (const cat of categoryList) {\r\n\r\n        if (cat._id == parentId) {\r\n            newCategoryList.push({\r\n                ...cat,\r\n                children: cat.children ? buildNewCategoryList(parentId, [\r\n                    ...cat.children,\r\n                    {\r\n                        _id: category._id,\r\n                        name: category.name,\r\n                        parentId: category.parentId,\r\n                        children: category.children\r\n                    }], category) : []\r\n            })\r\n        } else {\r\n            newCategoryList.push({\r\n                ...cat,\r\n                children: cat.children ? buildNewCategoryList(cat.parentId, cat.children, category) : []\r\n            })\r\n        }\r\n    }\r\n    return newCategoryList;\r\n}\r\n\r\nexport const categoryReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.GET_ALL_CATEGORIES_REQUEST:\r\n            state = {\r\n                ...state,\r\n                loading: true\r\n            }\r\n            break;\r\n        case actionTypes.GET_ALL_CATEGORIES_SUCCESS:\r\n            // console.log(action.payload);\r\n            state = {\r\n                ...state,\r\n                categoryList: action.payload.categoryList,\r\n                loading: false\r\n            }\r\n            break;\r\n    }\r\n    return state\r\n}\r\n","// ~~~~~~~~~~~~~~~~~~ User ~~~~~~~~~~~~~~~~~~\r\n\r\n// User Login\r\nexport const USER_LOGIN_REQUEST = \"USER_LOGIN_REQUEST\";\r\nexport const USER_LOGIN_SUCCESS = \"USER_LOGIN_SUCCESS\";\r\nexport const USER_LOGIN_FAIL = \"USER_LOGIN_FAIL\";\r\n\r\n// User Logout\r\nexport const USER_LOGOUT_REQUEST = \"USER_LOGOUT_REQUEST\";\r\nexport const USER_LOGOUT_SUCCESS = \"USER_LOGOUT_SUCCESS\";\r\nexport const USER_LOGOUT_FAIL = \"USER_LOGOUT_FAIL\";\r\n\r\n// User Registration\r\nexport const USER_REGISTRATION_REQUEST = \"USER_REGISTRATION_REQUEST\";\r\nexport const USER_REGISTRATION_SUCCESS = \"USER_REGISTRATION_SUCCESS\";\r\nexport const USER_REGISTRATION_FAIL = \"USER_REGISTRATION_FAIL\";\r\n\r\n// Get User Address\r\nexport const GET_USER_ADDRESS_REQUEST = \"GET_USER_ADDRESS_REQUEST\";\r\nexport const GET_USER_ADDRESS_SUCCESS = \"GET_USER_ADDRESS_SUCCESS\";\r\nexport const GET_USER_ADDRESS_FAILURE = \"GET_USER_ADDRESS_FAILURE\";\r\n\r\n// Reset Address\r\nexport const RESET_ADDRESS_REQUEST = \"RESET_ADDRESS_REQUEST\";\r\nexport const RESET_ADDRESS_SUCCESS = \"RESET_ADDRESS_SUCCESS\";\r\nexport const RESET_ADDRESS_FAILURE = \"RESET_ADDRESS_FAILURE\";\r\n\r\n// Add User Address\r\nexport const ADD_USER_ADDRESS_REQUEST = \"ADD_USER_ADDRESS_REQUEST\";\r\nexport const ADD_USER_ADDRESS_SUCCESS = \"ADD_USER_ADDRESS_SUCCESS\";\r\nexport const ADD_USER_ADDRESS_FAILURE = \"ADD_USER_ADDRESS_FAILURE\";\r\n\r\n// Add User Order\r\nexport const ADD_USER_ORDER_REQUEST = \"ADD_USER_ORDER_REQUEST\";\r\nexport const ADD_USER_ORDER_SUCCESS = \"ADD_USER_ORDER_SUCCESS\";\r\nexport const ADD_USER_ORDER_FAILURE = \"ADD_USER_ORDER_FAILURE\";\r\n\r\n// Get User Orders\r\nexport const GET_USER_ORDER_REQUEST = \"GET_USER_ORDER_REQUEST\";\r\nexport const GET_USER_ORDER_SUCCESS = \"GET_USER_ORDER_SUCCESS\";\r\nexport const GET_USER_ORDER_FAILURE = \"GET_USER_ORDER_FAILURE\";\r\n\r\n// Get Order Derails\r\nexport const GET_USER_ORDER_DETAILS_REQUEST = \"GET_USER_ORDER_DETAILS_REQUEST\";\r\nexport const GET_USER_ORDER_DETAILS_SUCCESS = \"GET_USER_ORDER_DETAILS_SUCCESS\";\r\nexport const GET_USER_ORDER_DETAILS_FAILURE = \"GET_USER_ORDER_DETAILS_FAILURE\";\r\n\r\n","import * as actionTypes from '../constants/userConstants';\r\n\r\n\r\nconst initialState = {\r\n    // token: null,\r\n    user: {\r\n        _id: '',\r\n        firstName: '',\r\n        lastName: '',\r\n        email: '',\r\n        role: ''\r\n    },\r\n    authenticate: false,\r\n    authenticating: false,\r\n    loading: false,\r\n    error: null,\r\n    message: ''\r\n}\r\n\r\nexport const authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.USER_LOGIN_REQUEST:\r\n            state = {\r\n                ...state,\r\n                authenticating: true\r\n            }\r\n            break;\r\n        case actionTypes.USER_LOGIN_SUCCESS:\r\n            state = {\r\n                // ...state,\r\n                // token: action.payload.token,\r\n                user: action.payload.user,\r\n                authenticate: true,\r\n                authenticating: false\r\n            }\r\n            break;\r\n        case actionTypes.USER_LOGIN_FAIL:\r\n            state = {\r\n                authenticate: false,\r\n                authenticating: false,\r\n                error: action.payload,\r\n            }\r\n            break;\r\n        case actionTypes.USER_LOGOUT_REQUEST:\r\n            state = {\r\n                state: {\r\n                    ...initialState,\r\n                    loading: true\r\n                }\r\n            }\r\n            break;\r\n        case actionTypes.USER_LOGOUT_SUCCESS:\r\n            state = {\r\n                ...initialState,\r\n                loading: false,\r\n                authenticate: false,\r\n                authenticating: false\r\n            }\r\n            break;\r\n        case actionTypes.USER_LOGOUT_FAIL:\r\n            state = {\r\n                authenticate: false,\r\n                authenticating: false,\r\n                loading: false,\r\n                error: action.payload,\r\n            }\r\n            break;\r\n    }\r\n    return state;\r\n}\r\n\r\nconst regInitialState = {\r\n    error: null,\r\n    message: '',\r\n    loading: false\r\n}\r\n\r\nexport const registrationReducer = (state = regInitialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.USER_REGISTRATION_REQUEST:\r\n            state = {\r\n                ...state,\r\n                loading: true\r\n            }\r\n            break;\r\n        case actionTypes.USER_REGISTRATION_SUCCESS:\r\n            state = {\r\n                ...state,\r\n                loading: false,\r\n                message: action.payload\r\n            }\r\n            break;\r\n        case actionTypes.USER_REGISTRATION_FAIL:\r\n            // console.log(action.payload);\r\n            state = {\r\n                loading: false,\r\n                error: action.payload,\r\n            }\r\n            break;\r\n    }\r\n    return state;\r\n}\r\n\r\nconst userDetailsInitialState = {\r\n    address: [],\r\n    orders: [],\r\n    orderDetails: {},\r\n    error: null,\r\n    loading: false,\r\n    orderFetching: false,\r\n    placedOrderId: null,\r\n};\r\n\r\nexport const userDetailsReducer = (state = userDetailsInitialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.GET_USER_ADDRESS_REQUEST:\r\n            state = {\r\n                ...state,\r\n                loading: true,\r\n            };\r\n            break;\r\n        case actionTypes.GET_USER_ADDRESS_SUCCESS:\r\n            state = {\r\n                ...state,\r\n                address: action.payload.address,\r\n                loading: false,\r\n            };\r\n            break;\r\n        case actionTypes.GET_USER_ADDRESS_FAILURE:\r\n            state = {\r\n                ...state,\r\n                loading: false,\r\n                error: action.payload.error,\r\n            };\r\n            break;\r\n        case actionTypes.RESET_ADDRESS_REQUEST:\r\n            state = {\r\n                ...userDetailsInitialState,\r\n                loading: true,\r\n            };\r\n            break;\r\n        case actionTypes.RESET_ADDRESS_SUCCESS:\r\n            state = {\r\n                ...userDetailsInitialState\r\n            };\r\n            break;\r\n        case actionTypes.RESET_ADDRESS_FAILURE:\r\n            state = {\r\n                ...state,\r\n                loading: false,\r\n                error: action.payload.error,\r\n            };\r\n            break;\r\n        case actionTypes.ADD_USER_ADDRESS_REQUEST:\r\n            state = {\r\n                ...state,\r\n                loading: true,\r\n            };\r\n            break;\r\n        case actionTypes.ADD_USER_ADDRESS_SUCCESS:\r\n            state = {\r\n                ...state,\r\n                address: action.payload.address,\r\n                error: '',\r\n                loading: false,\r\n            };\r\n            break;\r\n        case actionTypes.ADD_USER_ADDRESS_FAILURE:\r\n            state = {\r\n                ...state,\r\n                loading: false,\r\n                error: action.payload.fieldErrors,\r\n            };\r\n            break;\r\n        case actionTypes.ADD_USER_ORDER_SUCCESS:\r\n            state = {\r\n                ...state,\r\n                placedOrderId: action.payload._id,\r\n            };\r\n            break;\r\n        case actionTypes.GET_USER_ORDER_REQUEST:\r\n            state = {\r\n                ...state,\r\n                orderFetching: true,\r\n            };\r\n            break;\r\n        case actionTypes.GET_USER_ORDER_SUCCESS:\r\n            state = {\r\n                ...state,\r\n                orders: action.payload.orders,\r\n                orderFetching: false,\r\n            };\r\n            break;\r\n        case actionTypes.GET_USER_ORDER_FAILURE:\r\n            state = {\r\n                ...state,\r\n                error: action.payload.error,\r\n                orderFetching: false,\r\n            };\r\n            break;\r\n        case actionTypes.GET_USER_ORDER_DETAILS_REQUEST:\r\n            break;\r\n        case actionTypes.GET_USER_ORDER_DETAILS_SUCCESS:\r\n            state = {\r\n                ...state,\r\n                orderDetails: action.payload.order,\r\n            };\r\n            break;\r\n        case actionTypes.GET_USER_ORDER_DETAILS_FAILURE:\r\n            break;\r\n    }\r\n\r\n    return state;\r\n};","\r\n\r\nexport const GET_PRODUCTS_REQUEST = \"GET_PRODUCTS_REQUEST\";\r\nexport const GET_PRODUCTS_SUCCESS = \"GET_PRODUCTS_SUCCESS\";\r\nexport const GET_PRODUCTS_FAIL = \"GET_PRODUCTS_FAIL\";\r\n\r\nexport const GET_FILTERED_PRODUCTS_REQUEST = \"GET_FILTERED_PRODUCTS_REQUEST\";\r\nexport const GET_FILTERED_PRODUCTS_SUCCESS = \"GET_FILTERED_PRODUCTS_SUCCESS\";\r\nexport const GET_FILTERED_PRODUCTS_FAIL = \"GET_FILTERED_PRODUCTS_FAIL\";\r\n\r\nexport const GET_PRODUCT_DETAILS_REQUEST = \"GET_PRODUCT_DETAILS_REQUEST\";\r\nexport const GET_PRODUCT_DETAILS_SUCCESS = \"GET_PRODUCT_DETAILS_SUCCESS\";\r\nexport const GET_PRODUCT_DETAILS_FAIL = \"GET_PRODUCT_DETAILS_FAIL\";\r\nexport const GET_PRODUCT_DETAILS_RESET = \"GET_PRODUCT_DETAILS_RESET\";","import { createStore, combineReducers, applyMiddleware } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport thunk from 'redux-thunk';\r\n\r\n// Reducers\r\nimport { cartReducer } from './reducers/cartReducer';\r\nimport { categoryReducer } from './reducers/category.reducer'\r\nimport { authReducer, registrationReducer, userDetailsReducer } from './reducers/user.reducer';\r\nimport { getProductDetailsReducer, getProductsReducer, filteredProductsReducer } from './reducers/productReducers';\r\n\r\nconst reducer = combineReducers({\r\n    auth: authReducer,\r\n    regAuth: registrationReducer,\r\n    cart: cartReducer,\r\n    categories: categoryReducer,\r\n    filteredProducts: filteredProductsReducer,\r\n    getAllProducts: getProductsReducer,\r\n    getProductDetails: getProductDetailsReducer,\r\n    userDetails: userDetailsReducer\r\n})\r\n\r\nconst middleware = [thunk];\r\n\r\nconst cartFromLocalStorage = localStorage.getItem('cart') ? JSON.parse(localStorage.getItem('cart')) : []\r\n\r\nconst INITIAL_STATE = {\r\n    cart: {\r\n        cartItems: cartFromLocalStorage\r\n    }\r\n}\r\n\r\nconst store = createStore(\r\n    reducer,\r\n    INITIAL_STATE,\r\n    composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;\r\n","import * as actionTypes from '../constants/productConstants';\r\n\r\nexport const getProductsReducer = (state = { products: [] }, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.GET_PRODUCTS_REQUEST:\r\n            return {\r\n                loading: true,\r\n                products: []\r\n            }\r\n        case actionTypes.GET_PRODUCTS_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                products: action.payload\r\n            }\r\n        case actionTypes.GET_PRODUCTS_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload,\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const filteredProductsReducer = (state = { products: [] }, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.GET_FILTERED_PRODUCTS_REQUEST:\r\n            return {\r\n                loading: true,\r\n                products: []\r\n            }\r\n        case actionTypes.GET_FILTERED_PRODUCTS_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                products: action.payload\r\n            }\r\n        case actionTypes.GET_FILTERED_PRODUCTS_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload,\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const getProductDetailsReducer = (state = { product: {} }, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.GET_PRODUCT_DETAILS_REQUEST:\r\n            return {\r\n                loading: true\r\n            }\r\n        case actionTypes.GET_PRODUCT_DETAILS_SUCCESS:\r\n            return {\r\n                loading:false,\r\n                product: action.payload\r\n            }\r\n        case actionTypes.GET_PRODUCT_DETAILS_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        case actionTypes.GET_PRODUCT_DETAILS_RESET:\r\n            return {\r\n                product: {}\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n","import * as actionTypes from '../constants/cartConstants';\r\nimport store from '../store';\r\nimport axios from 'axios';\r\n\r\nexport const getCartItems = () => {\r\n    return async (dispatch) => {\r\n        // console.log('inside here');\r\n        try {\r\n            dispatch({ type: actionTypes.ADD_TO_DB_CART_REQUEST });\r\n            const res = await axios.get(`/api/user/cart`);\r\n            // console.log(res.data);\r\n            if (res.status === 200) {\r\n                const cartItems = res.data;\r\n                // console.log(cartItems);\r\n                if (cartItems) {\r\n                    dispatch({\r\n                        type: actionTypes.ADD_TO_DB_CART_SUCCESS,\r\n                        payload: { cartItems },\r\n                    });\r\n                }\r\n            }\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    };\r\n};\r\n\r\nexport const addToCart = (id, qty) => async (dispatch, getState) => {\r\n\r\n    dispatch({\r\n        type: actionTypes.ADD_TO_CART_REQUEST\r\n    })\r\n\r\n    // console.log('id', id);\r\n    // console.log('qty', qty);\r\n\r\n    const { data } = await axios.get(`/api/products/${id}`);\r\n    const appStore = store.getState();\r\n    const auth = appStore.auth;\r\n    // const currentCart = JSON.parse(localStorage.getItem('cart'))\r\n\r\n    if (qty < 1) { qty = 1; }\r\n    const payload = {\r\n        product: data._id,\r\n        category: data.category,\r\n        name: data.name,\r\n        productImage: data.productImage,\r\n        price: data.price,\r\n        measurement: data.measurement,\r\n        description: data.description,\r\n        inStock: data.inStock,\r\n        qty\r\n    }\r\n\r\n    if (auth.authenticate) {\r\n        // try to add to DB\r\n        console.log(\"auth.authenticate is true, building 'sendIt'... \");\r\n        const sendIt = {\r\n            cartItems: [\r\n                {\r\n                    product: payload.product,\r\n                    quantity: payload.qty\r\n                }\r\n            ]\r\n        }\r\n        const res = await axios.post(`/api/user/cart/add`, sendIt, { withCredentials: true })\r\n        if (res.status === 201 || res.status === 200) {\r\n            // console.log('add to db cart success', res);\r\n            dispatch(getCartItems());\r\n        } else {\r\n            console.log('add to db cart failed', res);\r\n        }\r\n    } else {\r\n        // add to local storage\r\n        dispatch({\r\n            type: actionTypes.ADD_TO_CART_SUCCESS,\r\n            payload: {\r\n                cartItems: [{\r\n                    quantity: payload.qty,\r\n                    // _id: payload.product,\r\n                    product: {\r\n                        _id: payload.product,\r\n                        category: payload.category,\r\n                        name: payload.name,\r\n                        productImage: payload.productImage,\r\n                        price: payload.price,\r\n                        measurement: payload.measurement,\r\n                        description: payload.description,\r\n                        inStock: payload.inStock,\r\n                    }\r\n                }]\r\n            }\r\n        })\r\n        localStorage.setItem('cart', JSON.stringify(getState().cart.cartItems));\r\n    }\r\n\r\n}\r\n\r\nexport const updateCart = () => async (dispatch, getState) => {\r\n    const { auth } = store.getState();\r\n    let cartItems = localStorage.getItem('cart') ?\r\n        JSON.parse(localStorage.getItem('cart')) :\r\n        null;\r\n    // console.log('some cart items', cartItems);\r\n    if (auth.authenticate) {\r\n        localStorage.removeItem('cart');\r\n        if (cartItems) {\r\n\r\n            const payload = {\r\n                cartItems: Object.keys(cartItems).map((key, index) => {\r\n                    return {\r\n                        product: cartItems[key].product._id,\r\n                        quantity: cartItems[key].quantity\r\n                    }\r\n                })\r\n            }\r\n            if (Object.keys(cartItems).length > 0) {\r\n                // console.log('sending payload:', payload);\r\n                const res = await axios.post(`/api/user/cart/add`, payload, { withCredentials: true })\r\n                if (res.status === 201) {\r\n                    dispatch(getCartItems());\r\n                }\r\n            }\r\n        };\r\n    } else {\r\n        if (cartItems) {\r\n            dispatch({\r\n                type: actionTypes.ADD_TO_CART_SUCCESS,\r\n                payload: { cartItems }\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\nexport const removeFromCart = (id) => async (dispatch, getState) => {\r\n    // console.log(id);\r\n\r\n    const appStore = store.getState();\r\n    const auth = appStore.auth;\r\n\r\n    if (auth.authenticate) {\r\n        dispatch({\r\n            type: actionTypes.REMOVE_FROM_DB_CART_REQUEST\r\n        })\r\n        const res = await axios.get(`/api/user/remove/item/${id}`, { withCredentials: true })\r\n        if (res.status === 201) {\r\n            // console.log('status is 201');\r\n            dispatch(getCartItems());\r\n        } else {\r\n            console.log('status is not 201');\r\n        }\r\n    } else {\r\n        dispatch({\r\n            type: actionTypes.REMOVE_FROM_CART_REQUEST\r\n        })\r\n        dispatch({\r\n            type: actionTypes.REMOVE_FROM_CART_SUCCESS,\r\n            payload: id\r\n        })\r\n        localStorage.setItem('cart', JSON.stringify(getState().cart.cartItems));\r\n    }\r\n\r\n\r\n\r\n}\r\n\r\n\r\n// export const addToCart = (id, qty) => async (dispatch, getState) => {\r\n\r\n//     const { data } = await axios.get(`/api/products/${id}`);\r\n//     const currentCart = JSON.parse(localStorage.getItem('cart'))\r\n\r\n//     if (qty < 1) { qty = 1; }\r\n\r\n//     dispatch({\r\n//         type: actionTypes.ADD_TO_CART,\r\n//         payload: {\r\n//             product: data._id,\r\n//             category: data.category,\r\n//             name: data.name,\r\n//             productImage: data.productImage,\r\n//             price: data.price,\r\n//             measurement: data.measurement,\r\n//             description: data.description,\r\n//             inStock: data.inStock,\r\n//             qty\r\n//         }\r\n//     })\r\n\r\n//     localStorage.setItem('cart', JSON.stringify(getState().cart.cartItems));\r\n// }","import { useState, useEffect } from 'react';\r\n\r\n// CSS\r\nimport './ProductCard.css';\r\n\r\n// Routing\r\nimport { Link } from 'react-router-dom';\r\n\r\n// Components\r\nimport { Button } from '../../components/Button/Button'\r\n\r\n// Redux\r\nimport { useDispatch } from 'react-redux';\r\nimport { addToCart } from '../../redux/actions/cartActions';\r\n\r\n\r\nconst Product = ({ productId, category, name, productImage, price, measurement, description, inStock }) => {\r\n\r\n    const [qty, setQty] = useState(0);\r\n    const dispatch = useDispatch();\r\n\r\n    const addToCartHandler = () => {\r\n        if (qty < 1) {\r\n            setQty(1);\r\n        }\r\n        dispatch(addToCart(productId, qty));\r\n    }\r\n\r\n    return (\r\n        <div className=\"product\">\r\n            <img src={productImage} alt={name} />\r\n            <div className=\"product-info\">\r\n                <h1\r\n                    style={{\r\n                        textAlign: 'center',\r\n                        marginBottom: '15px',\r\n                        padding: '15px 2px',\r\n                        borderRadius: '4px'\r\n                    }}\r\n                    className=\"info-name\"\r\n                >{name}\r\n                </h1>\r\n                {/* <p className=\"info-description\">{description}</p> */}\r\n                <div\r\n                    style={{\r\n                        display: 'flex',\r\n                        justifyContent: 'space-between',\r\n                        margin: '0px 0px 0px 0px'\r\n                    }}\r\n                    className=\"info-price\"\r\n                >\r\n                    <p>\r\n                        ${price.toFixed(2)} / {measurement}\r\n                    </p>\r\n                    <p>\r\n                        {inStock ? \" In Stock.\" : \" Out Of Stock.\"}\r\n                    </p>\r\n                </div>\r\n                <p className=\"add-to-cart-quantity\">\r\n                    <label htmlFor=\"quantity\">Quantity: </label>\r\n                    <input\r\n                        min=\"0\"\r\n                        type=\"number\"\r\n                        name=\"quantity\"\r\n                        onChange={(e) => e.target.value < 0 ? setQty(0) : setQty(e.target.value)}\r\n                        value={qty}\r\n                    />\r\n                </p>\r\n                <p className=\"add-to-cart-button\">\r\n                    {\r\n                        inStock\r\n                            ? <Button buttonSize=\"btn--sm\" onClick={addToCartHandler}>Add To Cart</Button>\r\n                            : <Button buttonSize=\"btn--sm\" buttonStyle='btn-disabled'>Add To Cart</Button>\r\n                    }\r\n\r\n                </p>\r\n                <Link to={`/product/${productId}`} className=\"info-button btn--primary btn--sm\">View</Link>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Product;","import * as actionTypes from '../constants/category.constants';\r\nimport axios from 'axios';\r\n\r\nexport const getAllCategories = () => {\r\n    return async dispatch => {\r\n        dispatch({\r\n            type: actionTypes.GET_ALL_CATEGORIES_REQUEST\r\n        });\r\n\r\n        const res = await axios.get(`/api/categories`);\r\n\r\n        if (res.status === 200) {\r\n            const { categoryList } = res.data\r\n            dispatch({\r\n                type: actionTypes.GET_ALL_CATEGORIES_SUCCESS,\r\n                payload: { categoryList: categoryList }\r\n            })\r\n        } else {\r\n            dispatch({\r\n                type: actionTypes.GET_ALL_CATEGORIES_FAIL,\r\n                payload: { error: res.data.error }\r\n            })\r\n        }\r\n    }\r\n}","import { useEffect } from 'react';\r\n\r\n// Routing\r\nimport { Link } from 'react-router-dom';\r\n\r\n// CSS\r\nimport './CategoryMenu.css';\r\n\r\n// Redux\r\nimport { getAllCategories } from '../../redux/actions/category.actions';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nconst CategoryMenu = () => {\r\n\r\n    const categories = useSelector(state => state.categories);\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        dispatch(getAllCategories())\r\n    }, [])\r\n\r\n    // Generare a list of the categories and their children to display on page\r\n    const renderCategories = (categories) => {\r\n        let myCategories = [];\r\n        for (let category of categories) {\r\n            myCategories.push(\r\n                <li key={category._id}>\r\n                    {\r\n                        category.parentId\r\n                            ? <Link className=\"btn btn--primary btn--med\" to={`/category/${category.name}`}>{category.name}</Link>\r\n                            : <span>{category.name}</span>\r\n                    }\r\n                    {category.children.length > 0 ? (<ul>{renderCategories(category.children)}</ul>) : null}\r\n                </li>\r\n            );\r\n        }\r\n        // console.log(myCategories);\r\n        return myCategories;\r\n    }\r\n\r\n    return (\r\n        <div className=\"cat-menu-header\">\r\n            <ul>\r\n                {\r\n                    categories.categoryList.length > 0\r\n                        ? renderCategories(categories.categoryList)\r\n                        : null\r\n                }\r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CategoryMenu;","import { useEffect, useState } from 'react';\r\n\r\n// CSS\r\nimport './ProductSection.css';\r\n\r\n// Components\r\nimport Product from '../ProductCard/ProductCard';\r\n\r\nconst ProductSection = ({ products, loading, error, sectionImg, imageAlt, filterOne, filterTwo, filterThree }) => {\r\n\r\n    const [show, setShow] = useState(false);\r\n\r\n    const handleShow = () => {\r\n        setShow(!show);\r\n    }\r\n\r\n    return (\r\n        <div className=\"product-section\">\r\n            <div className=\"sectionImg\">\r\n                <img onClick={handleShow} src={sectionImg} alt={imageAlt} />\r\n            </div>\r\n            <div className={show ? \"our-products-screen-products show\" : \"our-products-screen-products\"}>\r\n                {\r\n                    loading ? (\r\n                        <h2>Loading...</h2>\r\n                    ) : error ? (\r\n                        <h2>{error}</h2>\r\n                    ) :\r\n                        products.products\r\n                            ? products.products.map((product, idx) =>\r\n                                product.category.name === filterOne\r\n                                    || product.category.name === filterTwo\r\n                                    || product.category.name === filterThree\r\n                                    ? <Product key={idx}\r\n                                        productId={product._id}\r\n                                        category={product.category._id}\r\n                                        name={product.name}\r\n                                        productImage={product.productImage}\r\n                                        price={product.price}\r\n                                        measurement={product.measurement}\r\n                                        description={product.description}\r\n                                        inStock={product.inStock}\r\n                                    />\r\n                                    : null\r\n                            )\r\n                            : null\r\n                }\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ProductSection;","import * as actionTypes from '../constants/productConstants';\r\nimport axios from 'axios';\r\n\r\n\r\nexport const getAllProducts = () => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: actionTypes.GET_PRODUCTS_REQUEST });\r\n\r\n        const res = await axios.get(`/api/categories/products`);\r\n\r\n        if (res.status === 200) {\r\n            dispatch({\r\n                type: actionTypes.GET_PRODUCTS_SUCCESS,\r\n                payload: res.data\r\n            })\r\n        }\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: actionTypes.GET_PRODUCTS_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message\r\n        });\r\n    };\r\n};\r\n\r\nexport const getProductsByCat = (name) => {\r\n    return async (dispatch) => {\r\n        \r\n        dispatch({\r\n            type: actionTypes.GET_FILTERED_PRODUCTS_REQUEST\r\n        })\r\n\r\n        const res = await axios.get(`/api/category/products/${name}`);\r\n        if (res.status === 200) {\r\n            dispatch({\r\n                type: actionTypes.GET_FILTERED_PRODUCTS_SUCCESS,\r\n                payload: res.data\r\n            })\r\n        } else {\r\n            dispatch({\r\n                type: actionTypes.GET_FILTERED_PRODUCTS_FAIL,\r\n                payload: {error: res.data.error}\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport const getProductDetails = (id) => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: actionTypes.GET_PRODUCT_DETAILS_REQUEST });\r\n\r\n        const { data } = await axios.get(`/api/products/${id}`);\r\n\r\n        dispatch({\r\n            type: actionTypes.GET_PRODUCT_DETAILS_SUCCESS,\r\n            payload: data\r\n        });\r\n    } catch (error) {\r\n        dispatch({\r\n            type: actionTypes.GET_PRODUCT_DETAILS_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message\r\n        });\r\n    }\r\n};\r\n\r\nexport const removeProductDetails = () => (dispatch) => {\r\n    dispatch({\r\n        type: actionTypes.GET_PRODUCT_DETAILS_RESET\r\n    });\r\n};","import './OurProductsScreen.css';\r\nimport { useEffect } from 'react';\r\n\r\n// Components\r\nimport Product from '../../components/ProductCard/ProductCard';\r\nimport CategoryMenu from '../../components/CategoryMenu/CategoryMenu';\r\nimport ProductSection from '../../components/ProductSection/ProductSection';\r\n\r\n// Redux\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { getAllProducts as listProducts } from '../../redux/actions/productActions';\r\nimport { getAllCategories as listCategories } from '../../redux/actions/category.actions';\r\n\r\nconst OurProductsScreen = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const getAllProducts = useSelector((state) => state.getAllProducts);\r\n    const { products, loading, error } = getAllProducts;\r\n\r\n    const getAllCategories = useSelector((state) => state.categories);\r\n    const { categoryList } = getAllCategories;\r\n    // console.log(categoryList);\r\n\r\n    useEffect(() => {\r\n        dispatch(listProducts())\r\n        dispatch(listCategories())\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            <CategoryMenu />\r\n            <div className=\"our-products-screen\">\r\n                <ProductSection\r\n                    filterOne={'Milk'}\r\n                    filterTwo={\"Cheese\"}\r\n                    filterThree={\"Eggs\"}\r\n                    sectionImg={require('../../img/dairy-eggs-logo.png').default}\r\n                    imageAlt={'dairy-eggs-logo'}\r\n                    products={products}\r\n                    loading={loading}\r\n                    error={error}\r\n                />\r\n                <ProductSection\r\n                    filterOne={'Beef'}\r\n                    sectionImg={require('../../img/beef-logo.png').default}\r\n                    imageAlt={'beef-logo'}\r\n                    products={products}\r\n                    loading={loading}\r\n                    error={error}\r\n                />\r\n                <ProductSection\r\n                    filterOne={'Pork'}\r\n                    sectionImg={require('../../img/pork-logo.png').default}\r\n                    imageAlt={'pork-logo'}\r\n                    products={products}\r\n                    loading={loading}\r\n                    error={error}\r\n                />\r\n                <ProductSection\r\n                    filterOne={'Chicken'}\r\n                    filterTwo={\"Turkey\"}\r\n                    sectionImg={require('../../img/poultry-logo.png').default}\r\n                    imageAlt={'poultry-logo'}\r\n                    products={products}\r\n                    loading={loading}\r\n                    error={error}\r\n                />\r\n                <ProductSection\r\n                    filterOne={'Lamb'}\r\n                    sectionImg={require('../../img/lamb-logo.png').default}\r\n                    imageAlt={'lamb-logo'}\r\n                    products={products}\r\n                    loading={loading}\r\n                    error={error}\r\n                />\r\n                <ProductSection\r\n                    filterOne={'Goat'}\r\n                    sectionImg={require('../../img/goat-logo.png').default}\r\n                    imageAlt={'goat-logo'}\r\n                    products={products}\r\n                    loading={loading}\r\n                    error={error}\r\n                />\r\n                <ProductSection\r\n                    filterOne={'Raw Honey'}\r\n                    filterTwo={\"Creamed Honey\"}\r\n                    sectionImg={require('../../img/honey-logo.png').default}\r\n                    imageAlt={'honey-logo'}\r\n                    products={products}\r\n                    loading={loading}\r\n                    error={error}\r\n                />\r\n                <ProductSection\r\n                    filterOne={'Packs'}\r\n                    sectionImg={require('../../img/express-packs-logo.png').default}\r\n                    imageAlt={'express-packs-logo'}\r\n                    products={products}\r\n                    loading={loading}\r\n                    error={error}\r\n                />\r\n\r\n            </div>\r\n        </>\r\n    )\r\n}\r\nexport default OurProductsScreen;\r\n\r\n\r\n\r\n{/* <div>\r\n                    <img src={require('../../img/beef-logo.png').default} alt=\"beef-logo\" />\r\n                </div>\r\n                <div className=\"our-products-screen-products\">\r\n                    {\r\n                        loading ? (\r\n                            <h2>Loading...</h2>\r\n                        ) : error ? (\r\n                            <h2>{error}</h2>\r\n                        ) :\r\n                            products.products\r\n                                ? products.products.map((product, idx) =>\r\n                                    product.category.name == \"Beef\"\r\n                                        ? <Product key={idx}\r\n                                            productId={product._id}\r\n                                            category={product.category._id}\r\n                                            name={product.name}\r\n                                            productImage={product.productImage}\r\n                                            price={product.price}\r\n                                            measurement={product.measurement}\r\n                                            description={product.description}\r\n                                            inStock={product.inStock}\r\n                                        />\r\n                                        : null\r\n                                )\r\n                                : null\r\n                    }\r\n\r\n                </div> */}\r\n\r\n\r\n\r\n\r\n\r\n\r\n// const testCatList = (categories) => {\r\n    //     let newCatList = [];\r\n    //     let subCats = [];\r\n    //     for (const category of categories) {\r\n    //         newCatList.push(\r\n    //             category._id\r\n    //         )\r\n    //         if (category.children.length > 0) {\r\n    //             subCats.push(\r\n    //                 testCatList(category.children)\r\n    //             )\r\n    //         }\r\n    //     }\r\n    //     for (const arr of subCats) {\r\n    //         for (const catId of arr) {\r\n    //             newCatList.push(\r\n    //                 catId\r\n    //             )\r\n    //         }\r\n    //     }\r\n        // console.log(subCats);\r\n    //     return newCatList;\r\n    // }\r\n\r\n    // const catList = testCatList(categoryList);\r\n    // console.log(catList[17]);\r\n\r\n    // const workPlease = (catList, products) => {\r\n    //     const output = [];\r\n    //     for (const categoryId of catList) {\r\n    //         products.map((product, idx) => {\r\n    //             if (product.category === categoryId) {\r\n    //                 output.push(\r\n    //                     <>\r\n    //                         <Product key={idx}\r\n    //                             productId={product._id}\r\n    //                             category={product.category}\r\n    //                             name={product.name}\r\n    //                             productImage={product.productImage}\r\n    //                             price={product.price}\r\n    //                             measurement={product.measurement}\r\n    //                             description={product.description}\r\n    //                             inStock={product.inStock}\r\n    //                         />\r\n    //                     </>\r\n    //                 )\r\n    //             }\r\n    //         })\r\n    //     }\r\n    //     return output;\r\n    // }\r\n","import * as actionTypes from '../constants/userConstants';\r\nimport * as cartActionTypes from '../constants/cartConstants';\r\nimport axios from 'axios';\r\n\r\n\r\nexport const register = (user) => {\r\n    return async (dispatch) => {\r\n\r\n        dispatch({\r\n            type: actionTypes.USER_REGISTRATION_REQUEST,\r\n            payload: {\r\n                ...user\r\n            }\r\n        });\r\n\r\n        await axios.post(`http://localhost:8000/api/users/register`, { ...user }, { withCredentials: true })\r\n            .then(res => {\r\n                // console.log(res.data);\r\n                if (res.data.message) {\r\n                    const { message } = res.data;\r\n                    // console.log(message);\r\n                    dispatch({\r\n                        type: actionTypes.USER_REGISTRATION_SUCCESS,\r\n                        payload: {\r\n                            message\r\n                        }\r\n                    })\r\n                } else {\r\n                    // console.log(\"number 1\");\r\n                    dispatch({\r\n                        type: actionTypes.USER_REGISTRATION_FAIL,\r\n                        payload: {\r\n                            error: res.data\r\n                        }\r\n                    })\r\n                }\r\n            })\r\n            .catch(err => {\r\n                // console.log(\"number 2\");\r\n                // if (err) {\r\n                //     console.log(err.response);\r\n                // }\r\n                dispatch({\r\n                    type: actionTypes.USER_REGISTRATION_FAIL,\r\n                    payload: {\r\n                        error: err.response.data.error\r\n                    }\r\n                })\r\n            })\r\n    }\r\n}\r\n\r\n\r\nexport const login = (user) => {\r\n    return async (dispatch) => {\r\n\r\n        dispatch({\r\n            type: actionTypes.USER_LOGIN_REQUEST,\r\n            payload: {\r\n                ...user\r\n            }\r\n        });\r\n\r\n        await axios.post(`http://localhost:8000/api/users/login`, { ...user }, { withCredentials: true })\r\n            .then(res => {\r\n                // console.log(res.data);\r\n                if (res.data.message) {\r\n                    const { user } = res.data;\r\n                    // localStorage.setItem('token', token);\r\n                    localStorage.setItem('user', JSON.stringify(user));\r\n                    dispatch({\r\n                        type: actionTypes.USER_LOGIN_SUCCESS,\r\n                        payload: {\r\n                            user\r\n                        }\r\n                    })\r\n                } else {\r\n                    // console.log('inside the else');\r\n                    // console.log(res.data);\r\n                    dispatch({\r\n                        type: actionTypes.USER_LOGIN_FAIL,\r\n                        payload: res.data\r\n                    })\r\n                }\r\n            })\r\n            .catch(err => {\r\n                // console.log('.catch');\r\n                // console.log(err.response.data);\r\n                dispatch({\r\n                    type: actionTypes.USER_LOGIN_FAIL,\r\n                    payload: err.response.data\r\n                })\r\n            })\r\n    }\r\n}\r\n\r\nexport const isUserLoggedIn = () => {\r\n    return async (dispatch) => {\r\n        const user = JSON.parse(localStorage.getItem('user'));\r\n        if (user) {\r\n            dispatch({\r\n                type: actionTypes.USER_LOGIN_SUCCESS,\r\n                payload: {\r\n                    user\r\n                }\r\n            })\r\n        }\r\n\r\n        // const token = localStorage.getItem('token');\r\n        // if (token) {\r\n        //     const user = JSON.parse(localStorage.getItem('user'));\r\n        //     dispatch({\r\n        //         type: actionTypes.USER_LOGIN_SUCCESS,\r\n        //         payload: {\r\n        //             token, user\r\n        //         }\r\n        //     })\r\n        // }\r\n        // else {\r\n        //     dispatch({\r\n        //         type: actionTypes.ADMIN_LOGIN_FAIL,\r\n        //         payload: {\r\n        //             error: 'Failed to login.' \r\n        //         }\r\n        //     })\r\n        // }\r\n    }\r\n}\r\n\r\nexport const logout = () => {\r\n    return async (dispatch) => {\r\n\r\n        dispatch({\r\n            type: actionTypes.USER_LOGOUT_REQUEST\r\n        });\r\n\r\n        // const token = localStorage.getItem('token');\r\n\r\n        await axios.get(`http://localhost:8000/api/users/logout`, { withCredentials: true })\r\n            .then(res => {\r\n                if (res.status === 200) {\r\n                    // console.log(\"success\");\r\n                    localStorage.clear();\r\n                    dispatch({\r\n                        type: actionTypes.USER_LOGOUT_SUCCESS\r\n                    });\r\n                    dispatch({\r\n                        type: cartActionTypes.CART_RESET_SUCCESS\r\n                    });\r\n                    dispatch({\r\n                        type: actionTypes.RESET_ADDRESS_REQUEST\r\n                    })\r\n                    dispatch({\r\n                        type: actionTypes.RESET_ADDRESS_SUCCESS\r\n                    })\r\n                } else {\r\n                    console.log('logout fail in else');\r\n                    dispatch({\r\n                        type: actionTypes.USER_LOGOUT_FAIL,\r\n                        payload: res.data.error\r\n                    });\r\n                }\r\n            })\r\n            .catch(err => {\r\n                // console.log(err.response.data);\r\n                // console.log('logout fail in catch');\r\n                localStorage.clear();\r\n                dispatch({\r\n                    type: actionTypes.USER_LOGOUT_FAIL,\r\n                    payload: err.response.data\r\n                })\r\n            })\r\n    }\r\n}\r\n\r\nexport const getAddress = () => {\r\n    return async (dispatch) => {\r\n        try {\r\n            const res = await axios.get(`/api/address/get`);\r\n            dispatch({ type: actionTypes.GET_USER_ADDRESS_REQUEST });\r\n            if (res.status === 200) {\r\n                const {\r\n                    userAddress: { address },\r\n                } = res.data;\r\n                dispatch({\r\n                    type: actionTypes.GET_USER_ADDRESS_SUCCESS,\r\n                    payload: { address },\r\n                });\r\n            } else {\r\n                const { error } = res.data;\r\n                dispatch({\r\n                    type: actionTypes.GET_USER_ADDRESS_FAILURE,\r\n                    payload: { error },\r\n                });\r\n            }\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    };\r\n};\r\n\r\nexport const addAddress = (payload) => {\r\n    return async (dispatch) => {\r\n        try {\r\n            dispatch({ type: actionTypes.ADD_USER_ADDRESS_REQUEST });\r\n            const res = await axios.post(`/api/address/create`, { payload });\r\n            if (res.status === 201) {\r\n                // console.log(res);\r\n                const {\r\n                    address: { address },\r\n                } = res.data;\r\n                dispatch({\r\n                    type: actionTypes.ADD_USER_ADDRESS_SUCCESS,\r\n                    payload: { address },\r\n                });\r\n            } else {\r\n                const { error } = res.data;\r\n                dispatch({\r\n                    type: actionTypes.ADD_USER_ADDRESS_FAILURE,\r\n                    payload: { error },\r\n                });\r\n            }\r\n        } catch (error) {\r\n            // console.log('1', error.response);\r\n            // console.log('2', error.response.data.error.errors);\r\n            // console.log('3', Object.entries(error.response.data.error.errors));\r\n            // console.log(error.response.data.error.errors.address.errors);\r\n\r\n            let temp;\r\n            let errorCheck;\r\n\r\n            if (error.response.data.error.errors.address) {\r\n                const fieldErrors = error.response.data.error.errors.address.errors;\r\n                dispatch({\r\n                    type: actionTypes.ADD_USER_ADDRESS_FAILURE,\r\n                    payload: { fieldErrors },\r\n                });\r\n                // console.log('fieldErrors in if', fieldErrors);\r\n            } else {\r\n                var fieldErrors = {};\r\n                const errorArray = Object.entries(error.response.data.error.errors);\r\n\r\n                for (const array of errorArray) {\r\n\r\n                    const keyName = array[0].substring('address.0.'.length)\r\n                    array.splice(0, 1, keyName);\r\n\r\n                    const errorVal = array[1];\r\n\r\n                    if (keyName === 'name') {\r\n                        fieldErrors.name = errorVal;\r\n                    } else if (keyName === 'mobileNumber') {\r\n                        fieldErrors.mobileNumber = errorVal;\r\n                    } else if (keyName === 'zipCode') {\r\n                        fieldErrors.zipCode = errorVal;\r\n                    } else if (keyName === 'streetOne') {\r\n                        fieldErrors.streetOne = errorVal;\r\n                    } else if (keyName === 'city') {\r\n                        fieldErrors.city = errorVal;\r\n                    } else if (keyName === 'state') {\r\n                        fieldErrors.state = errorVal;\r\n                    } else if (keyName === 'addressType') {\r\n                        fieldErrors.addressType = errorVal;\r\n                    }\r\n                }\r\n                // console.log('fieldErrors in else', fieldErrors);\r\n\r\n                dispatch({\r\n                    type: actionTypes.ADD_USER_ADDRESS_FAILURE,\r\n                    payload: { fieldErrors },\r\n                });\r\n            }\r\n        }\r\n    };\r\n};\r\n\r\nexport const addOrder = (payload) => {\r\n    return async (dispatch) => {\r\n        try {\r\n            const res = await axios.post(`/api/orders/add`, payload, { withCredentials: true });\r\n            // console.log('res in addOrder from actions', res);\r\n            dispatch({ type: actionTypes.ADD_USER_ORDER_REQUEST });\r\n            if (res.status === 201) {\r\n                const data = res.data;\r\n                // console.log('data', data);\r\n                dispatch({\r\n                    type: cartActionTypes.CART_RESET_SUCCESS,\r\n                });\r\n                dispatch({\r\n                    type: actionTypes.ADD_USER_ORDER_SUCCESS,\r\n                    payload: data\r\n                });\r\n\r\n            } else {\r\n                const { error } = res.data;\r\n                dispatch({\r\n                    type: actionTypes.ADD_USER_ORDER_FAILURE,\r\n                    payload: { error },\r\n                });\r\n            }\r\n        } catch (error) {\r\n            console.log(error.response);\r\n        }\r\n    };\r\n}\r\n\r\nexport const getOrders = () => {\r\n    return async (dispatch) => {\r\n        try {\r\n            const res = await axios.get(`/api/orders/getOrders`, { withCredentials: true });\r\n            dispatch({ type: actionTypes.GET_USER_ORDER_REQUEST });\r\n            if (res.status === 200) {\r\n                // console.log(res.data);\r\n                const { orders } = res.data;\r\n                // console.log('orders in getOrders', orders);\r\n                dispatch({\r\n                    type: actionTypes.GET_USER_ORDER_SUCCESS,\r\n                    payload: { orders },\r\n                });\r\n            } else {\r\n                const { error } = res.data;\r\n                dispatch({\r\n                    type: actionTypes.GET_USER_ORDER_FAILURE,\r\n                    payload: { error },\r\n                });\r\n            }\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n}\r\n\r\nexport const getOrder = () => {\r\n    return async (dispatch) => {\r\n        try {\r\n            const res = await axios.get(`/api/orders/getOrder`, { withCredentials: true });\r\n            dispatch({ type: actionTypes.GET_USER_ORDER_DETAILS_REQUEST });\r\n            if (res.status === 200) {\r\n                console.log(res);\r\n                const { order } = res.data;\r\n                dispatch({\r\n                    type: actionTypes.GET_USER_ORDER_DETAILS_SUCCESS,\r\n                    payload: { order },\r\n                });\r\n            } else {\r\n                const { error } = res.data;\r\n                dispatch({\r\n                    type: actionTypes.GET_USER_ORDER_DETAILS_FAILURE,\r\n                    payload: { error },\r\n                });\r\n            }\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    };\r\n};\r\n// export const getOrder = (payload) => {\r\n//     return async (dispatch) => {\r\n//         try {\r\n//             const res = await axios.get(`/api/orders/getOrder`, payload);\r\n//             dispatch({ type: actionTypes.GET_USER_ORDER_DETAILS_REQUEST });\r\n//             if (res.status === 200) {\r\n//                 console.log(res);\r\n//                 const { order } = res.data;\r\n//                 dispatch({\r\n//                     type: actionTypes.GET_USER_ORDER_DETAILS_SUCCESS,\r\n//                     payload: { order },\r\n//                 });\r\n//             } else {\r\n//                 const { error } = res.data;\r\n//                 dispatch({\r\n//                     type: actionTypes.GET_USER_ORDER_DETAILS_FAILURE,\r\n//                     payload: { error },\r\n//                 });\r\n//             }\r\n//         } catch (error) {\r\n//             console.log(error);\r\n//         }\r\n//     };\r\n// };\r\n","import { Form, Col } from 'react-bootstrap';\r\n\r\n\r\n/**\r\n * @author\r\n * @function InputDefault\r\n */\r\n\r\nconst InputDefault = (props) => {\r\n    return (\r\n        <>\r\n            <Form.Label style={{marginLeft: '2px'}}>{props.label}</Form.Label>\r\n            <Form.Control\r\n                type={props.type}\r\n                name={props.name}\r\n                placeholder={props.placeholder}\r\n                value={props.value}\r\n                onChange={props.onChange}\r\n            />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default InputDefault;\r\n\r\n\r\n//  controlId: formBasic{field-type-here} / formGridText{field-type-here}","import { Redirect } from 'react-router-dom';\r\nimport React, { useEffect, useState } from 'react';\r\n\r\n// Bootstrap Components\r\nimport { Container, Col, Row, Form, Button, Modal } from 'react-bootstrap';\r\n\r\n// Components\r\n// import Layout from '../../components/Layout/Layout';\r\nimport InputDefault from '../../components/UI/Inputs/InputDefault';\r\n\r\n// Redux\r\nimport { register } from '../../redux/actions/userAuth.actions';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nconst RegistrationModal = (props) => {\r\n\r\n    const {\r\n        show,\r\n        size,\r\n        onHide,\r\n        handleClose\r\n    } = props;\r\n\r\n    const auth = useSelector(state => state.auth);\r\n    const regAuth = useSelector(state => state.regAuth);\r\n    const dispatch = useDispatch();\r\n\r\n    const initialReg = {\r\n        firstName: \"\",\r\n        lastName: \"\",\r\n        email: \"\",\r\n        password: \"\",\r\n        confirmPassword: \"\",\r\n        contactNumber: \"\",\r\n        // street1: \"\",\r\n        // street2: \"\",\r\n        // city: \"\",\r\n        // addressState: \"\",\r\n        // zip: \"\",\r\n    }\r\n    const [reg, setReg] = useState(initialReg);\r\n    const [regError, setRegError] = useState(initialReg);\r\n\r\n    const handleRegInputs = (e) => {\r\n        setReg({\r\n            ...reg,\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n    const handleRegistration = (e) => {\r\n        e.preventDefault();\r\n        const user = {\r\n            firstName: reg.firstName,\r\n            lastName: reg.lastName,\r\n            email: reg.email,\r\n            password: reg.password,\r\n            confirmPassword: reg.confirmPassword,\r\n            contactNumber: reg.contactNumber,\r\n            // street1: reg.street1,\r\n            // street2: reg.street2,\r\n            // city: reg.city,\r\n            // addressState: reg.addressState,\r\n            // zip: reg.zip\r\n        }\r\n        dispatch(register(user))\r\n        setReg(initialReg);\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (regAuth.error) {\r\n            if (typeof (regAuth.error.error) !== 'string') {\r\n                // console.log(regAuth.error.error);\r\n                // console.log(typeof (regAuth.error.error));\r\n                setRegError({\r\n                    firstName: regAuth.error.error.firstName,\r\n                    lastName: regAuth.error.error.lastName,\r\n                    email: regAuth.error.error.email,\r\n                    password: regAuth.error.error.password,\r\n                    confirmPassword: regAuth.error.error.confirmPassword,\r\n                    contactNumber: regAuth.error.error.contactNumber,\r\n                })\r\n            } else {\r\n                // console.log(regAuth.error.error);\r\n                // console.log(typeof (regAuth.error.error));\r\n                setRegError({\r\n                    errorMessage: regAuth.error.error\r\n                })\r\n            }\r\n\r\n        }\r\n    }, [regAuth])\r\n\r\n    if (regAuth.loading) {\r\n        return <p>Loading...</p>\r\n    }\r\n\r\n    return (\r\n        <Modal\r\n            show={show}\r\n            size={size}\r\n            aria-labelledby=\"contained-modal-title-vcenter\"\r\n            centered\r\n            onHide={onHide}\r\n        >\r\n            <Modal.Header >\r\n                <Modal.Title>New User</Modal.Title>\r\n                <Button className=\"btn btn--primary btn--med sign-up-btn\" onClick={handleClose}>\r\n                    Close\r\n                </Button>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <Container>\r\n                    <Row >\r\n                        <Col>\r\n                            <Form onSubmit={handleRegistration}>\r\n                                <Row style={{ marginBottom: '20px' }}>\r\n                                    <Form.Group style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n                                        <Form.Text className=\"text-danger font-weight-bold\">\r\n                                            {regError.errorMessage ? regError.errorMessage : \"\"}\r\n                                        </Form.Text>\r\n                                    </Form.Group>\r\n                                </Row>\r\n                                <Row style={{ marginBottom: '20px' }}>\r\n                                    <Col md={6}>\r\n                                        <Form.Group controlId=\"formBasicFirst\">\r\n                                            <InputDefault\r\n                                                name=\"firstName\"\r\n                                                label=\"First Name\"\r\n                                                type=\"text\"\r\n                                                placeholder=\"First Name\"\r\n                                                value={reg.firstName}\r\n                                                onChange={handleRegInputs}\r\n                                            />\r\n                                            <Form.Text className=\"text-danger font-weight-bold\">\r\n                                                {regError.firstName ? regError.firstName.message : \"\"}\r\n                                            </Form.Text>\r\n                                        </Form.Group>\r\n                                    </Col>\r\n                                    <Col md={6}>\r\n                                        <Form.Group controlId=\"formBasicLast\">\r\n                                            <InputDefault\r\n                                                name=\"lastName\"\r\n                                                label=\"Last Name\"\r\n                                                type=\"text\"\r\n                                                placeholder=\"Last Name\"\r\n                                                value={reg.lastName}\r\n                                                onChange={handleRegInputs}\r\n                                            />\r\n                                            <Form.Text className=\"text-danger font-weight-bold\">\r\n                                                {regError.lastName ? regError.lastName.message : \"\"}\r\n                                            </Form.Text>\r\n                                        </Form.Group>\r\n                                    </Col>\r\n                                </Row>\r\n                                <Row style={{ marginBottom: '20px' }}>\r\n                                    <Form.Group as={Col} controlId=\"formBasicEmail\">\r\n                                        <InputDefault\r\n                                            name=\"email\"\r\n                                            label=\"Email Address\"\r\n                                            type=\"email\"\r\n                                            placeholder=\"Email Address\"\r\n                                            value={reg.email}\r\n                                            onChange={handleRegInputs}\r\n                                        />\r\n                                        <Form.Text className=\"text-danger font-weight-bold\">\r\n                                            {regError.email ? regError.email.message : \"\"}\r\n                                        </Form.Text>\r\n                                    </Form.Group>\r\n                                    <Form.Group as={Col} controlId=\"formBasicContactNum\">\r\n                                        <InputDefault\r\n                                            name=\"contactNumber\"\r\n                                            label=\"Contact Phone Number\"\r\n                                            type=\"text\"\r\n                                            placeholder=\"555-555-5555\"\r\n                                            value={reg.contactNumber}\r\n                                            onChange={handleRegInputs}\r\n                                        />\r\n                                        <Form.Text className=\"text-danger font-weight-bold\">\r\n                                            {regError.contactNumber ? regError.contactNumber.message : \"\"}\r\n                                        </Form.Text>\r\n                                    </Form.Group>\r\n                                </Row>\r\n\r\n                                <Row style={{ marginBottom: '20px' }}>\r\n                                    <Form.Group as={Col} controlId=\"formGridPass\">\r\n                                        <InputDefault\r\n                                            name=\"password\"\r\n                                            label=\"Password\"\r\n                                            type=\"password\"\r\n                                            placeholder=\"Password\"\r\n                                            value={reg.password}\r\n                                            onChange={handleRegInputs}\r\n                                        />\r\n                                        <Form.Text className=\"text-danger font-weight-bold\">\r\n                                            {regError.password ? regError.password.message : \"\"}\r\n                                        </Form.Text>\r\n                                    </Form.Group>\r\n                                    <Form.Group as={Col} controlId=\"formGridCPass\">\r\n                                        <InputDefault\r\n                                            name=\"confirmPassword\"\r\n                                            label=\"Confirm Password\"\r\n                                            type=\"password\"\r\n                                            placeholder=\"Confirm Password\"\r\n                                            value={reg.confirmPassword}\r\n                                            onChange={handleRegInputs}\r\n                                        />\r\n                                        <Form.Text className=\"text-danger font-weight-bold\">\r\n                                            {regError.confirmPassword ? regError.confirmPassword.message : \"\"}\r\n                                        </Form.Text>\r\n                                    </Form.Group>\r\n                                </Row>\r\n\r\n                                <Form.Group style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n                                    <Button onClick={handleClose} className=\"btn btn--primary btn--med sign-up-btn\" type=\"submit\">\r\n                                        Submit\r\n                                    </Button>\r\n\r\n                                </Form.Group>\r\n\r\n                            </Form>\r\n                        </Col>\r\n                    </Row>\r\n\r\n                </Container>\r\n            </Modal.Body>\r\n        </Modal>\r\n    );\r\n};\r\n\r\nexport default RegistrationModal;","import React, { useState, useEffect } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\n// Bootstrap Components\r\nimport { Container, Row, Form, Col, Button, Modal } from 'react-bootstrap';\r\n\r\n// Components\r\nimport InputDefault from '../../components/UI/Inputs/InputDefault';\r\n\r\n// Redux\r\nimport { login } from '../../redux/actions/userAuth.actions'\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nconst LoginModal = (props) => {\r\n\r\n    const {\r\n        show,\r\n        size,\r\n        onHide,\r\n        handleClose\r\n    } = props;\r\n\r\n    const auth = useSelector(state => state.auth);\r\n    const dispatch = useDispatch();\r\n\r\n    const initialLog = {\r\n        email: '',\r\n        password: ''\r\n    }\r\n    const [log, setLog] = useState(initialLog);\r\n    const [logError, setLogError] = useState('');\r\n\r\n    const handleLogInputs = (e) => {\r\n        setLog({\r\n            ...log,\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n    const userLogin = (e) => {\r\n        e.preventDefault();\r\n        const user = {\r\n            email: log.email,\r\n            password: log.password\r\n        }\r\n        dispatch(login(user))\r\n        setLog(initialLog);\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (auth.error) {\r\n            if (auth.error.message) {\r\n                // console.log(\"auth.error.message\");\r\n                // console.log(auth.error);\r\n                // console.log(auth.error.message);\r\n                setLogError({\r\n                    message: auth.error.message\r\n                })\r\n            } else {\r\n                // console.log(\"auth.error.error\");\r\n                // console.log(auth.error);\r\n                // console.log(auth.error.error);\r\n                setLogError({\r\n                    error: auth.error.error\r\n                })\r\n            }\r\n        } else {\r\n            setLogError(\"\")\r\n        }\r\n    }, [auth.error])\r\n\r\n    return (\r\n        <Modal\r\n            show={show}\r\n            size={size}\r\n            aria-labelledby=\"contained-modal-title-vcenter\"\r\n            centered\r\n            onHide={onHide}\r\n        >\r\n            <Modal.Header >\r\n                <Modal.Title>Login</Modal.Title>\r\n                <Button className=\"btn btn--primary btn--med sign-up-btn\" onClick={handleClose}>\r\n                    Close\r\n                </Button>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <Container>\r\n                    <Row>\r\n                        <Col>\r\n                            <Form >\r\n\r\n                                <Form.Group style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n                                    <Form.Text className=\"text-danger font-weight-bold\">\r\n                                        {\r\n                                            logError\r\n                                                ? logError.error\r\n                                                    ? logError.error\r\n                                                    : logError.message\r\n                                                : \"\"\r\n                                        }\r\n                                    </Form.Text>\r\n                                </Form.Group>\r\n                                <Row>\r\n                                    <Form.Group as={Col} controlId=\"formBasicEmail\">\r\n                                        <InputDefault\r\n                                            name=\"email\"\r\n                                            label=\"Email Address\"\r\n                                            type=\"email\"\r\n                                            placeholder=\"Email Address\"\r\n                                            value={log.email}\r\n                                            onChange={handleLogInputs}\r\n                                        />\r\n                                        {/* \r\n                                        <Form.Text className=\"text-muted\">\r\n                                            {error.email ? error.email.message : \"\"}\r\n                                        </Form.Text> \r\n                                    */}\r\n                                    </Form.Group>\r\n                                </Row>\r\n                                <Row style={{marginTop: '10px'}}>\r\n                                    <Form.Group as={Col} controlId=\"formGridPass\">\r\n                                        <InputDefault\r\n                                            name=\"password\"\r\n                                            label=\"Password\"\r\n                                            type=\"password\"\r\n                                            placeholder=\"Password\"\r\n                                            value={log.password}\r\n                                            onChange={handleLogInputs}\r\n                                        />\r\n                                    </Form.Group>\r\n                                </Row>\r\n\r\n                                <Form.Group style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n                                    <Button style={{ marginTop: '10px' }} onClick={userLogin} className=\"btn btn--primary btn--med sign-up-btn\" type=\"submit\">\r\n                                        Submit\r\n                                    </Button>\r\n\r\n                                </Form.Group>\r\n                            </Form>\r\n                        </Col>\r\n                    </Row>\r\n\r\n                </Container>\r\n            </Modal.Body>\r\n        </Modal>\r\n    );\r\n};\r\n\r\nexport default LoginModal;","import \"./Card.css\";\r\n\r\n\r\nconst Card = (props) => {\r\n    return (\r\n        <div className=\"card\" {...props}>\r\n            {(props.headerLeft || props.headerRight) && (\r\n                <div className=\"cardHeader\">\r\n                    {props.headerLeft && (\r\n                        <div\r\n                            style={{\r\n                                alignSelf: \"center\",\r\n                                fontSize: \"20px\",\r\n                                fontWeight: \"500\",\r\n                            }}\r\n                        >\r\n                            {props.headerLeft}\r\n                        </div>\r\n                    )}\r\n                    {props.headerRight && props.headerRight}\r\n                </div>\r\n            )}\r\n\r\n            {props.children}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Card;","import React, { useEffect } from 'react';\r\nimport { useState } from 'react';\r\nimport { Col, Container, Form, Row } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Button } from '../../components/Button/Button';\r\nimport InputDefault from '../../components/UI/Inputs/InputDefault';\r\nimport { addAddress, getAddress } from '../../redux/actions/userAuth.actions';\r\n\r\nconst AddressForm = (props) => {\r\n\r\n    const { initialData } = props;\r\n\r\n    const initialAddress = {\r\n        name: '',\r\n        mobileNumber: '',\r\n        zipCode: '',\r\n        streetOne: '',\r\n        streetTwo: '',\r\n        city: '',\r\n        state: '',\r\n        alternatePhone: '',\r\n        addressType: '',\r\n    }\r\n\r\n    const [address, setAddress] = useState(initialData ? initialData : initialAddress);\r\n    const [addressError, setAddressError] = useState(initialAddress);\r\n\r\n\r\n    const dispatch = useDispatch();\r\n    const user = useSelector((state) => state.userDetails);\r\n    const [submitFlag, setSubmitFlag] = useState(false);\r\n    const [id, setId] = useState(initialData ? initialData._id : '');\r\n\r\n    useEffect(() => {\r\n        if (user.error) {\r\n            // console.log(user.error);\r\n            setAddressError({\r\n                name: user.error.name,\r\n                mobileNumber: user.error.mobileNumber,\r\n                zipCode: user.error.zipCode,\r\n                streetOne: user.error.streetOne,\r\n                streetTwo: user.error.streetTwo,\r\n                city: user.error.city,\r\n                state: user.error.state,\r\n                alternatePhone: user.error.alternatePhone,\r\n                addressType: user.error.addressType,\r\n            })\r\n            // console.log('user.error', user.error);\r\n        }\r\n    }, [user.error])\r\n\r\n    const handleInputs = (e) => {\r\n        setAddress({\r\n            ...address,\r\n            [e.target.name]: e.target.value\r\n        })\r\n        // console.log(address);\r\n    }\r\n\r\n    const onAddressSubmit = (e) => {\r\n        e.preventDefault();\r\n        const payload = {\r\n            address: {\r\n                name: address.name,\r\n                mobileNumber: address.mobileNumber,\r\n                zipCode: address.zipCode,\r\n                streetOne: address.streetOne,\r\n                streetTwo: address.streetTwo,\r\n                city: address.city,\r\n                state: address.state,\r\n                alternatePhone: address.alternatePhone,\r\n                addressType: address.addressType,\r\n            },\r\n        };\r\n        // console.log('onAddressSubmit:', payload);\r\n        if (id) {\r\n            payload.address._id = id;\r\n        }\r\n        dispatch(addAddress(payload));\r\n        dispatch(getAddress())\r\n        if (user.error === '') {\r\n            setSubmitFlag(true)\r\n        } else {\r\n            setSubmitFlag(false)\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        // console.log(\"addressCount\", user.address);\r\n        if (submitFlag === true) {\r\n            // console.log(\"where are we\", user);\r\n            let _address = {};\r\n            if (id) {\r\n                _address = {\r\n                    _id: id,\r\n                    name: address.name,\r\n                    mobileNumber: address.mobileNumber,\r\n                    zipCode: address.zipCode,\r\n                    streetOne: address.streetOne,\r\n                    streetTwo: address.streetTwo,\r\n                    city: address.city,\r\n                    state: address.state,\r\n                    alternatePhone: address.alternatePhone,\r\n                    addressType: address.addressType,\r\n                };\r\n            } else {\r\n                _address = user.address.slice(user.address.length - 1)[0];\r\n            }\r\n\r\n            props.onSubmitForm(_address);\r\n        }\r\n    }, [user.address]);\r\n\r\n    return (\r\n        <div>\r\n            <Container>\r\n                <Row>\r\n                    <Col>\r\n                        <Form onSubmit={onAddressSubmit}>\r\n                            <Row style={{ marginBottom: '20px' }}>\r\n                                <Form.Group style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n                                    {/* <Form.Text className=\"text-danger font-weight-bold\">\r\n                                            {regError.errorMessage ? regError.errorMessage : \"\"}\r\n                                        </Form.Text> */}\r\n                                </Form.Group>\r\n                            </Row>\r\n                            <Row style={{ marginBottom: '20px' }}>\r\n                                <Col md={6}>\r\n                                    <Form.Group controlId=\"formBasicFirst\">\r\n                                        <InputDefault\r\n                                            name=\"name\"\r\n                                            label=\"Deliver To:\"\r\n                                            type=\"text\"\r\n                                            placeholder=\"Name\"\r\n                                            value={address.name}\r\n                                            onChange={handleInputs}\r\n                                        />\r\n                                        <Form.Text className=\"text-danger font-weight-bold\">\r\n                                            {\r\n                                                addressError.name\r\n                                                    ? addressError.name.message\r\n                                                    : \"\"\r\n                                            }\r\n                                        </Form.Text>\r\n                                    </Form.Group>\r\n                                </Col>\r\n                                <Form.Group as={Col} controlId=\"formBasicContactNum\">\r\n                                    <InputDefault\r\n                                        name=\"mobileNumber\"\r\n                                        label=\"Contact Phone Number\"\r\n                                        type=\"text\"\r\n                                        placeholder=\"555-555-5555\"\r\n                                        value={address.mobileNumber}\r\n                                        onChange={handleInputs}\r\n                                    />\r\n                                    <Form.Text className=\"text-danger font-weight-bold\">\r\n                                        {\r\n                                            addressError.mobileNumber\r\n                                                ? addressError.mobileNumber.message\r\n                                                : \"\"\r\n                                        }\r\n                                    </Form.Text>\r\n                                </Form.Group>\r\n                            </Row>\r\n\r\n                            <Row style={{ marginBottom: '20px' }}>\r\n                                <Form.Group controlId=\"formGridAddress1\">\r\n                                    <InputDefault\r\n                                        name=\"streetOne\"\r\n                                        label=\"Address\"\r\n                                        type=\"text\"\r\n                                        placeholder=\"1234 Main St\"\r\n                                        value={address.streetOne}\r\n                                        onChange={handleInputs}\r\n                                    />\r\n                                    <Form.Text className=\"text-danger font-weight-bold\">\r\n                                        {\r\n                                            addressError.streetOne\r\n                                                ? addressError.streetOne.message\r\n                                                : \"\"\r\n                                        }\r\n                                    </Form.Text>\r\n                                </Form.Group>\r\n                            </Row>\r\n                            <Row style={{ marginBottom: '20px' }}>\r\n                                <Form.Group controlId=\"formGridAddress2\">\r\n                                    <InputDefault\r\n                                        name=\"streetTwo\"\r\n                                        label=\"Address 2\"\r\n                                        type=\"text\"\r\n                                        placeholder=\"Apartment, studio, or floor\"\r\n                                        value={address.streetTwo}\r\n                                        onChange={handleInputs}\r\n                                    />\r\n                                    <Form.Text className=\"text-danger font-weight-bold\">\r\n                                        {\r\n                                            addressError.streetTwo\r\n                                                ? addressError.streetTwo.message\r\n                                                : \"\"\r\n                                        }\r\n                                    </Form.Text>\r\n                                </Form.Group>\r\n                            </Row>\r\n                            <Row style={{ marginBottom: '20px' }}>\r\n                                <Form.Group as={Col} controlId=\"formGridCity\">\r\n                                    <InputDefault\r\n                                        name=\"city\"\r\n                                        label=\"City\"\r\n                                        type=\"text\"\r\n                                        placeholder=\"City\"\r\n                                        value={address.city}\r\n                                        onChange={handleInputs}\r\n                                    />\r\n                                    <Form.Text className=\"text-danger font-weight-bold\">\r\n                                        {\r\n                                            addressError.city\r\n                                                ? addressError.city.message\r\n                                                : \"\"\r\n                                        }\r\n                                    </Form.Text>\r\n                                </Form.Group>\r\n                                <Form.Group as={Col} controlId=\"formGridState\">\r\n                                    <InputDefault\r\n                                        name=\"state\"\r\n                                        label=\"State\"\r\n                                        type=\"text\"\r\n                                        placeholder=\"State\"\r\n                                        value={address.state}\r\n                                        onChange={handleInputs}\r\n                                    />\r\n                                    <Form.Text className=\"text-danger font-weight-bold\">\r\n                                        {\r\n                                            addressError.state\r\n                                                ? addressError.state.message\r\n                                                : \"\"\r\n                                        }\r\n                                    </Form.Text>\r\n                                </Form.Group>\r\n                                <Form.Group as={Col} controlId=\"formGridZip\">\r\n                                    <InputDefault\r\n                                        name=\"zipCode\"\r\n                                        label=\"Zip\"\r\n                                        type=\"text\"\r\n                                        placeholder=\"Zip Code\"\r\n                                        value={address.zipCode}\r\n                                        onChange={handleInputs}\r\n                                    />\r\n                                    <Form.Text className=\"text-danger font-weight-bold\">\r\n                                        {\r\n                                            addressError.zipCode\r\n                                                ? addressError.zipCode.message\r\n                                                : \"\"\r\n                                        }\r\n                                    </Form.Text>\r\n                                </Form.Group>\r\n                            </Row>\r\n                            <Row style={{ display: \"flex\", justifyContent: \"space-between\", alignItems: 'center', margin: '0 0 10px 0' }}>\r\n\r\n                                <Form.Group\r\n                                    className='col-5'\r\n                                    controlId=\"formGridAddressType\"\r\n\r\n                                >\r\n                                    <Form.Check\r\n                                        inline\r\n                                        label=\"Home\"\r\n                                        name=\"addressType\"\r\n                                        type=\"radio\"\r\n                                        value='Home'\r\n                                        defaultChecked={address.addressType === 'Home' ? true : false}\r\n                                        onChange={(e) => setAddress({ ...address, addressType: e.target.value })}\r\n                                        readOnly\r\n                                    />\r\n                                    <Form.Check\r\n                                        inline\r\n                                        label=\"Business\"\r\n                                        name=\"addressType\"\r\n                                        type=\"radio\"\r\n                                        value='Business'\r\n                                        defaultChecked={address.addressType === 'Business' ? true : false}\r\n                                        onChange={(e) => setAddress({ ...address, addressType: e.target.value })}\r\n                                        // onChange={handleInputs}\r\n                                        readOnly\r\n                                    />\r\n                                    <Form.Text className=\"text-danger font-weight-bold\">\r\n                                        {\r\n                                            addressError.addressType\r\n                                                ? addressError.addressType.message\r\n                                                : \"\"\r\n                                        }\r\n                                    </Form.Text>\r\n                                </Form.Group>\r\n\r\n                                <Form.Group className='col-6' style={{ display: \"flex\", justifyContent: \"end\" }}>\r\n                                    <Button\r\n                                        onClick={onAddressSubmit}\r\n                                        className=\"btn btn--primary btn--sm sign-up-btn\" type=\"submit\"\r\n                                    >\r\n                                        Save Address\r\n                                    </Button>\r\n                                </Form.Group>\r\n                            </Row>\r\n\r\n                        </Form>\r\n                    </Col>\r\n                </Row>\r\n\r\n            </Container>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AddressForm;","import './CartItem.css';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst CartItem = ({ item, qtyChangeHandler, removeFromCartHandler }) => {\r\n\r\n    // console.log(item);\r\n\r\n    return (\r\n        <div className=\"cart-item\">\r\n            <div className=\"cart-item-image\">\r\n                <img src={item.product.productImage} alt={item.product.name} />\r\n            </div>\r\n            <Link to={`/product/${item.product._id}`} className=\"btn btn--primary btn--med cart-item-name\">\r\n                {item.product.name}\r\n            </Link>\r\n            <p className=\"cart-item-price\">\r\n                ${item.product.price.toFixed(2)} / \r\n                {\r\n                    item.product.name.includes('Calf') || item.product.name.includes('Box')\r\n                        ? \" pack\"\r\n                        : item.product.measurement\r\n                }\r\n            </p>\r\n            <p className=\"right-quantity\">\r\n                <label htmlFor=\"quantity\">Quantity</label>\r\n                <input\r\n                    min=\"1\"\r\n                    type=\"number\"\r\n                    name=\"quantity\"\r\n                    onChange={(e) => e.target.value <= 0 ? item.quantity = 1 : qtyChangeHandler(item.product._id, e.target.value) }\r\n                    value={item.quantity}\r\n                />\r\n            </p>\r\n\r\n            <button\r\n                className=\"cart-item-delete-btn btn btn--primary btn--med\"\r\n                onClick={() => removeFromCartHandler(item.product._id)}\r\n            >\r\n                <i className=\"fas fa-trash\"></i>\r\n            </button>\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\nexport default CartItem;","// React\r\nimport { useEffect, useState } from 'react';\r\n\r\n// Redux\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\n// React Router\r\nimport { Link } from 'react-router-dom';\r\n\r\n// Components\r\nimport CartItem from '../../components/CartItem/CartItem';\r\nimport { Button } from '../../components/Button/Button';\r\nimport { addToCart, removeFromCart, getCartItems } from '../../redux/actions/cartActions';\r\n\r\n// CSS\r\nimport './CartScreen.css';\r\n\r\nconst CartScreen = (props) => {\r\n\r\n    const auth = useSelector((state) => state.auth);\r\n    const cart = useSelector(state => state.cart);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const [cartItems, setCartItems] = useState(cart.cartItems);\r\n\r\n    useEffect(() => {\r\n        setCartItems(cart.cartItems);\r\n    }, [cart.cartItems]);\r\n\r\n    useEffect(() => {\r\n        if (auth.authenticate) {\r\n            console.log(\"Getting Cart Items 'CartScreen\");\r\n            dispatch(getCartItems());\r\n        }\r\n    }, [auth.authenticate]);\r\n\r\n    const qtyChangeHandler = (id, qty) => {\r\n        dispatch(addToCart(id, qty));\r\n    }\r\n\r\n    const removeFromCartHandler = (id) => {\r\n        dispatch(removeFromCart(id));\r\n    }\r\n\r\n    const getCartCount = () => {\r\n        return cartItems.reduce((qty, item) => Number(item.quantity) + qty, 0);\r\n    };\r\n\r\n\r\n    // console.log('cartscreen cartitems', cartItems);\r\n\r\n    const getCartSubTotal = () => {\r\n        if (cartItems.length > 0) {\r\n            for (const cItem of cartItems) {\r\n                if (cItem.product.name.includes('Half Calf')) {\r\n                    cItem.product.price = 200 * 7\r\n                } else if (cItem.product.name.includes(\"Whole Calf\")) {\r\n                    cItem.product.price = 450 * 6.5\r\n                } else if (cItem.product.name.includes('Pork Mix Box')) {\r\n                    cItem.product.price = 25 * 7.5\r\n                }\r\n            }\r\n        }\r\n        let output = cartItems.reduce((price, item) => item.product.price * item.quantity + price, 0);\r\n        // console.log(\"output\", output);\r\n        return output\r\n    }\r\n\r\n    if (props.onlyCartItems) {\r\n        return (\r\n            <>\r\n                <div className=\"cart-screen-left\">\r\n                    <h2>Your Cart</h2>\r\n                    {\r\n                        cartItems.length === 0\r\n                            ? (\r\n                                <div>\r\n                                    <p>Your cart is empty</p>\r\n                                    <p>\r\n                                        <Link\r\n                                            className=\"btn btn--primary btn--med products-button\"\r\n                                            to=\"/our-products\"\r\n                                        >\r\n                                            Browse our products!\r\n                                        </Link>\r\n                                    </p>\r\n                                    <h3 style={{ textAlign: 'center' }}>Or</h3>\r\n                                    <p>\r\n                                        <Link\r\n                                            className=\"btn btn--primary btn--med products-button\"\r\n                                            to=\"/order-form\"\r\n                                        >\r\n                                            Check out our Easy Order Form!\r\n                                        </Link>\r\n                                    </p>\r\n                                </div>\r\n                            ) : (\r\n                                <>\r\n                                    {\r\n                                        cartItems.map((item, idx) => (\r\n                                            <CartItem\r\n                                                key={idx}\r\n                                                item={item}\r\n                                                qtyChangeHandler={qtyChangeHandler}\r\n                                                removeFromCartHandler={removeFromCartHandler}\r\n                                            />\r\n                                        ))\r\n                                    }\r\n                                    <p>\r\n                                        <Link\r\n                                            className=\"btn btn--primary btn--med products-button\"\r\n                                            to=\"/our-products\"\r\n                                        >\r\n                                            Continue Shopping\r\n                                        </Link>\r\n                                    </p>\r\n                                </>\r\n                            )\r\n                    }\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div className=\"cart-screen\">\r\n            <div className=\"cart-screen-left\">\r\n                <h2>Shopping Cart</h2>\r\n                {\r\n                    cartItems.length === 0\r\n                        ? (\r\n                            <div>\r\n                                <p>Your cart is empty</p>\r\n                                <p>\r\n                                    <Link\r\n                                        className=\"btn btn--primary btn--med products-button\"\r\n                                        to=\"/our-products\"\r\n                                    >\r\n                                        Browse our products!\r\n                                    </Link>\r\n                                </p>\r\n                                <h3 style={{ textAlign: 'center' }}>Or</h3>\r\n                                <p>\r\n                                    <Link\r\n                                        className=\"btn btn--primary btn--med products-button\"\r\n                                        to=\"/order-form\"\r\n                                    >\r\n                                        Check out our Easy Order Form!\r\n                                    </Link>\r\n                                </p>\r\n                            </div>\r\n                        ) : (\r\n                            <>\r\n                                {\r\n                                    cartItems.map((item, idx) => (\r\n                                        <CartItem\r\n                                            key={idx}\r\n                                            item={item}\r\n                                            qtyChangeHandler={qtyChangeHandler}\r\n                                            removeFromCartHandler={removeFromCartHandler}\r\n                                        />\r\n                                    ))\r\n                                }\r\n                                <p>\r\n                                    <Link\r\n                                        className=\"btn btn--primary btn--med products-button\"\r\n                                        to=\"/our-products\"\r\n                                    >\r\n                                        Continue Shopping\r\n                                    </Link>\r\n                                </p>\r\n                            </>\r\n                        )\r\n                }\r\n            </div>\r\n            <div className=\"cart-screen-right\">\r\n                <div className=\"cart-screen-info\">\r\n                    <p>\r\n                        {\r\n                            getCartCount() !== 0\r\n                                ? getCartCount() > 1\r\n                                    ? 'Estimated total for your ' + getCartCount() + ' items.'\r\n                                    : 'Estimated total for your item.'\r\n                                : \"Your cart is empty.\"\r\n                        }\r\n                    </p>\r\n                    <p>\r\n                        {\r\n                            getCartCount() > 0\r\n                                ? getCartSubTotal().toFixed(2)\r\n                                : ''\r\n                        }\r\n                    </p>\r\n                </div>\r\n                <div className=\"cart-screen-check-out\">\r\n                    {\r\n                        cartItems.length <= 0\r\n                            ? null\r\n                            : <Link\r\n                                className=\"btn btn--primary btn--med products-button\"\r\n                                to=\"/checkout\"\r\n                            >\r\n                                Proceed To Checkout\r\n                            </Link>\r\n                    }\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default CartScreen;","// React\r\nimport { useEffect, useState } from 'react';\r\n\r\n// Redux\r\nimport { addOrder, getAddress } from '../../redux/actions/userAuth.actions';\r\nimport { getCartItems } from '../../redux/actions/cartActions';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\n// React-Bootstrap\r\nimport { Table } from 'react-bootstrap';\r\n\r\n// Components\r\nimport RegistrationModal from '../../components/Registration/RegistrationModal';\r\nimport LoginModal from '../../components/Login/LoginModal';\r\nimport { Button } from '../../components/Button/Button';\r\nimport Card from '../../components/Card/Card';\r\nimport AddressForm from './AddressForm';\r\n\r\n// Screens\r\nimport CartScreen from '../CartScreen/CartScreen';\r\n\r\n// CSS\r\nimport './CheckoutScreen.css';\r\n\r\n\r\nconst CheckoutStep = (props) => {\r\n    return (\r\n        <div className=\"checkoutStep\">\r\n            <div\r\n                onClick={props.onClick}\r\n                className={`checkoutHeader ${props.active && \"active\"}`}\r\n            >\r\n                <div>\r\n                    <span className=\"stepNumber\">{props.stepNumber}</span>\r\n                    <span className=\"stepTitle\">{props.title}</span>\r\n                </div>\r\n            </div>\r\n            {props.body && props.body}\r\n        </div>\r\n    );\r\n};\r\n\r\nconst Address = ({\r\n    adr,\r\n    selectAddress,\r\n    enableAddressEditForm,\r\n    confirmDeliveryAddress,\r\n    onAddressSubmit,\r\n}) => {\r\n    return (\r\n        <div className=\"flexRow addressContainer\">\r\n            <div>\r\n                <input name=\"address\" onClick={() => selectAddress(adr)} type=\"radio\" />\r\n            </div>\r\n            <div className=\"flexRow sb addressinfo\">\r\n                {!adr.edit ? (\r\n                    <div style={{ width: \"100%\" }}>\r\n                        <div className=\"addressDetail\">\r\n                            <div>\r\n                                <span className=\"addressName\">{adr.name}</span>\r\n                                <span className=\"addressType\">{adr.addressType}</span>\r\n                                <span className=\"addressMobileNumber\">{adr.mobileNumber}</span>\r\n                            </div>\r\n                            {adr.selected && (\r\n                                <Button\r\n                                    className='btn btn--primary'\r\n                                    buttonSize='btn--sm'\r\n                                    name=\"EDIT\"\r\n                                    onClick={() => enableAddressEditForm(adr)}\r\n                                >\r\n                                    EDIT\r\n                                </Button>\r\n                            )}\r\n                        </div>\r\n                        <div className=\"fullAddress\">\r\n                            {adr.streetTwo ? adr.streetOne + ' - ' + adr.streetTwo + ',' : adr.streetOne + ','}\r\n                            <br />\r\n                            {`${adr.city}, ${adr.state} ${adr.zipCode}`}\r\n                        </div>\r\n                        {adr.selected && (\r\n                            <div\r\n                                style={{ display: 'flex', justifyContent: 'center' }}\r\n                            >\r\n                                <Button\r\n                                    className='btn btn--primary'\r\n                                    buttonSize='btn--sm'\r\n                                    onClick={() => confirmDeliveryAddress(adr)}\r\n                                >Confirm Delivery Address</Button>\r\n                            </div>\r\n                        )}\r\n                    </div>\r\n                ) : (\r\n                    <AddressForm\r\n                        withoutLayout={true}\r\n                        onSubmitForm={onAddressSubmit}\r\n                        initialData={adr}\r\n                        onCancel={() => { }}\r\n                    />\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst CheckoutScreen = (props) => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    // User Information States\r\n    const user = useSelector((state) => state.userDetails);\r\n    const auth = useSelector((state) => state.auth);\r\n    const [address, setAddress] = useState([]);\r\n    const [newAddress, setNewAddress] = useState(false);\r\n\r\n    // Cart Information States\r\n    const cart = useSelector((state) => state.cart);\r\n    const [cartItems, setCartItems] = useState(cart.cartItems);\r\n\r\n    // Modal State Controllers\r\n    // Login Modal\r\n    const [loginModal, setLoginModal] = useState(false);\r\n    const showLoginModal = () => setLoginModal(true);\r\n    const hideLoginModal = () => setLoginModal(false);\r\n\r\n    // Registration Modal\r\n    const [regModal, setRegModal] = useState(false);\r\n    const showRegModal = () => setRegModal(true);\r\n    const hideRegModal = () => setRegModal(false);\r\n\r\n    // Order Step States\r\n    // Delivery Address Step\r\n    const [selectedAddress, setSelectedAddress] = useState(null);\r\n    const [confirmAddressOption, setConfirmAddressOption] = useState(false);\r\n\r\n    // Order Summary Step\r\n    const [orderSummaryOption, setOrderSummaryOption] = useState(false);\r\n    const [orderConfirmation, setOrderConfirmation] = useState(false);\r\n\r\n    // Finalize Order Option\r\n    const [finalizeOrderOption, setFinalizeOrderOption] = useState(false);\r\n\r\n    // Place Order\r\n    const [confirmOrder, setConfirmOrder] = useState(false);\r\n\r\n    // Address Functions\r\n    const onAddressSubmit = (addr) => {\r\n        setSelectedAddress(addr);\r\n        setConfirmAddressOption(true);\r\n        setOrderSummaryOption(true);\r\n    };\r\n\r\n    const selectAddress = (addr) => {\r\n        //console.log(addr);\r\n        const updatedAddress = address.map((adr) =>\r\n            adr._id === addr._id\r\n                ? { ...adr, selected: true }\r\n                : { ...adr, selected: false }\r\n        );\r\n        // console.log('updatedAddress', updatedAddress);\r\n        setAddress(updatedAddress);\r\n        setNewAddress(false);\r\n    };\r\n\r\n    const confirmDeliveryAddress = (addr) => {\r\n        setSelectedAddress(addr);\r\n        setConfirmAddressOption(true);\r\n        setOrderSummaryOption(true);\r\n    };\r\n\r\n    const enableAddressEditForm = (addr) => {\r\n        const updatedAddress = address.map((adr) =>\r\n            adr._id === addr._id ? { ...adr, edit: true } : { ...adr, edit: false }\r\n        );\r\n        setAddress(updatedAddress);\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (auth.authenticate) {\r\n            const address = user.address.map((adr) => ({\r\n                ...adr,\r\n                selected: false,\r\n                edit: false,\r\n            }));\r\n            setAddress(address);\r\n            setNewAddress(false);\r\n            // user.address.length === 0 && setNewAddress(true);\r\n        }\r\n    }, [user.address, auth.authenticate]);\r\n\r\n    // Order Confirmation Functions\r\n    const userOrderConfirmation = () => {\r\n        setOrderConfirmation(true);\r\n        setOrderSummaryOption(false);\r\n        setFinalizeOrderOption(true);\r\n    };\r\n\r\n    // Place Order\r\n    const onConfirmOrder = () => {\r\n        const totalAmount = getCartSubTotal();\r\n\r\n        const items = cart.cartItems.map((item) => ({\r\n            productId: item.product._id,\r\n            payablePrice: item.product.price,\r\n            purchasedQty: item.quantity\r\n        }))\r\n\r\n        const payload = {\r\n            addressId: selectedAddress._id,\r\n            totalAmount,\r\n            items,\r\n            paymentStatus: \"pending\"\r\n        };\r\n\r\n        // console.log(payload);\r\n        dispatch(addOrder(payload));\r\n        setConfirmOrder(true);\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (confirmOrder && user.placedOrderId) {\r\n            props.history.push(`/order_details/${user.placedOrderId}`);\r\n        }\r\n    }, [user.placedOrderId]);\r\n\r\n    // Logged-in User Cart\r\n    useEffect(() => {\r\n        auth.authenticate && dispatch(getAddress());\r\n        auth.authenticate && dispatch(getCartItems());\r\n        if (!auth.authenticate) {\r\n            setAddress([]);\r\n            setConfirmAddressOption(false);\r\n            setSelectedAddress(null);\r\n            setOrderSummaryOption(false);\r\n            setOrderConfirmation(false);\r\n            setFinalizeOrderOption(false);\r\n            setConfirmOrder(false);\r\n        }\r\n    }, [auth.authenticate]);\r\n\r\n    useEffect(() => {\r\n        // console.log('checkout setCartItems', cartItems);\r\n        setCartItems(cart.cartItems);\r\n    }, [cart.cartItems]);\r\n\r\n    const getCartCount = () => {\r\n        return cartItems.reduce((qty, item) => Number(item.quantity) + qty, 0);\r\n    };\r\n\r\n    const getCartSubTotal = () => {\r\n        if (cartItems.length > 0) {\r\n            for (const cItem of cartItems) {\r\n                if (cItem.product.name.includes('Half Calf')) {\r\n                    cItem.product.price = 200 * 7\r\n                } else if (cItem.product.name.includes(\"Whole Calf\")) {\r\n                    cItem.product.price = 450 * 6.5\r\n                } else if (cItem.product.name.includes('Pork Mix Box')) {\r\n                    cItem.product.price = 25 * 7.5\r\n                }\r\n            }\r\n        };\r\n        let output = cartItems.reduce((price, item) => item.product.price * item.quantity + price, 0);\r\n        // console.log('checkoutScreen output', output);\r\n        return output\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"cartContainer\" style={{ alignItems: \"flex-start\" }}>\r\n                <div className=\"checkoutContainer\">\r\n                    {/* check if user logged in or not */}\r\n                    <CheckoutStep\r\n                        stepNumber={\"1\"}\r\n                        title={\"LOGIN / REGISTER\"}\r\n                        active={!auth.authenticate}\r\n                        body={\r\n                            auth.authenticate ? (\r\n                                <div className=\"loggedInId\">\r\n                                    <span style={{ fontWeight: 500 }}>Account Holder: {auth.user.firstName} {auth.user.lastName}</span>\r\n                                    <span style={{ margin: \"0 5px\" }}>| Email: {auth.user.email}</span>\r\n                                </div>\r\n                            ) : (\r\n                                <div\r\n                                    style={{\r\n                                        display: 'flex',\r\n                                        justifyContent: 'space-evenly',\r\n                                        padding: '10px'\r\n                                    }}\r\n                                >\r\n                                    <button\r\n                                        style={{ marginRight: '10px' }}\r\n                                        className=\"btn btn--primary btn--med sign-up-btn\"\r\n                                        onClick={showLoginModal}>\r\n                                        Login\r\n                                    </button>\r\n                                    <button\r\n                                        className=\"btn btn--primary btn--med sign-up-btn\"\r\n                                        onClick={showRegModal}>\r\n                                        Register\r\n                                    </button>\r\n                                    {/* <InputDefault label=\"Email\" /> */}\r\n                                    <LoginModal\r\n                                        show={loginModal}\r\n                                        size={'lg'}\r\n                                        onHide={hideLoginModal}\r\n                                        handleClose={hideLoginModal}\r\n                                    />\r\n                                    <RegistrationModal\r\n                                        show={regModal}\r\n                                        size={'lg'}\r\n                                        onHide={hideRegModal}\r\n                                        handleClose={hideRegModal}\r\n                                    />\r\n                                </div>\r\n                            )\r\n                        }\r\n                    />\r\n                    <CheckoutStep\r\n                        stepNumber={\"2\"}\r\n                        title={\"DELIVERY ADDRESS\"}\r\n                        active={!confirmAddressOption && auth.authenticate}\r\n                        body={\r\n                            <>\r\n                                {confirmAddressOption ? (\r\n                                    <div className=\"stepCompleted\">\r\n                                        <div>\r\n                                            {`\r\n                                            ${selectedAddress.name} - \r\n                                            ${selectedAddress.addressType} Address - \r\n                                            ${selectedAddress.streetTwo\r\n                                                    ? selectedAddress.streetOne + ' - ' + selectedAddress.streetTwo + ','\r\n                                                    : selectedAddress.streetOne + ','\r\n                                                } \r\n                                            ${selectedAddress.city}, ${selectedAddress.state}, ${selectedAddress.zipCode}\r\n                                        `}\r\n                                        </div>\r\n                                        <div>\r\n                                            <Button\r\n                                                buttonSize='btn--sm'\r\n                                                onClick={() => setConfirmAddressOption(false)}\r\n                                            />\r\n                                        </div>\r\n                                    </div>\r\n                                ) : (\r\n                                    address.map((adr, idx) => (\r\n                                        <Address\r\n                                            key={idx}\r\n                                            selectAddress={selectAddress}\r\n                                            enableAddressEditForm={enableAddressEditForm}\r\n                                            confirmDeliveryAddress={confirmDeliveryAddress}\r\n                                            onAddressSubmit={onAddressSubmit}\r\n                                            adr={adr}\r\n                                        />\r\n                                    ))\r\n                                )}\r\n                            </>\r\n                        }\r\n                    />\r\n\r\n                    {/* AddressForm */}\r\n                    {confirmAddressOption ? null : newAddress ? (\r\n                        <AddressForm onSubmitForm={onAddressSubmit} onCancel={() => { }} />\r\n                    ) : auth.authenticate ? (\r\n                        <CheckoutStep\r\n                            stepNumber={\"+\"}\r\n                            title={\"ADD NEW ADDRESS\"}\r\n                            active={false}\r\n                            onClick={() => setNewAddress(true)}\r\n                        />\r\n                    ) : null}\r\n\r\n                    <CheckoutStep\r\n                        stepNumber={\"3\"}\r\n                        title={\"ORDER SUMMARY\"}\r\n                        active={orderSummaryOption}\r\n                        body={\r\n                            orderSummaryOption ? (\r\n                                <CartScreen onlyCartItems={true} />\r\n                            ) : orderConfirmation ? (\r\n                                <div className=\"stepCompleted\">\r\n                                    <div style={{}}>\r\n                                        {/* {Object.keys(cart.cartItems).length} items */}\r\n                                        <p>\r\n                                            {\r\n                                                getCartCount() !== 0\r\n                                                    ? getCartCount() > 1\r\n                                                        ? 'Estimated total for your ' + getCartCount() + ' items.'\r\n                                                        : 'Estimated total for your item.'\r\n                                                    : \"Your cart is empty.\"\r\n                                            }\r\n                                        </p>\r\n                                        <strong style={{ fontSize: '16px' }}>\r\n                                            {\r\n                                                getCartCount() > 0\r\n                                                    ? '$' + getCartSubTotal().toFixed(2)\r\n                                                    : ''\r\n                                            }\r\n                                        </strong>\r\n                                    </div>\r\n\r\n                                    <div style={{ width: '65%' }}>\r\n                                        <Table>\r\n                                            <thead>\r\n                                                <tr>\r\n                                                    <th>Product</th>\r\n                                                    <th >Quantity</th>\r\n                                                </tr>\r\n                                            </thead>\r\n                                            <tbody>\r\n                                                {\r\n                                                    cart.cartItems\r\n                                                        ? cartItems.map((item, idx) => {\r\n                                                            return (\r\n                                                                <tr key={idx}>\r\n                                                                    <td>{item.product.name}</td>\r\n                                                                    <td >{item.quantity} {item.product.measurement}</td>\r\n                                                                </tr>\r\n                                                            )\r\n                                                        })\r\n                                                        : null\r\n                                                }\r\n                                            </tbody>\r\n\r\n                                        </Table>\r\n                                    </div>\r\n\r\n\r\n\r\n                                </div>\r\n                            ) : null\r\n                        }\r\n                    />\r\n\r\n                    {orderSummaryOption && (\r\n                        <Card style={{ margin: \"10px 0\", }}>\r\n                            <div\r\n                                className=\"flexRow sb\"\r\n                                style={{\r\n                                    display: 'flex',\r\n                                    padding: \"20px\",\r\n                                    alignItems: \"center\",\r\n                                    justifyContent: 'space-between'\r\n                                }}\r\n                            >\r\n                                <p style={{ fontSize: \"12px\", marginBottom: '0px' }}>\r\n                                    Order confirmation email will be sent to{\" \"}\r\n                                    <strong>{auth.user.email}</strong>\r\n                                </p>\r\n\r\n                                <Button\r\n                                    className=\"btn btn--primary btn--med sign-up-btn\"\r\n                                    onClick={userOrderConfirmation}>\r\n                                    Continue\r\n                                </Button>\r\n\r\n                            </div>\r\n                        </Card>\r\n                    )}\r\n\r\n                    <CheckoutStep\r\n                        stepNumber={\"4\"}\r\n                        title={\"FINALIZE ORDER\"}\r\n                        active={finalizeOrderOption}\r\n                        body={\r\n                            finalizeOrderOption && (\r\n                                <div\r\n                                    style={{\r\n                                        display: 'flex',\r\n                                        justifyContent: 'center',\r\n                                        margin: '10px 0px 10px 0px'\r\n                                    }}\r\n                                >\r\n                                    <Button\r\n                                        className=\"btn btn--primary btn--med sign-up-btn\"\r\n                                        onClick={onConfirmOrder}>\r\n                                        Confirm Order\r\n                                    </Button>\r\n                                </div>\r\n                            )\r\n                        }\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"checkout-screen-right\">\r\n                    <div className=\"checkout-screen-info\">\r\n                        <p>\r\n                            {\r\n                                getCartCount() !== 0\r\n                                    ? getCartCount() > 1\r\n                                        ? 'Estimated total for your ' + getCartCount() + ' items.'\r\n                                        : 'Estimated total for your item.'\r\n                                    : \"Your cart is empty.\"\r\n                            }\r\n                        </p>\r\n                        <p>\r\n                            {\r\n                                getCartCount() > 0\r\n                                    ? '$' + getCartSubTotal().toFixed(2)\r\n                                    : ''\r\n                            }\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n\r\n};\r\n\r\nexport default CheckoutScreen;","import './ProductScreen.css';\r\nimport { useState, useEffect } from 'react';\r\n\r\n// Components\r\nimport { Button } from '../../components/Button/Button'\r\n\r\n// Redux\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getProductDetails } from '../../redux/actions/productActions';\r\nimport { addToCart } from '../../redux/actions/cartActions';\r\n\r\nconst ProductScreen = ({ match, history }) => {\r\n\r\n    const [qty, setQty] = useState(1);\r\n    const dispatch = useDispatch();\r\n\r\n    const productDetails = useSelector(state => state.getProductDetails);\r\n    const { loading, error, product } = productDetails;\r\n\r\n    useEffect(() => {\r\n        if (product && match.params.id !== product._id) {\r\n            dispatch(getProductDetails(match.params.id))\r\n        }\r\n    }, [dispatch, product, match]);\r\n\r\n    const addToCartHandler = () => {\r\n        dispatch(addToCart(product._id, qty));\r\n        history.push('/cart');\r\n        // history.goBack();\r\n    }\r\n\r\n    return (\r\n        <div className=\"product-screen\">\r\n            {loading ? <h2>Loading...</h2> : error ? <h2>{error}</h2> :\r\n                <>\r\n                    <div className=\"product-screen-left\">\r\n                        <div className=\"left-image\">\r\n                            <img src={product.productImage} alt=\"product name\" />\r\n                        </div>\r\n                        <div className=\"left-info\">\r\n                            <p className=\"left-name\">{product.name}</p>\r\n                            <p className=\"left-price\">${product.price} / {product.measurement}</p>\r\n                            <p className=\"left-description\">{product.description}</p>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"product-screen-right\">\r\n                        <div className=\"right-info\">\r\n                            <p className=\"right-price\">\r\n                                Price: <span className=\"right-price-span\">${product.price} / {product.measurement}</span>\r\n                            </p>\r\n                            <p className=\"right-status\">\r\n                                Status: <span className=\"right-status-span\">{product.inStock ? \"In Stock.\" : \"Out Of Stock.\"}</span>\r\n                            </p>\r\n                            <p className=\"right-quantity\">\r\n                                <label htmlFor=\"quantity\">Quantity</label>\r\n                                <input \r\n                                    min=\"0\"\r\n                                    type=\"number\" \r\n                                    name=\"quantity\" \r\n                                    onChange={(e) => e.target.value < 1 ? setQty(1) : setQty(e.target.value)}\r\n                                    value={qty}\r\n                                />\r\n                            </p>\r\n                            <p className=\"right-button\">\r\n                                <Button onClick={addToCartHandler}>Add To Cart</Button>\r\n                                {/* <button type=\"button\">Add To Cart</button> */}\r\n                            </p>\r\n                        </div>\r\n                    </div>\r\n                </>\r\n            }\r\n        </div>\r\n    )\r\n}\r\nexport default ProductScreen;","import { useState, useEffect } from 'react';\r\n\r\n// CSS\r\nimport './OrderScreenCard.css'\r\n\r\n// Components\r\nimport { Button } from '../Button/Button'\r\n\r\n// Redux\r\nimport { useDispatch } from 'react-redux';\r\nimport { addToCart } from '../../redux/actions/cartActions';\r\n\r\n\r\nconst OrderScreenCard = (props) => {\r\n\r\n    const [qty, setQty] = useState(props.qty);\r\n    const dispatch = useDispatch();\r\n\r\n    const initialProduct = {\r\n        _id: props.product._id,\r\n        name: props.name,\r\n        price: props.price,\r\n        description: props.description,\r\n        inStock: props.inStock,\r\n        measurement: props.measurement,\r\n    }\r\n\r\n    const [product, setProduct] = useState(initialProduct)\r\n\r\n    const addToCartHandler = (product) => {\r\n        console.log('product from add to cart in OrderScreenCard', product);\r\n        if (qty < 1) {\r\n            setQty(1);\r\n        }\r\n        // else if (qty != props.qty) {\r\n        //     setQty()\r\n        // }\r\n        dispatch(addToCart(product._id, qty));\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <td style={{\r\n                width: '25%',\r\n                verticalAlign: 'middle'\r\n            }}>\r\n                {product.name}\r\n            </td>\r\n            <td style={{\r\n                width: '10%',\r\n                textAlign: 'center',\r\n                verticalAlign: 'middle'\r\n            }}>\r\n                ${product.price} / {product.measurement}\r\n            </td>\r\n            <td style={{\r\n                width: '25%',\r\n                verticalAlign: 'middle'\r\n            }}>\r\n                {product.description}\r\n            </td>\r\n            <td style={{\r\n                width: '10%',\r\n                textAlign: 'center',\r\n                verticalAlign: 'middle'\r\n            }}>\r\n                {product.inStock ? \" In Stock.\" : \" Out Of Stock.\"}\r\n            </td>\r\n            <td style={{ verticalAlign: 'middle' }}>\r\n                <p style={{\r\n                    display: 'flex',\r\n                    justifyContent: 'space-around',\r\n                    alignItems: 'center',\r\n                    margin: '0'\r\n                }}>\r\n                    {/* <label htmlFor=\"quantity\">Quantity: </label> */}\r\n                    <input\r\n                        className=\"add-to-cart-input\"\r\n                        min=\"0\"\r\n                        type=\"number\"\r\n                        name=\"quantity\"\r\n                        onChange={(e) => e.target.value < 1 ? setQty(1) : setQty(e.target.value)}\r\n                        value={qty}\r\n                    />\r\n                    {\r\n                        product.inStock\r\n                            ? <Button\r\n                                buttonSize='btn--sm'\r\n                                onClick={() => addToCartHandler(product)}\r\n                            >Add\r\n                            </Button>\r\n                            : <Button\r\n                                buttonSize='btn--sm'\r\n                                buttonStyle='btn-disabled'\r\n                            >Add\r\n                            </Button>\r\n                    }\r\n                </p>\r\n            </td>\r\n        </>\r\n    )\r\n}\r\nexport default OrderScreenCard;","// React\r\nimport { useEffect, useState } from 'react';\r\n\r\n// Redux\r\nimport { getOrders } from '../../redux/actions/userAuth.actions'\r\nimport { addToCart } from '../../redux/actions/cartActions';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { Table } from 'react-bootstrap';\r\n\r\n// Components\r\nimport OrderScreenCard from '../../components/OrderScreenCard/OrderScreenCard';\r\nimport { Button } from '../../components/Button/Button';\r\n\r\n// CSS\r\n\r\nconst OrdersScreen = (props) => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    // User Information States\r\n    const auth = useSelector((state) => state.auth)\r\n    const user = useSelector((state) => state.userDetails)\r\n\r\n    const [date, setDate] = useState('');\r\n\r\n    const makeDate = (order) => {\r\n        // console.log(typeof order.createdAt);\r\n        var date = new Date(order.createdAt);\r\n        var month = date.getMonth() + 1;\r\n        var day = date.getDate();\r\n        var year = date.getFullYear();\r\n        // console.log(`${month}/${day}/${year}`);\r\n        return `${month}/${day}/${year}`\r\n    }\r\n\r\n    const addOrderToCartHandler = (order) => {\r\n        // console.log('order', order);\r\n        order.items.map((item) => {\r\n            dispatch(addToCart(item.productId._id, item.purchasedQty));\r\n        })\r\n\r\n        // order.items.forEach(item => {\r\n        // if (qty < 1) {\r\n        //     setQty(1);\r\n        // }\r\n        // setQty(item.purchasedQty);\r\n        // dispatch(addToCart(item._id, qty));\r\n        // });\r\n\r\n    }\r\n\r\n    // User Orders\r\n    useEffect(() => {\r\n        dispatch(getOrders());\r\n    }, [])\r\n\r\n    return (\r\n\r\n        <div style={{\r\n            display: 'flex',\r\n            justifyContent: 'center',\r\n            alignContent: 'center',\r\n            flexDirection: 'column',\r\n            margin: '10px',\r\n            padding: '3px'\r\n        }}>\r\n            {\r\n                user.orders\r\n                    ? user.orders.map((order, idx) => {\r\n                        return (\r\n                            <Table\r\n                                key={idx}\r\n                                bordered\r\n                                style={{\r\n                                    width: '80%',\r\n                                    alignSelf: 'center'\r\n                                }}\r\n                            >\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th colSpan='2'>\r\n                                            Order # : {order._id}\r\n                                        </th>\r\n                                        <th colSpan='2' style={{ textAlign: 'end' }}>\r\n                                            This order was placed on: {makeDate(order)}\r\n                                        </th>\r\n                                        <th style={{ textAlign: 'end' }}>\r\n                                            Status: Pending\r\n                                        </th>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <th >Product</th>\r\n                                        <th style={{textAlign: 'center'}}>Price</th>\r\n                                        <th >Description</th>\r\n                                        <th style={{textAlign: 'center'}}>Stock</th>\r\n                                        <th style={{textAlign: 'center'}}>Quantity</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {\r\n                                        order.items.map((item, idx) => {\r\n                                            return (\r\n                                                <tr key={idx}>\r\n                                                    <OrderScreenCard\r\n                                                        product={item.productId}\r\n                                                        name={item.productId.name}\r\n                                                        price={item.payablePrice}\r\n                                                        measurement={item.productId.measurement}\r\n                                                        description={item.productId.description}\r\n                                                        inStock={item.productId.inStock}\r\n                                                        qty={item.purchasedQty}\r\n                                                    />\r\n                                                    {/* <td>{item.productId.name}</td>\r\n                                                    <td>{item.purchasedQty} {item.productId.measurement}</td> */}\r\n                                                </tr>\r\n                                            )\r\n                                        })\r\n                                    }\r\n                                    <tr style={{ textAlign: 'end' }}>\r\n                                        <td colSpan='4' style={{\r\n                                            verticalAlign: 'middle'\r\n                                        }}>\r\n                                            Purchased for ${order.totalAmount.toFixed(2)}.\r\n                                        </td>\r\n                                        <td >\r\n                                            <button\r\n                                                className='btn btn--sm'\r\n                                                style={{ backgroundColor: 'orangered' }}\r\n                                                onClick={() => addOrderToCartHandler(order)}\r\n                                            >\r\n                                                Buy Again\r\n                                            </button>\r\n                                        </td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </Table>\r\n                        )\r\n                    })\r\n                    : null\r\n            }\r\n\r\n        </div>\r\n\r\n        // <>\r\n        // <Table>\r\n        //     <thead>\r\n        // <tr>\r\n        //     <th>Product</th>\r\n        //     <th >Quantity</th>\r\n        // </tr>\r\n        //     </thead>\r\n        //     <tbody>\r\n        //         {\r\n        //             user.orders\r\n        //                 ?\r\n        //                 user.orders.map((order, idx) => {\r\n        //                     return order.items.map((item, idx) => (\r\n        // <tr key={idx}>\r\n        //     <td>{item.productId.name}</td>\r\n        //     <td>{item.purchasedQty} {item.productId.measurement}</td>\r\n        // </tr>\r\n        //                     ))\r\n        //                 })\r\n\r\n        //                 : null\r\n        //         }\r\n        //     </tbody>\r\n        // </Table>\r\n        // </>\r\n\r\n    );\r\n};\r\n\r\nexport default OrdersScreen;","import './HomeScreen.css';\r\n\r\n// Components\r\n\r\n\r\nconst HomeScreen = () => {\r\n\r\n    return (\r\n        <div className=\"homescreen\">\r\n            <h2 className=\"homescreen-title\">Home</h2>\r\n            <div className=\"homescreen-products\">\r\n                \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default HomeScreen;","import { useState, useEffect } from 'react';\r\n\r\n// CSS\r\nimport './OrderFormProduct.css'\r\n\r\n// Components\r\nimport { Button } from '../Button/Button'\r\n\r\n// Redux\r\nimport { useDispatch } from 'react-redux';\r\nimport { addToCart } from '../../redux/actions/cartActions';\r\n\r\n\r\nconst OrderFormProduct = ({ product }) => {\r\n\r\n    const [qty, setQty] = useState(0);\r\n    const dispatch = useDispatch();\r\n\r\n    const addToCartHandler = (product) => {\r\n        if (qty < 1) {\r\n            setQty(1);\r\n        }\r\n        dispatch(addToCart(product._id, qty));\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <td style={{ width: '25%' }}>{product.name}</td>\r\n            <td style={{ width: '10%' }}>${product.price.toFixed(2)} / {product.measurement}</td>\r\n            <td style={{ width: '25%' }}>{product.description}</td>\r\n            <td style={{ width: '10%', textAlign: 'center' }}>{product.inStock ? \" In Stock.\" : \" Out Of Stock.\"}</td>\r\n            <td>\r\n                <p style={{ display: 'flex', justifyContent: 'space-evenly', alignItems: 'center', margin: '0' }} >\r\n                    <label htmlFor=\"quantity\">Quantity: </label>\r\n                    <input\r\n                        className=\"add-to-cart-input\"\r\n                        min=\"0\"\r\n                        type=\"number\"\r\n                        name=\"quantity\"\r\n                        onChange={(e) => e.target.value < 1 ? setQty(1) : setQty(e.target.value)}\r\n                        value={qty}\r\n                    />\r\n                    {\r\n                        product.inStock\r\n                            ? <Button\r\n                                buttonSize='btn--sm'\r\n                                onClick={() => addToCartHandler(product)}\r\n                            >Add\r\n                            </Button>\r\n                            : <Button\r\n                                buttonSize='btn--sm'\r\n                                buttonStyle='btn-disabled'\r\n                            >Add\r\n                            </Button>\r\n                    }\r\n                </p>\r\n            </td>\r\n        </>\r\n    )\r\n}\r\nexport default OrderFormProduct;","import React from 'react';\r\n\r\n// Components\r\nimport OrderFormProduct from '../ProductOrderFormCard/OrderFormProduct';\r\n\r\nconst EasyOrderSection = ({ products, loading, error, sectionImg, imageAlt, filterOne, filterTwo, filterThree }) => {\r\n    return (\r\n        <>\r\n            <tr>\r\n                <td colSpan=\"5\" style={{ maxHeight: '50px', background: '#3E6F38' }}>\r\n                    <img style={{ maxHeight: '50px' }} src={sectionImg} alt={imageAlt} />\r\n                </td>\r\n            </tr>\r\n            {\r\n                products.products\r\n                    ? products.products.map((product, idx) =>\r\n                        product.category.name === filterOne\r\n                            || product.category.name === filterTwo\r\n                            || product.category.name === filterThree\r\n                            ? <tr className=\"align-middle\" key={idx}>\r\n                                <OrderFormProduct\r\n                                    product={product}\r\n                                />\r\n                            </tr>\r\n                            : null\r\n                    )\r\n                    : <tr><td>Failed</td></tr>\r\n            }\r\n        </>\r\n    );\r\n};\r\n\r\nexport default EasyOrderSection;","import { useEffect, useState } from 'react';\r\n\r\n// Components\r\nimport EasyOrderSection from '../../components/EasyOrderSection/EasyOrderSection';\r\n\r\n// Redux\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { getAllProducts as listProducts } from '../../redux/actions/productActions';\r\n\r\n\r\nconst OrderForm = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const getAllProducts = useSelector((state) => state.getAllProducts);\r\n    const { products, loading, error } = getAllProducts;\r\n\r\n    useEffect(() => {\r\n        dispatch(listProducts())\r\n    }, [])\r\n\r\n    const renderProducts = () => {\r\n        return (\r\n            <table style={{ width: '80%' }} className='table table-hover table-bordered'>\r\n                {/* <thead>\r\n                    <tr>\r\n                        <th>Name</th>\r\n                        <th>Price</th>\r\n                        <th>Description</th>\r\n                        <th>Stock Status</th>\r\n                        <th style={{ textAlign: 'center' }}>Action</th>\r\n                    </tr>\r\n                </thead> */}\r\n                <tbody>\r\n                    <EasyOrderSection\r\n                        filterOne={'Milk'}\r\n                        filterTwo={\"Cheese\"}\r\n                        filterThree={\"Eggs\"}\r\n                        sectionImg={require('../../img/dairy-eggs-logo.png').default}\r\n                        imageAlt={'dairy-eggs-logo'}\r\n                        products={products}\r\n                        loading={loading}\r\n                        error={error}\r\n                    />\r\n                    <EasyOrderSection\r\n                        filterOne={'Beef'}\r\n                        sectionImg={require('../../img/beef-logo.png').default}\r\n                        imageAlt={'beef-logo'}\r\n                        products={products}\r\n                        loading={loading}\r\n                        error={error}\r\n                    />\r\n                    <EasyOrderSection\r\n                        filterOne={'Pork'}\r\n                        sectionImg={require('../../img/pork-logo.png').default}\r\n                        imageAlt={'pork-logo'}\r\n                        products={products}\r\n                        loading={loading}\r\n                        error={error}\r\n                    />\r\n                    <EasyOrderSection\r\n                        filterOne={'Chicken'}\r\n                        filterTwo={\"Turkey\"}\r\n                        sectionImg={require('../../img/poultry-logo.png').default}\r\n                        imageAlt={'poultry-logo'}\r\n                        products={products}\r\n                        loading={loading}\r\n                        error={error}\r\n                    />\r\n                    <EasyOrderSection\r\n                        filterOne={'Lamb'}\r\n                        sectionImg={require('../../img/lamb-logo.png').default}\r\n                        imageAlt={'lamb-logo'}\r\n                        products={products}\r\n                        loading={loading}\r\n                        error={error}\r\n                    />\r\n                    <EasyOrderSection\r\n                        filterOne={'Goat'}\r\n                        sectionImg={require('../../img/goat-logo.png').default}\r\n                        imageAlt={'goat-logo'}\r\n                        products={products}\r\n                        loading={loading}\r\n                        error={error}\r\n                    />\r\n                    <EasyOrderSection\r\n                        filterOne={'Raw Honey'}\r\n                        filterTwo={\"Creamed Honey\"}\r\n                        sectionImg={require('../../img/honey-logo.png').default}\r\n                        imageAlt={'honey-logo'}\r\n                        products={products}\r\n                        loading={loading}\r\n                        error={error}\r\n                    />\r\n                    <EasyOrderSection\r\n                        filterOne={'Packs'}\r\n                        sectionImg={require('../../img/express-packs-logo.png').default}\r\n                        imageAlt={'express-packs-logo'}\r\n                        products={products}\r\n                        loading={loading}\r\n                        error={error}\r\n                    />\r\n                </tbody>\r\n            </table>\r\n        )\r\n    }\r\n\r\n\r\n    return (\r\n        <div style={{ display: 'flex', justifyContent: 'center' }}>\r\n            {renderProducts()}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default OrderForm;","\r\n\r\nexport const MenuItems = [\r\n    {\r\n        title: 'Home',\r\n        url: '/',\r\n        cName: 'nav-links'\r\n    },\r\n    {\r\n        title: 'Browse Products',\r\n        url: '/our-products',\r\n        cName: 'nav-links'\r\n    },\r\n    // {\r\n    //     title: 'How To Order',\r\n    //     url: '#',\r\n    //     cName: 'nav-links'\r\n    // },\r\n    {\r\n        title: 'Easy Order',\r\n        url: '/order-form',\r\n        cName: 'nav-links'\r\n    },\r\n    {\r\n        title: 'Contact Us',\r\n        url: '#',\r\n        cName: 'nav-links'\r\n    },\r\n    // {\r\n    //     title: 'Sign In',\r\n    //     url: '/login',\r\n    //     cName: 'nav-links'\r\n    // },\r\n    // {\r\n    //     title: '',\r\n    //     url: '#',\r\n    //     cName: 'nav-links fas fa-shopping-cart'\r\n    // },\r\n    // {\r\n    //     title: 'Sign Up',\r\n    //     url: '/register',\r\n    //     cName: 'nav-links-mobile'\r\n    // },\r\n\r\n]","import { Button } from \"../Button/Button\";\r\nimport { MenuItems } from './MenuItems';\r\nimport { useEffect, useState } from \"react\";\r\nimport './Navbar.css';\r\nimport { Link, Redirect, useHistory } from 'react-router-dom';\r\n\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport RegistrationModal from \"../Registration/RegistrationModal\";\r\nimport LoginModal from \"../Login/LoginModal\";\r\nimport { logout, login } from \"../../redux/actions/userAuth.actions\";\r\nimport { updateCart } from \"../../redux/actions/cartActions\";\r\nimport { Dropdown } from \"react-bootstrap\";\r\nimport DropdownToggle from \"react-bootstrap/esm/DropdownToggle\";\r\n\r\nconst NavBar = () => {\r\n\r\n    const history = useHistory()\r\n\r\n    const auth = useSelector(state => state.auth);\r\n    const dispatch = useDispatch();\r\n\r\n    const [clicked, setClicked] = useState(false);\r\n\r\n    const [loginModal, setLoginModal] = useState(false);\r\n    const showLoginModal = () => setLoginModal(true);\r\n    const hideLoginModal = () => setLoginModal(false);\r\n\r\n    const [regModal, setRegModal] = useState(false);\r\n    const showRegModal = () => setRegModal(true);\r\n    const hideRegModal = () => setRegModal(false);\r\n\r\n    const handleClick = () => {\r\n        if (clicked) {\r\n            setClicked(false)\r\n        } else {\r\n            setClicked(true)\r\n        }\r\n    }\r\n\r\n    const cart = useSelector(state => state.cart);\r\n    const { cartItems } = cart;\r\n\r\n    const getCartCount = () => {\r\n        return cartItems.reduce((quantity, item) => quantity + Number(item.quantity), 0)\r\n    }\r\n\r\n    const handleLogout = () => {\r\n        dispatch(logout())\r\n        return history.push('/')\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (auth.authenticate) {\r\n            hideLoginModal()\r\n            console.log('Updating Cart.. NavBar');\r\n            dispatch(updateCart());\r\n        }\r\n    }, [auth.authenticate])\r\n\r\n    return (\r\n        <nav className=\"NavbarItems\">\r\n            <div className=\"navbar-logo\">\r\n                <a href=\"/\">\r\n                    <img className=\" navbar-logo-img\" src={require('../../img/FarmToHomeLogoLong.png').default} alt=\"farm-to-home-logo\" />\r\n                </a>\r\n            </div>\r\n            <div className=\"menu-icon\" onClick={handleClick}>\r\n                <i className={clicked ? 'fas fa-times' : 'fas fa-bars'}></i>\r\n            </div>\r\n            <ul className={clicked ? 'nav-menu active' : 'nav-menu'}>\r\n                {\r\n                    MenuItems.map((item, idx) => {\r\n                        return (\r\n                            <li key={idx}>\r\n                                <Link className={item.cName} to={item.url}>{item.title}</Link>\r\n                            </li>\r\n                        )\r\n                    })\r\n                }\r\n                <li>\r\n                    <Link className=\"nav-links fas fa-shopping-cart cart\" to=\"/cart\">\r\n                        <span className=\"cart-badge\">{getCartCount()}</span>\r\n                    </Link>\r\n                </li>\r\n            </ul>\r\n\r\n            {\r\n                !auth.authenticate\r\n                    ? <div style={{ display: 'flex' }}>\r\n\r\n                        <button\r\n                            style={{ marginRight: '10px' }}\r\n                            className=\"btn btn--primary btn--med sign-up-btn\"\r\n                            onClick={showLoginModal}>\r\n                            Login\r\n                        </button>\r\n\r\n                        <button\r\n                            style={{ marginRight: '10px' }}\r\n                            className=\"btn btn--primary btn--med sign-up-btn\"\r\n                            onClick={showRegModal}>\r\n                            Register\r\n                        </button>\r\n                        {/* <Link className=\"btn btn--primary btn--med sign-up-btn\" to={'/register'}>Register</Link> */}\r\n                    </div>\r\n                    : <>\r\n                        {/* <style type='text/css'>\r\n                            {`\r\n                                .dropdown-menu.show {\r\n                                    transform: translate(-15px, 43px) !important; \r\n                                    inset: 2px auto auto 0px !important;\r\n                                }\r\n                                \r\n                            `}\r\n                        </style> */}\r\n                        <Dropdown>\r\n                            <Dropdown.Toggle\r\n                                style={{ marginRight: '10px' }}\r\n                                className=\"btn btn--primary btn--med sign-up-btn\"\r\n                            >\r\n                                Brandon\r\n                            </Dropdown.Toggle>\r\n                            <Dropdown.Menu\r\n                                className=\"dropdown-menu\"\r\n                            // style={{marginRight: '10px'}}\r\n                            >\r\n\r\n                                <Dropdown.Item style={{ marginRight: '10px' }} href=\"/account\">\r\n                                    Account\r\n                                </Dropdown.Item>\r\n\r\n                                <Dropdown.Item href=\"/account/orders\">\r\n                                    My Orders\r\n                                </Dropdown.Item>\r\n\r\n                            </Dropdown.Menu>\r\n                        </Dropdown>\r\n\r\n                        <button\r\n                            style={{ marginRight: '10px' }}\r\n                            className=\"btn btn--primary btn--med sign-up-btn\"\r\n                            onClick={handleLogout}>\r\n                            Logout\r\n                        </button>\r\n\r\n                        {/* <div className=\"dropdown\">\r\n                            <button\r\n                                style={{ marginRight: '10px' }}\r\n                                className=\"btn dropdown-toggle btn--primary btn--med sign-up-btn\"\r\n                                id=\"dropdownMenuButton\"\r\n                                data-toggle=\"dropdown\"\r\n                                aria-haspopup=\"true\"\r\n                                aria-expanded=\"false\"\r\n                            // onClick={() => console.log('dropdown')}\r\n                            >\r\n                                {auth.user.firstName}\r\n                            </button>\r\n                            <div\r\n                                className='dropdown-menu'\r\n                                aria-labelledby=\"dropdownMenuButton\"\r\n                                \r\n                            >\r\n                                <a href=\"/account/orders\" className=\"dropdown-item\">My Orders</a>\r\n                            </div>\r\n                        </div> */}\r\n\r\n                        {/* <button\r\n                            style={{ marginRight: '10px' }}\r\n                            className=\"btn btn--primary btn--med sign-up-btn\"\r\n                            onClick={() => console.log('dropdown')}>\r\n                            {auth.user.firstName}\r\n                        </button> */}\r\n                    </>\r\n            }\r\n\r\n\r\n\r\n            <RegistrationModal\r\n                show={regModal}\r\n                size={'lg'}\r\n                onHide={hideRegModal}\r\n                handleClose={hideRegModal}\r\n            />\r\n\r\n            <LoginModal\r\n                show={loginModal}\r\n                size={'lg'}\r\n                onHide={hideLoginModal}\r\n                handleClose={hideLoginModal}\r\n            />\r\n\r\n        </nav>\r\n    )\r\n}\r\n\r\n// class NavBar extends Component{\r\n\r\n//     state = {clicked: false}\r\n\r\n//     handleClick = () => {\r\n//         this.setState({clicked: !this.state.clicked})\r\n//     }\r\n\r\n//     render() {\r\n//         return(\r\n//             <nav className=\"NavbarItems\">\r\n//                 <div className=\"navbar-logo\">\r\n//                     <a href=\"/\">\r\n//                         <img className=\" navbar-logo-img\" src={ require('../../img/FarmToHomeLogoLong.png').default } alt=\"farm-to-home-logo\" />\r\n//                     </a>\r\n//                 </div>\r\n//                 <div className=\"menu-icon\" onClick={this.handleClick}>\r\n//                     <i className={this.state.clicked ? 'fas fa-times' : 'fas fa-bars'}></i>\r\n//                 </div>\r\n//                 <ul className={this.state.clicked ? 'nav-menu active' : 'nav-menu'}>\r\n//                     {MenuItems.map((item, idx) => {\r\n//                         return(\r\n//                             <li key={idx}>\r\n//                                 <a className={item.cName} href={item.url}>\r\n//                                     {item.title}\r\n//                                 </a>\r\n//                             </li>\r\n//                         )\r\n//                     })}\r\n//                     <li>\r\n//                         <a className=\"nav-links fas fa-shopping-cart cart\" href=\"/cart\"> \r\n//                             <span className=\"cart-badge\">0</span>\r\n\r\n//                         </a>\r\n//                     </li>\r\n//                 </ul>\r\n//                 <div className=\"sign-up-btn\">\r\n//                     <Button>Sign Up</Button>\r\n//                 </div>\r\n//             </nav>\r\n//         )\r\n//     }\r\n// }\r\n\r\nexport default NavBar;","import { useEffect } from 'react';\r\n\r\n// Components\r\nimport Product from '../../components/ProductCard/ProductCard';\r\nimport CategoryMenu from '../../components/CategoryMenu/CategoryMenu';\r\n\r\n// Redux\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getProductsByCat } from '../../redux/actions/productActions';\r\n\r\n\r\nconst FilteredProductScreen = (props) => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const getFilteredProducts = useSelector(state => state.filteredProducts);\r\n    const { products, loading, error } = getFilteredProducts;\r\n\r\n    useEffect(() => {\r\n        const { match } = props;\r\n        dispatch(getProductsByCat(match.params.name));\r\n    }, [props.match.params])\r\n\r\n    return (\r\n        <>\r\n            <CategoryMenu />\r\n            <div className=\"our-products-screen\">\r\n                <div className=\"our-products-screen-products show\">\r\n\r\n                    {\r\n                        loading ? (\r\n                            <h2>Loading...</h2>\r\n                        ) : error ? (\r\n                            <h2>{error}</h2>\r\n                        ) :\r\n                            products.products\r\n                                ? products.products.map((product, idx) =>\r\n                                    <Product key={idx}\r\n                                        productId={product._id}\r\n                                        category={product.category}\r\n                                        name={product.name}\r\n                                        productImage={product.productImage}\r\n                                        price={product.price}\r\n                                        measurement={product.measurement}\r\n                                        description={product.description}\r\n                                        inStock={product.inStock}\r\n                                    />)\r\n                                : <p>something else</p>\r\n                    }\r\n\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default FilteredProductScreen;","import { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport { useEffect } from 'react';\nimport './custom.scss';\nimport './App.css';\n\n// Screens\nimport OurProductsScreen from './views/OurProductsScreen/OurProductsScreen';\nimport CheckoutScreen from './views/CheckoutScreen/CheckoutScreen';\nimport ProductScreen from './views/ProductScreen/ProductScreen';\nimport OrdersScreen from './views/OrdersScreen/OrdersScreen';\nimport HomeScreen from './views/HomeScreen/HomeScreen';\nimport CartScreen from './views/CartScreen/CartScreen';\nimport OrderForm from './views/OrderForm/OrderForm';\n\n// Components\nimport Navbar from './components/Navbar/NavBar';\nimport FilteredProductScreen from './views/FilteredProductScreen/FilteredProductScreen';\n\n// Redux\nimport { useDispatch, useSelector } from 'react-redux';\nimport { isUserLoggedIn } from './redux/actions/userAuth.actions';\nimport { getCartItems, updateCart } from './redux/actions/cartActions';\n\n\nconst App = () => {\n\n  const dispatch = useDispatch();\n  const auth = useSelector((state) => state.auth);\n  const cart = useSelector((state) => state.cart);\n\n  useEffect(() => {\n    if (!auth.authenticate) {\n      console.log('is user logged in? App');\n      dispatch(isUserLoggedIn());\n    }\n  }, [auth.authenticate]);\n\n  useEffect(() => {\n    if (auth.authenticate) {\n      console.log(\"Getting Cart Items App\");\n      dispatch(getCartItems());\n    }\n  }, [auth.authenticate, cart.updateingCart])\n\n  return (\n    <div className=\"App\">\n      <Router>\n        <Navbar />\n        <main>\n          <Switch>\n            <Route exact path=\"/\" component={HomeScreen} />\n            <Route path=\"/our-products\" component={OurProductsScreen} />\n            <Route path=\"/order-form\" component={OrderForm} />\n            <Route path=\"/cart\" component={CartScreen} />\n            <Route path=\"/checkout\" component={CheckoutScreen} />\n            <Route path=\"/account/orders\" component={OrdersScreen}/>\n            <Route path=\"/category/:name\" component={FilteredProductScreen} />\n            <Route path=\"/product/:id\" component={ProductScreen} />\n          </Switch>\n        </main>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","import 'bootstrap/dist/css/bootstrap.css';\nimport ReactDOM from 'react-dom';\nimport React from 'react';\nimport App from './App';\nimport './index.css';\n\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById('root')\n);\n\n","export default __webpack_public_path__ + \"static/media/dairy-eggs-logo.9fa3d884.png\";","export default __webpack_public_path__ + \"static/media/beef-logo.f193b740.png\";","export default __webpack_public_path__ + \"static/media/pork-logo.2210e317.png\";","export default __webpack_public_path__ + \"static/media/poultry-logo.e34bfc85.png\";","export default __webpack_public_path__ + \"static/media/lamb-logo.8c5d4b21.png\";","export default __webpack_public_path__ + \"static/media/goat-logo.856523f9.png\";","export default __webpack_public_path__ + \"static/media/honey-logo.61b046db.png\";","export default __webpack_public_path__ + \"static/media/express-packs-logo.f7f5ca83.png\";"],"sourceRoot":""}