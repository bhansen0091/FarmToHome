{"version":3,"sources":["img/FarmToHomeLogoLong.png","redux/constants/category.constants.js","urlConfig.js","helpers/axios.js","redux/actions/category.actions.js","components/CategoryMenu/CategoryMenu.jsx","components/Button/Button.jsx","redux/constants/cartConstants.js","redux/reducers/cartReducer.js","redux/reducers/category.reducer.js","redux/constants/userConstants.js","redux/reducers/user.reducer.js","redux/constants/productConstants.js","redux/store.js","redux/reducers/productReducers.js","redux/actions/cartActions.js","components/ProductCard/ProductCard.jsx","components/ProductSection/ProductSection.jsx","redux/actions/productActions.js","views/OurProductsScreen/OurProductsScreen.jsx","redux/actions/userAuth.actions.js","components/UI/Inputs/InputDefault.jsx","components/Registration/RegistrationModal.jsx","components/Login/LoginModal.jsx","components/Card/Card.jsx","views/CheckoutScreen/AddressForm.jsx","components/CartItem/CartItem.jsx","views/CartScreen/CartScreen.jsx","views/CheckoutScreen/CheckoutScreen.jsx","views/ProductScreen/ProductScreen.jsx","components/OrderScreenCard/OrderScreenCard.jsx","views/OrdersScreen/OrdersScreen.jsx","views/HomeScreen/HomeScreen.jsx","components/ProductOrderFormCard/OrderFormProduct.jsx","components/EasyOrderSection/EasyOrderSection.jsx","views/OrderForm/OrderForm.jsx","components/Navbar/MenuItems.jsx","components/Navbar/NavBar.jsx","views/FilteredProductScreen/FilteredProductScreen.jsx","App.jsx","index.js","img/dairy-eggs-logo.png","img/beef-logo.png","img/pork-logo.png","img/poultry-logo.png","img/lamb-logo.png","img/goat-logo.png","img/honey-logo.png","img/express-packs-logo.png"],"names":["GET_ALL_CATEGORIES_REQUEST","GET_ALL_CATEGORIES_SUCCESS","generatePublicUrl","fileName","axiosInstance","axios","create","baseURL","getAllCategories","dispatch","a","type","actionTypes","get","res","status","categoryList","data","payload","error","CategoryMenu","categories","useSelector","state","useDispatch","useEffect","className","length","renderCategories","myCategories","category","push","parentId","to","name","children","_id","STYLES","SIZES","Button","onClick","buttonStyle","buttonSize","checkButtonStyle","includes","checkButtonSize","ADD_TO_CART_REQUEST","ADD_TO_CART_SUCCESS","ADD_TO_CART_FAIL","REMOVE_FROM_CART_SUCCESS","ADD_TO_DB_CART_REQUEST","ADD_TO_DB_CART_SUCCESS","REMOVE_FROM_DB_CART_SUCCESS","CART_RESET_SUCCESS","initialState","cartItems","updatingCart","message","loading","USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_LOGOUT_REQUEST","USER_LOGOUT_SUCCESS","USER_LOGOUT_FAIL","USER_REGISTRATION_REQUEST","USER_REGISTRATION_SUCCESS","USER_REGISTRATION_FAIL","GET_USER_ADDRESS_REQUEST","GET_USER_ADDRESS_SUCCESS","GET_USER_ADDRESS_FAILURE","RESET_ADDRESS_REQUEST","RESET_ADDRESS_SUCCESS","RESET_ADDRESS_FAILURE","ADD_USER_ADDRESS_REQUEST","ADD_USER_ADDRESS_SUCCESS","ADD_USER_ADDRESS_FAILURE","ADD_USER_ORDER_SUCCESS","GET_USER_ORDER_REQUEST","GET_USER_ORDER_SUCCESS","GET_USER_ORDER_FAILURE","GET_USER_ORDER_DETAILS_REQUEST","GET_USER_ORDER_DETAILS_SUCCESS","user","firstName","lastName","email","role","authenticate","authenticating","regInitialState","userDetailsInitialState","address","orders","orderDetails","orderFetching","placedOrderId","GET_PRODUCTS_REQUEST","GET_PRODUCTS_SUCCESS","GET_PRODUCTS_FAIL","GET_FILTERED_PRODUCTS_REQUEST","GET_FILTERED_PRODUCTS_SUCCESS","GET_FILTERED_PRODUCTS_FAIL","GET_PRODUCT_DETAILS_REQUEST","GET_PRODUCT_DETAILS_SUCCESS","GET_PRODUCT_DETAILS_FAIL","GET_PRODUCT_DETAILS_RESET","reducer","combineReducers","auth","action","regAuth","cart","item","find","x","product","existItem","map","filter","filteredProducts","products","getAllProducts","getProductDetails","userDetails","fieldErrors","order","middleware","thunk","INITIAL_STATE","localStorage","getItem","JSON","parse","store","createStore","composeWithDevTools","applyMiddleware","getCartItems","withCredentials","console","log","addToCart","id","qty","getState","appStore","productImage","price","measurement","description","inStock","sendIt","quantity","post","setItem","stringify","Product","productId","useState","setQty","src","alt","style","textAlign","marginBottom","padding","borderRadius","display","justifyContent","margin","toFixed","htmlFor","min","onChange","e","target","value","ProductSection","sectionImg","imageAlt","filterOne","filterTwo","filterThree","show","setShow","idx","response","OurProductsScreen","listProducts","listCategories","require","default","getAddress","userAddress","InputDefault","props","Form","Label","marginLeft","label","Control","placeholder","RegistrationModal","size","onHide","handleClose","initialReg","password","confirmPassword","contactNumber","reg","setReg","regError","setRegError","handleRegInputs","errorMessage","Modal","aria-labelledby","centered","Header","Title","Body","Container","Row","Col","onSubmit","preventDefault","then","catch","err","register","Group","Text","md","controlId","as","LoginModal","initialLog","setLog","logError","setLogError","handleLogInputs","marginTop","login","Card","headerLeft","headerRight","alignSelf","fontSize","fontWeight","AddressForm","initialData","initialAddress","mobileNumber","zipCode","streetOne","streetTwo","city","alternatePhone","addressType","setAddress","addressError","setAddressError","submitFlag","setSubmitFlag","handleInputs","onAddressSubmit","errors","errorArray","Object","entries","array","keyName","substring","splice","errorVal","addAddress","_address","slice","onSubmitForm","alignItems","Check","inline","defaultChecked","readOnly","CartItem","qtyChangeHandler","removeFromCartHandler","CartScreen","setCartItems","removeFromCart","getCartCount","reduce","Number","onlyCartItems","cItem","getCartSubTotal","CheckoutStep","active","stepNumber","title","body","Address","adr","selectAddress","enableAddressEditForm","confirmDeliveryAddress","edit","withoutLayout","onCancel","width","selected","CheckoutScreen","newAddress","setNewAddress","loginModal","setLoginModal","hideLoginModal","regModal","setRegModal","hideRegModal","selectedAddress","setSelectedAddress","confirmAddressOption","setConfirmAddressOption","orderSummaryOption","setOrderSummaryOption","orderConfirmation","setOrderConfirmation","finalizeOrderOption","setFinalizeOrderOption","confirmOrder","setConfirmOrder","addr","updatedAddress","history","marginRight","Table","totalAmount","items","payablePrice","purchasedQty","addressId","paymentStatus","cartActionTypes","addOrder","ProductScreen","match","productDetails","params","OrderScreenCard","initialProduct","verticalAlign","addToCartHandler","OrdersScreen","makeDate","date","Date","createdAt","month","getMonth","day","getDate","year","getFullYear","alignContent","flexDirection","bordered","colSpan","backgroundColor","addOrderToCartHandler","HomeScreen","OrderFormProduct","EasyOrderSection","maxHeight","background","OrderForm","MenuItems","url","cName","NavBar","useHistory","clicked","setClicked","removeItem","keys","key","index","href","Dropdown","Toggle","Menu","Item","clear","FilteredProductScreen","getFilteredProducts","App","updateingCart","exact","path","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.54e30ceb.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/FarmToHomeLogoLong.b993482a.png\";","\r\n\r\n// Get Categories\r\nexport const GET_ALL_CATEGORIES_REQUEST = \"GET_ALL_CATEGORIES_REQUEST\";\r\nexport const GET_ALL_CATEGORIES_SUCCESS = \"GET_ALL_CATEGORIES_SUCCESS\";\r\nexport const GET_ALL_CATEGORIES_FAIL = \"GET_ALL_CATEGORIES_FAIL\";","\r\nexport const api = process.env.NODE_ENV !== 'production'\r\n    ? 'http://localhost:8000/api'\r\n    : '/api'\r\n\r\nexport const generatePublicUrl = (fileName) => {\r\n    // console.log(process.env.NODE_ENV);    \r\n    const location = process.env.NODE_ENV !== 'production'\r\n        ? `http://localhost:8000/public/${fileName}`\r\n        : `/public/${fileName}`\r\n    return location;\r\n}\r\n\r\n\r\n\r\n\r\n","import axios from 'axios';\r\nimport { api } from '../urlConfig';\r\n\r\nconst axiosInstance = axios.create({\r\n    baseURL: api\r\n})\r\n\r\nexport default axiosInstance;","import * as actionTypes from '../constants/category.constants';\r\nimport axiosInstance from '../../helpers/axios';\r\n// import axios from 'axios';\r\n\r\nexport const getAllCategories = () => {\r\n    return async dispatch => {\r\n        dispatch({\r\n            type: actionTypes.GET_ALL_CATEGORIES_REQUEST\r\n        });\r\n\r\n        const res = await axiosInstance.get(`/categories`);\r\n\r\n        if (res.status === 200) {\r\n            const { categoryList } = res.data\r\n            dispatch({\r\n                type: actionTypes.GET_ALL_CATEGORIES_SUCCESS,\r\n                payload: { categoryList: categoryList }\r\n            })\r\n        } else {\r\n            dispatch({\r\n                type: actionTypes.GET_ALL_CATEGORIES_FAIL,\r\n                payload: { error: res.data.error }\r\n            })\r\n        }\r\n    }\r\n}","import { useEffect } from 'react';\r\n\r\n// Routing\r\nimport { Link } from 'react-router-dom';\r\n\r\n// CSS\r\nimport './CategoryMenu.css';\r\n\r\n// Redux\r\nimport { getAllCategories } from '../../redux/actions/category.actions';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nconst CategoryMenu = () => {\r\n\r\n    const categories = useSelector(state => state.categories);\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        dispatch(getAllCategories())\r\n    }, [])\r\n\r\n    // Generare a list of the categories and their children to display on page\r\n    const renderCategories = (categories) => {\r\n        let myCategories = [];\r\n        for (let category of categories) {\r\n            myCategories.push(\r\n                <li key={category._id}>\r\n                    {\r\n                        category.parentId\r\n                            ? <Link className=\"btn btn--primary btn--med\" to={`/category/${category.name}`}>{category.name}</Link>\r\n                            : <span>{category.name}</span>\r\n                    }\r\n                    {category.children.length > 0 ? (<ul>{renderCategories(category.children)}</ul>) : null}\r\n                </li>\r\n            );\r\n        }\r\n        // console.log(myCategories);\r\n        return myCategories;\r\n    }\r\n\r\n    return (\r\n        <div className=\"cat-menu-header\">\r\n            <ul>\r\n                {\r\n                    categories.categoryList.length > 0\r\n                        ? renderCategories(categories.categoryList)\r\n                        : null\r\n                }\r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CategoryMenu;","\r\n\r\nimport './Button.css';\r\n\r\nconst STYLES = [\r\n    'btn--primary',\r\n    'btn--outline',\r\n    'btn--orange',\r\n    'btn-disabled'\r\n]\r\n\r\nconst SIZES = [\r\n    'btn--med',\r\n    'btn--sm',\r\n    'btn--large'\r\n]\r\n\r\nexport const Button = ({\r\n    children,\r\n    type,\r\n    onClick,\r\n    buttonStyle,\r\n    buttonSize\r\n}) => {\r\n    const checkButtonStyle = STYLES.includes(buttonStyle) ? buttonSize : STYLES[0]\r\n\r\n    const checkButtonSize = SIZES.includes(buttonSize) ? buttonSize : SIZES[0]\r\n\r\n    return(\r\n        <button className={`btn ${checkButtonStyle} ${checkButtonSize}`} onClick = {onClick} type={type}>\r\n            {children}\r\n        </button>\r\n    )\r\n}","\r\n// OLD\r\nexport const ADD_TO_CART = \"ADD_TO_CART\";\r\nexport const REMOVE_FROM_CART = \"REMOVE_FROM_CART\";\r\nexport const CART_RESET = \"CART_RESET\";\r\n\r\n// Add to Local Cart\r\nexport const ADD_TO_CART_REQUEST = \"ADD_TO_CART_REQUEST\";\r\nexport const ADD_TO_CART_SUCCESS = \"ADD_TO_CART_SUCCESS\";\r\nexport const ADD_TO_CART_FAIL = \"ADD_TO_CART_FAIL\";\r\n\r\n// Remove from Local Cart\r\nexport const REMOVE_FROM_CART_REQUEST = \"REMOVE_FROM_CART_REQUEST\";\r\nexport const REMOVE_FROM_CART_SUCCESS = \"REMOVE_FROM_CART_SUCCESS\";\r\nexport const REMOVE_FROM_CART_FAIL = \"REMOVE_FROM_CART_FAIL\";\r\n\r\n// Add to User Cart on DB\r\nexport const ADD_TO_DB_CART_REQUEST = \"ADD_TO_DB_CART_REQUEST\";\r\nexport const ADD_TO_DB_CART_SUCCESS = \"ADD_TO_DB_CART_SUCCESS\";\r\nexport const ADD_TO_DB_CART_FAIL = \"ADD_TO_DB_CART_FAIL\";\r\n\r\n// Remove from Local Cart\r\nexport const REMOVE_FROM_DB_CART_REQUEST = \"REMOVE_FROM_DB_CART_REQUEST\";\r\nexport const REMOVE_FROM_DB_CART_SUCCESS = \"REMOVE_FROM_DB_CART_SUCCESS\";\r\nexport const REMOVE_FROM_DB_CART_FAIL = \"REMOVE_FROM_DB_CART_FAIL\";\r\n\r\n// Reset Cart\r\nexport const CART_RESET_REQUEST = \"CART_RESET_REQUEST\";\r\nexport const CART_RESET_SUCCESS = \"CART_RESET_SUCCESS\";\r\nexport const CART_RESET_FAIL = \"CART_RESET_FAIL\";","import * as actionTypes from '../constants/cartConstants';\r\n\r\nexport const cartReduce = (state = { cartItems: [] }, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.ADD_TO_CART:\r\n            const item = action.payload;\r\n\r\n            const existItem = state.cartItems.find((x) => x.product === item.product);\r\n\r\n            if (existItem) {\r\n                return {\r\n                    ...state,\r\n                    cartItems: state.cartItems.map((x) => x.product === existItem.product ? item : x)\r\n                };\r\n            } else {\r\n                return {\r\n                    ...state,\r\n                    cartItems: [...state.cartItems, item]\r\n                };\r\n            }\r\n        case actionTypes.REMOVE_FROM_CART:\r\n            return {\r\n                ...state,\r\n                cartItems: state.cartItems.filter((x) => x.product !== action.payload)\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nconst initialState = {\r\n    cartItems: [],\r\n    updatingCart: false,\r\n    error: null,\r\n    message: ''\r\n}\r\n\r\nexport const cartReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.ADD_TO_CART_REQUEST:\r\n            state = {\r\n                ...state,\r\n                updatingCart: true\r\n            }\r\n            break;\r\n        case actionTypes.ADD_TO_DB_CART_REQUEST:\r\n            state = {\r\n                ...state,\r\n                updatingCart: true\r\n            }\r\n            break;\r\n        case actionTypes.ADD_TO_CART_SUCCESS:\r\n\r\n            const item = action.payload.cartItems.find((x) => x.product._id)\r\n\r\n            const existItem = state.cartItems.find((x) => x.product._id === item.product._id);\r\n            if (existItem) {\r\n                state = {\r\n                    ...state,\r\n                    cartItems: state.cartItems.map((x) => x.product._id === existItem.product._id ? item : x),\r\n                    message: 'Existing Item',\r\n                    updatingCart: false\r\n                }\r\n            } else {\r\n                state = {\r\n                    ...state,\r\n                    cartItems: [...state.cartItems, item],\r\n                    updatingCart: false,\r\n                    message: 'New Item',\r\n                }\r\n            }\r\n            break;\r\n        case actionTypes.ADD_TO_DB_CART_SUCCESS:\r\n            state = {\r\n                ...state,\r\n                cartItems: action.payload.cartItems,\r\n                updatingCart: false\r\n            }\r\n            break;\r\n        case actionTypes.ADD_TO_CART_FAIL:\r\n            state = {\r\n                ...state,\r\n                updatingCart: false,\r\n                error: action.payload.error\r\n            }\r\n            break;\r\n        case actionTypes.CART_RESET_SUCCESS:\r\n            state = {\r\n                ...initialState\r\n            }\r\n            break;\r\n        case actionTypes.REMOVE_FROM_DB_CART_SUCCESS:\r\n            state = {\r\n                ...state,\r\n                updatingCart: true\r\n            }\r\n            break;\r\n        case actionTypes.REMOVE_FROM_CART_SUCCESS:\r\n            state = {\r\n                ...state,\r\n                cartItems: state.cartItems.filter((x) => x.product._id !== action.payload),\r\n                message: action.payload\r\n            }\r\n            break;\r\n    }\r\n    return state;\r\n}\r\n\r\n","import * as actionTypes from '../constants/category.constants';\r\n\r\nconst initialState = {\r\n    categoryList: [],\r\n    loading: false,\r\n    error: null\r\n};\r\n\r\n// const buildNewCategoryList = (parentId, categoryList, category) => {\r\n//     const newCategoryList = [];\r\n\r\n//     if (parentId === undefined) {\r\n//         return [\r\n//             ...categoryList,\r\n//             {\r\n//                 _id: category._id,\r\n//                 name: category.name,\r\n//                 children: []\r\n//             }\r\n//         ]\r\n//     }\r\n\r\n//     for (const cat of categoryList) {\r\n\r\n//         if (cat._id == parentId) {\r\n//             newCategoryList.push({\r\n//                 ...cat,\r\n//                 children: cat.children ? buildNewCategoryList(parentId, [\r\n//                     ...cat.children,\r\n//                     {\r\n//                         _id: category._id,\r\n//                         name: category.name,\r\n//                         parentId: category.parentId,\r\n//                         children: category.children\r\n//                     }], category) : []\r\n//             })\r\n//         } else {\r\n//             newCategoryList.push({\r\n//                 ...cat,\r\n//                 children: cat.children ? buildNewCategoryList(cat.parentId, cat.children, category) : []\r\n//             })\r\n//         }\r\n//     }\r\n//     return newCategoryList;\r\n// }\r\n\r\nexport const categoryReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.GET_ALL_CATEGORIES_REQUEST:\r\n            state = {\r\n                ...state,\r\n                loading: true\r\n            }\r\n            break;\r\n        case actionTypes.GET_ALL_CATEGORIES_SUCCESS:\r\n            // console.log(action.payload);\r\n            state = {\r\n                ...state,\r\n                categoryList: action.payload.categoryList,\r\n                loading: false\r\n            }\r\n            break;\r\n    }\r\n    return state\r\n}\r\n","// ~~~~~~~~~~~~~~~~~~ User ~~~~~~~~~~~~~~~~~~\r\n\r\n// User Login\r\nexport const USER_LOGIN_REQUEST = \"USER_LOGIN_REQUEST\";\r\nexport const USER_LOGIN_SUCCESS = \"USER_LOGIN_SUCCESS\";\r\nexport const USER_LOGIN_FAIL = \"USER_LOGIN_FAIL\";\r\n\r\n// User Logout\r\nexport const USER_LOGOUT_REQUEST = \"USER_LOGOUT_REQUEST\";\r\nexport const USER_LOGOUT_SUCCESS = \"USER_LOGOUT_SUCCESS\";\r\nexport const USER_LOGOUT_FAIL = \"USER_LOGOUT_FAIL\";\r\n\r\n// User Registration\r\nexport const USER_REGISTRATION_REQUEST = \"USER_REGISTRATION_REQUEST\";\r\nexport const USER_REGISTRATION_SUCCESS = \"USER_REGISTRATION_SUCCESS\";\r\nexport const USER_REGISTRATION_FAIL = \"USER_REGISTRATION_FAIL\";\r\n\r\n// Get User Address\r\nexport const GET_USER_ADDRESS_REQUEST = \"GET_USER_ADDRESS_REQUEST\";\r\nexport const GET_USER_ADDRESS_SUCCESS = \"GET_USER_ADDRESS_SUCCESS\";\r\nexport const GET_USER_ADDRESS_FAILURE = \"GET_USER_ADDRESS_FAILURE\";\r\n\r\n// Reset Address\r\nexport const RESET_ADDRESS_REQUEST = \"RESET_ADDRESS_REQUEST\";\r\nexport const RESET_ADDRESS_SUCCESS = \"RESET_ADDRESS_SUCCESS\";\r\nexport const RESET_ADDRESS_FAILURE = \"RESET_ADDRESS_FAILURE\";\r\n\r\n// Add User Address\r\nexport const ADD_USER_ADDRESS_REQUEST = \"ADD_USER_ADDRESS_REQUEST\";\r\nexport const ADD_USER_ADDRESS_SUCCESS = \"ADD_USER_ADDRESS_SUCCESS\";\r\nexport const ADD_USER_ADDRESS_FAILURE = \"ADD_USER_ADDRESS_FAILURE\";\r\n\r\n// Add User Order\r\nexport const ADD_USER_ORDER_REQUEST = \"ADD_USER_ORDER_REQUEST\";\r\nexport const ADD_USER_ORDER_SUCCESS = \"ADD_USER_ORDER_SUCCESS\";\r\nexport const ADD_USER_ORDER_FAILURE = \"ADD_USER_ORDER_FAILURE\";\r\n\r\n// Get User Orders\r\nexport const GET_USER_ORDER_REQUEST = \"GET_USER_ORDER_REQUEST\";\r\nexport const GET_USER_ORDER_SUCCESS = \"GET_USER_ORDER_SUCCESS\";\r\nexport const GET_USER_ORDER_FAILURE = \"GET_USER_ORDER_FAILURE\";\r\n\r\n// Get Order Derails\r\nexport const GET_USER_ORDER_DETAILS_REQUEST = \"GET_USER_ORDER_DETAILS_REQUEST\";\r\nexport const GET_USER_ORDER_DETAILS_SUCCESS = \"GET_USER_ORDER_DETAILS_SUCCESS\";\r\nexport const GET_USER_ORDER_DETAILS_FAILURE = \"GET_USER_ORDER_DETAILS_FAILURE\";\r\n\r\n","import * as actionTypes from '../constants/userConstants';\r\n\r\n\r\nconst initialState = {\r\n    // token: null,\r\n    user: {\r\n        _id: '',\r\n        firstName: '',\r\n        lastName: '',\r\n        email: '',\r\n        role: ''\r\n    },\r\n    authenticate: false,\r\n    authenticating: false,\r\n    loading: false,\r\n    error: null,\r\n    message: ''\r\n}\r\n\r\nexport const authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.USER_LOGIN_REQUEST:\r\n            state = {\r\n                ...state,\r\n                authenticating: true\r\n            }\r\n            break;\r\n        case actionTypes.USER_LOGIN_SUCCESS:\r\n            state = {\r\n                // ...state,\r\n                // token: action.payload.token,\r\n                user: action.payload.user,\r\n                authenticate: true,\r\n                authenticating: false\r\n            }\r\n            break;\r\n        case actionTypes.USER_LOGIN_FAIL:\r\n            state = {\r\n                authenticate: false,\r\n                authenticating: false,\r\n                error: action.payload,\r\n            }\r\n            break;\r\n        case actionTypes.USER_LOGOUT_REQUEST:\r\n            state = {\r\n                state: {\r\n                    ...initialState,\r\n                    loading: true\r\n                }\r\n            }\r\n            break;\r\n        case actionTypes.USER_LOGOUT_SUCCESS:\r\n            state = {\r\n                ...initialState,\r\n                loading: false,\r\n                authenticate: false,\r\n                authenticating: false\r\n            }\r\n            break;\r\n        case actionTypes.USER_LOGOUT_FAIL:\r\n            state = {\r\n                authenticate: false,\r\n                authenticating: false,\r\n                loading: false,\r\n                error: action.payload,\r\n            }\r\n            break;\r\n    }\r\n    return state;\r\n}\r\n\r\nconst regInitialState = {\r\n    error: null,\r\n    message: '',\r\n    loading: false\r\n}\r\n\r\nexport const registrationReducer = (state = regInitialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.USER_REGISTRATION_REQUEST:\r\n            state = {\r\n                ...state,\r\n                loading: true\r\n            }\r\n            break;\r\n        case actionTypes.USER_REGISTRATION_SUCCESS:\r\n            state = {\r\n                ...state,\r\n                loading: false,\r\n                message: action.payload\r\n            }\r\n            break;\r\n        case actionTypes.USER_REGISTRATION_FAIL:\r\n            // console.log(action.payload);\r\n            state = {\r\n                loading: false,\r\n                error: action.payload,\r\n            }\r\n            break;\r\n    }\r\n    return state;\r\n}\r\n\r\nconst userDetailsInitialState = {\r\n    address: [],\r\n    orders: [],\r\n    orderDetails: {},\r\n    error: null,\r\n    loading: false,\r\n    orderFetching: false,\r\n    placedOrderId: null,\r\n};\r\n\r\nexport const userDetailsReducer = (state = userDetailsInitialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.GET_USER_ADDRESS_REQUEST:\r\n            state = {\r\n                ...state,\r\n                loading: true,\r\n            };\r\n            break;\r\n        case actionTypes.GET_USER_ADDRESS_SUCCESS:\r\n            state = {\r\n                ...state,\r\n                address: action.payload.address,\r\n                loading: false,\r\n            };\r\n            break;\r\n        case actionTypes.GET_USER_ADDRESS_FAILURE:\r\n            state = {\r\n                ...state,\r\n                loading: false,\r\n                error: action.payload.error,\r\n            };\r\n            break;\r\n        case actionTypes.RESET_ADDRESS_REQUEST:\r\n            state = {\r\n                ...userDetailsInitialState,\r\n                loading: true,\r\n            };\r\n            break;\r\n        case actionTypes.RESET_ADDRESS_SUCCESS:\r\n            state = {\r\n                ...userDetailsInitialState\r\n            };\r\n            break;\r\n        case actionTypes.RESET_ADDRESS_FAILURE:\r\n            state = {\r\n                ...state,\r\n                loading: false,\r\n                error: action.payload.error,\r\n            };\r\n            break;\r\n        case actionTypes.ADD_USER_ADDRESS_REQUEST:\r\n            state = {\r\n                ...state,\r\n                loading: true,\r\n            };\r\n            break;\r\n        case actionTypes.ADD_USER_ADDRESS_SUCCESS:\r\n            state = {\r\n                ...state,\r\n                address: action.payload.address,\r\n                error: '',\r\n                loading: false,\r\n            };\r\n            break;\r\n        case actionTypes.ADD_USER_ADDRESS_FAILURE:\r\n            state = {\r\n                ...state,\r\n                loading: false,\r\n                error: action.payload.fieldErrors,\r\n            };\r\n            break;\r\n        case actionTypes.ADD_USER_ORDER_SUCCESS:\r\n            state = {\r\n                ...state,\r\n                placedOrderId: action.payload._id,\r\n            };\r\n            break;\r\n        case actionTypes.GET_USER_ORDER_REQUEST:\r\n            state = {\r\n                ...state,\r\n                orderFetching: true,\r\n            };\r\n            break;\r\n        case actionTypes.GET_USER_ORDER_SUCCESS:\r\n            state = {\r\n                ...state,\r\n                orders: action.payload.orders,\r\n                orderFetching: false,\r\n            };\r\n            break;\r\n        case actionTypes.GET_USER_ORDER_FAILURE:\r\n            state = {\r\n                ...state,\r\n                error: action.payload.error,\r\n                orderFetching: false,\r\n            };\r\n            break;\r\n        case actionTypes.GET_USER_ORDER_DETAILS_REQUEST:\r\n            break;\r\n        case actionTypes.GET_USER_ORDER_DETAILS_SUCCESS:\r\n            state = {\r\n                ...state,\r\n                orderDetails: action.payload.order,\r\n            };\r\n            break;\r\n        case actionTypes.GET_USER_ORDER_DETAILS_FAILURE:\r\n            break;\r\n    }\r\n\r\n    return state;\r\n};","\r\n\r\nexport const GET_PRODUCTS_REQUEST = \"GET_PRODUCTS_REQUEST\";\r\nexport const GET_PRODUCTS_SUCCESS = \"GET_PRODUCTS_SUCCESS\";\r\nexport const GET_PRODUCTS_FAIL = \"GET_PRODUCTS_FAIL\";\r\n\r\nexport const GET_FILTERED_PRODUCTS_REQUEST = \"GET_FILTERED_PRODUCTS_REQUEST\";\r\nexport const GET_FILTERED_PRODUCTS_SUCCESS = \"GET_FILTERED_PRODUCTS_SUCCESS\";\r\nexport const GET_FILTERED_PRODUCTS_FAIL = \"GET_FILTERED_PRODUCTS_FAIL\";\r\n\r\nexport const GET_PRODUCT_DETAILS_REQUEST = \"GET_PRODUCT_DETAILS_REQUEST\";\r\nexport const GET_PRODUCT_DETAILS_SUCCESS = \"GET_PRODUCT_DETAILS_SUCCESS\";\r\nexport const GET_PRODUCT_DETAILS_FAIL = \"GET_PRODUCT_DETAILS_FAIL\";\r\nexport const GET_PRODUCT_DETAILS_RESET = \"GET_PRODUCT_DETAILS_RESET\";","import { createStore, combineReducers, applyMiddleware } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport thunk from 'redux-thunk';\r\n\r\n// Reducers\r\nimport { cartReducer } from './reducers/cartReducer';\r\nimport { categoryReducer } from './reducers/category.reducer'\r\nimport { authReducer, registrationReducer, userDetailsReducer } from './reducers/user.reducer';\r\nimport { getProductDetailsReducer, getProductsReducer, filteredProductsReducer } from './reducers/productReducers';\r\n\r\nconst reducer = combineReducers({\r\n    auth: authReducer,\r\n    regAuth: registrationReducer,\r\n    cart: cartReducer,\r\n    categories: categoryReducer,\r\n    filteredProducts: filteredProductsReducer,\r\n    getAllProducts: getProductsReducer,\r\n    getProductDetails: getProductDetailsReducer,\r\n    userDetails: userDetailsReducer\r\n})\r\n\r\nconst middleware = [thunk];\r\n\r\nconst cartFromLocalStorage = localStorage.getItem('cart') ? JSON.parse(localStorage.getItem('cart')) : []\r\n\r\nconst INITIAL_STATE = {\r\n    cart: {\r\n        cartItems: cartFromLocalStorage\r\n    }\r\n}\r\n\r\nconst store = createStore(\r\n    reducer,\r\n    INITIAL_STATE,\r\n    composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;\r\n","import * as actionTypes from '../constants/productConstants';\r\n\r\nexport const getProductsReducer = (state = { products: [] }, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.GET_PRODUCTS_REQUEST:\r\n            return {\r\n                loading: true,\r\n                products: []\r\n            }\r\n        case actionTypes.GET_PRODUCTS_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                products: action.payload\r\n            }\r\n        case actionTypes.GET_PRODUCTS_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload,\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const filteredProductsReducer = (state = { products: [] }, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.GET_FILTERED_PRODUCTS_REQUEST:\r\n            return {\r\n                loading: true,\r\n                products: []\r\n            }\r\n        case actionTypes.GET_FILTERED_PRODUCTS_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                products: action.payload\r\n            }\r\n        case actionTypes.GET_FILTERED_PRODUCTS_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload,\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const getProductDetailsReducer = (state = { product: {} }, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.GET_PRODUCT_DETAILS_REQUEST:\r\n            return {\r\n                loading: true\r\n            }\r\n        case actionTypes.GET_PRODUCT_DETAILS_SUCCESS:\r\n            return {\r\n                loading:false,\r\n                product: action.payload\r\n            }\r\n        case actionTypes.GET_PRODUCT_DETAILS_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        case actionTypes.GET_PRODUCT_DETAILS_RESET:\r\n            return {\r\n                product: {}\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n","import * as actionTypes from '../constants/cartConstants';\r\nimport store from '../store';\r\nimport axiosInstance from '../../helpers/axios';\r\n// import axios from 'axios';\r\n\r\nexport const getCartItems = () => {\r\n    return async (dispatch) => {\r\n        // console.log('inside here');\r\n        try {\r\n            dispatch({ type: actionTypes.ADD_TO_DB_CART_REQUEST });\r\n            const res = await axiosInstance.get(`/user/cart`, { withCredentials: true });\r\n            // console.log(res.data);\r\n            if (res.status === 200) {\r\n                const cartItems = res.data;\r\n                // console.log(cartItems);\r\n                if (cartItems) {\r\n                    dispatch({\r\n                        type: actionTypes.ADD_TO_DB_CART_SUCCESS,\r\n                        payload: { cartItems },\r\n                    });\r\n                }\r\n            }\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    };\r\n};\r\n\r\nexport const addToCart = (id, qty) => async (dispatch, getState) => {\r\n\r\n    dispatch({\r\n        type: actionTypes.ADD_TO_CART_REQUEST\r\n    })\r\n\r\n    // console.log('id', id);\r\n    // console.log('qty', qty);\r\n\r\n    const { data } = await axiosInstance.get(`/products/${id}`, { withCredentials: true });\r\n    const appStore = store.getState();\r\n    const auth = appStore.auth;\r\n    // const currentCart = JSON.parse(localStorage.getItem('cart'))\r\n\r\n    if (qty < 1) { qty = 1; }\r\n    const payload = {\r\n        product: data._id,\r\n        category: data.category,\r\n        name: data.name,\r\n        productImage: data.productImage,\r\n        price: data.price,\r\n        measurement: data.measurement,\r\n        description: data.description,\r\n        inStock: data.inStock,\r\n        qty\r\n    }\r\n\r\n    if (auth.authenticate) {\r\n        // try to add to DB\r\n        console.log(\"auth.authenticate is true, building 'sendIt'... \");\r\n        const sendIt = {\r\n            cartItems: [\r\n                {\r\n                    product: payload.product,\r\n                    quantity: payload.qty\r\n                }\r\n            ]\r\n        }\r\n        const res = await axiosInstance.post(`/user/cart/add`, sendIt, { withCredentials: true })\r\n        if (res.status === 201 || res.status === 200) {\r\n            // console.log('add to db cart success', res);\r\n            dispatch(getCartItems());\r\n        } else {\r\n            console.log('add to db cart failed', res);\r\n        }\r\n    } else {\r\n        // add to local storage\r\n        dispatch({\r\n            type: actionTypes.ADD_TO_CART_SUCCESS,\r\n            payload: {\r\n                cartItems: [{\r\n                    quantity: payload.qty,\r\n                    // _id: payload.product,\r\n                    product: {\r\n                        _id: payload.product,\r\n                        category: payload.category,\r\n                        name: payload.name,\r\n                        productImage: payload.productImage,\r\n                        price: payload.price,\r\n                        measurement: payload.measurement,\r\n                        description: payload.description,\r\n                        inStock: payload.inStock,\r\n                    }\r\n                }]\r\n            }\r\n        })\r\n        localStorage.setItem('cart', JSON.stringify(getState().cart.cartItems));\r\n    }\r\n\r\n}\r\n\r\nexport const updateCart = () => async (dispatch, getState) => {\r\n    const { auth } = store.getState();\r\n    let cartItems = localStorage.getItem('cart') ?\r\n        JSON.parse(localStorage.getItem('cart')) :\r\n        null;\r\n    // console.log('some cart items', cartItems);\r\n    if (auth.authenticate) {\r\n        localStorage.removeItem('cart');\r\n        if (cartItems) {\r\n\r\n            const payload = {\r\n                cartItems: Object.keys(cartItems).map((key, index) => {\r\n                    return {\r\n                        product: cartItems[key].product._id,\r\n                        quantity: cartItems[key].quantity\r\n                    }\r\n                })\r\n            }\r\n            if (Object.keys(cartItems).length > 0) {\r\n                // console.log('sending payload:', payload);\r\n                const res = await axiosInstance.post(`/user/cart/add`, payload, { withCredentials: true })\r\n                if (res.status === 201) {\r\n                    dispatch(getCartItems());\r\n                }\r\n            }\r\n        };\r\n    } else {\r\n        if (cartItems) {\r\n            dispatch({\r\n                type: actionTypes.ADD_TO_CART_SUCCESS,\r\n                payload: { cartItems }\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\nexport const removeFromCart = (id) => async (dispatch, getState) => {\r\n    // console.log(id);\r\n\r\n    const appStore = store.getState();\r\n    const auth = appStore.auth;\r\n\r\n    if (auth.authenticate) {\r\n        dispatch({\r\n            type: actionTypes.REMOVE_FROM_DB_CART_REQUEST\r\n        })\r\n        const res = await axiosInstance.get(`/user/remove/item/${id}`, { withCredentials: true })\r\n        if (res.status === 201) {\r\n            // console.log('status is 201');\r\n            dispatch(getCartItems());\r\n        } else {\r\n            console.log('status is not 201');\r\n        }\r\n    } else {\r\n        dispatch({\r\n            type: actionTypes.REMOVE_FROM_CART_REQUEST\r\n        })\r\n        dispatch({\r\n            type: actionTypes.REMOVE_FROM_CART_SUCCESS,\r\n            payload: id\r\n        })\r\n        localStorage.setItem('cart', JSON.stringify(getState().cart.cartItems));\r\n    }\r\n\r\n\r\n\r\n}\r\n\r\n\r\n// export const addToCart = (id, qty) => async (dispatch, getState) => {\r\n\r\n//     const { data } = await axios.get(`/api/products/${id}`);\r\n//     const currentCart = JSON.parse(localStorage.getItem('cart'))\r\n\r\n//     if (qty < 1) { qty = 1; }\r\n\r\n//     dispatch({\r\n//         type: actionTypes.ADD_TO_CART,\r\n//         payload: {\r\n//             product: data._id,\r\n//             category: data.category,\r\n//             name: data.name,\r\n//             productImage: data.productImage,\r\n//             price: data.price,\r\n//             measurement: data.measurement,\r\n//             description: data.description,\r\n//             inStock: data.inStock,\r\n//             qty\r\n//         }\r\n//     })\r\n\r\n//     localStorage.setItem('cart', JSON.stringify(getState().cart.cartItems));\r\n// }","import { useState } from 'react';\r\n\r\n// CSS\r\nimport './ProductCard.css';\r\n\r\n// Routing\r\nimport { Link } from 'react-router-dom';\r\n\r\n// Components\r\nimport { Button } from '../../components/Button/Button'\r\n\r\n// Redux\r\nimport { useDispatch } from 'react-redux';\r\nimport { addToCart } from '../../redux/actions/cartActions';\r\nimport { generatePublicUrl } from '../../urlConfig';\r\n\r\n\r\nconst Product = ({ productId, category, name, productImage, price, measurement, description, inStock }) => {\r\n\r\n    const [qty, setQty] = useState(0);\r\n    const dispatch = useDispatch();\r\n\r\n    const addToCartHandler = () => {\r\n        if (qty < 1) {\r\n            setQty(1);\r\n        }\r\n        dispatch(addToCart(productId, qty));\r\n    }\r\n\r\n    return (\r\n        <div className=\"product\">\r\n            <img src={generatePublicUrl(productImage)} alt={name} />\r\n            <div className=\"product-info\">\r\n                <h1\r\n                    style={{\r\n                        textAlign: 'center',\r\n                        marginBottom: '15px',\r\n                        padding: '15px 2px',\r\n                        borderRadius: '4px'\r\n                    }}\r\n                    className=\"info-name\"\r\n                >{name}\r\n                </h1>\r\n                {/* <p className=\"info-description\">{description}</p> */}\r\n                <div\r\n                    style={{\r\n                        display: 'flex',\r\n                        justifyContent: 'space-between',\r\n                        margin: '0px 0px 0px 0px'\r\n                    }}\r\n                    className=\"info-price\"\r\n                >\r\n                    <p>\r\n                        ${price.toFixed(2)} / {measurement}\r\n                    </p>\r\n                    <p>\r\n                        {inStock ? \" In Stock.\" : \" Out Of Stock.\"}\r\n                    </p>\r\n                </div>\r\n                <p className=\"add-to-cart-quantity\">\r\n                    <label htmlFor=\"quantity\">Quantity: </label>\r\n                    <input\r\n                        min=\"0\"\r\n                        type=\"number\"\r\n                        name=\"quantity\"\r\n                        onChange={(e) => e.target.value < 0 ? setQty(0) : setQty(e.target.value)}\r\n                        value={qty}\r\n                    />\r\n                </p>\r\n                <p className=\"add-to-cart-button\">\r\n                    {\r\n                        inStock\r\n                            ? <Button buttonSize=\"btn--sm\" onClick={addToCartHandler}>Add To Cart</Button>\r\n                            : <Button buttonSize=\"btn--sm\" buttonStyle='btn-disabled'>Add To Cart</Button>\r\n                    }\r\n\r\n                </p>\r\n                <Link to={`/product/${productId}`} className=\"info-button btn--primary btn--sm\">View</Link>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Product;","import { useState } from 'react';\r\n\r\n// CSS\r\nimport './ProductSection.css';\r\n\r\n// Components\r\nimport Product from '../ProductCard/ProductCard';\r\n\r\nconst ProductSection = ({ products, loading, error, sectionImg, imageAlt, filterOne, filterTwo, filterThree }) => {\r\n\r\n    const [show, setShow] = useState(false);\r\n\r\n    const handleShow = () => {\r\n        setShow(!show);\r\n    }\r\n\r\n    return (\r\n        <div className=\"product-section\">\r\n            <div className=\"sectionImg\">\r\n                <img onClick={handleShow} src={sectionImg} alt={imageAlt} />\r\n            </div>\r\n            <div className={show ? \"our-products-screen-products show\" : \"our-products-screen-products\"}>\r\n                {\r\n                    loading ? (\r\n                        <h2>Loading...</h2>\r\n                    ) : error ? (\r\n                        <h2>{error}</h2>\r\n                    ) :\r\n                        products.products\r\n                            ? products.products.map((product, idx) =>\r\n                                product.category.name === filterOne\r\n                                    || product.category.name === filterTwo\r\n                                    || product.category.name === filterThree\r\n                                    ? <Product key={idx}\r\n                                        productId={product._id}\r\n                                        category={product.category._id}\r\n                                        name={product.name}\r\n                                        productImage={product.productImage}\r\n                                        price={product.price}\r\n                                        measurement={product.measurement}\r\n                                        description={product.description}\r\n                                        inStock={product.inStock}\r\n                                    />\r\n                                    : null\r\n                            )\r\n                            : null\r\n                }\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ProductSection;","import * as actionTypes from '../constants/productConstants';\r\nimport axiosInstance from '../../helpers/axios';\r\n// import axios from 'axios';\r\n\r\n\r\nexport const getAllProducts = () => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: actionTypes.GET_PRODUCTS_REQUEST });\r\n\r\n        const res = await axiosInstance.get(`/categories/products`);\r\n\r\n        if (res.status === 200) {\r\n            dispatch({\r\n                type: actionTypes.GET_PRODUCTS_SUCCESS,\r\n                payload: res.data\r\n            })\r\n        }\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: actionTypes.GET_PRODUCTS_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message\r\n        });\r\n    };\r\n};\r\n\r\nexport const getProductsByCat = (name) => {\r\n    return async (dispatch) => {\r\n        \r\n        dispatch({\r\n            type: actionTypes.GET_FILTERED_PRODUCTS_REQUEST\r\n        })\r\n\r\n        const res = await axiosInstance.get(`/category/products/${name}`);\r\n        if (res.status === 200) {\r\n            dispatch({\r\n                type: actionTypes.GET_FILTERED_PRODUCTS_SUCCESS,\r\n                payload: res.data\r\n            })\r\n        } else {\r\n            dispatch({\r\n                type: actionTypes.GET_FILTERED_PRODUCTS_FAIL,\r\n                payload: {error: res.data.error}\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport const getProductDetails = (id) => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: actionTypes.GET_PRODUCT_DETAILS_REQUEST });\r\n\r\n        const { data } = await axiosInstance.get(`/products/${id}`);\r\n\r\n        dispatch({\r\n            type: actionTypes.GET_PRODUCT_DETAILS_SUCCESS,\r\n            payload: data\r\n        });\r\n    } catch (error) {\r\n        dispatch({\r\n            type: actionTypes.GET_PRODUCT_DETAILS_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message\r\n        });\r\n    }\r\n};\r\n\r\nexport const removeProductDetails = () => (dispatch) => {\r\n    dispatch({\r\n        type: actionTypes.GET_PRODUCT_DETAILS_RESET\r\n    });\r\n};","import './OurProductsScreen.css';\r\nimport { useEffect } from 'react';\r\n\r\n// Components\r\nimport CategoryMenu from '../../components/CategoryMenu/CategoryMenu';\r\nimport ProductSection from '../../components/ProductSection/ProductSection';\r\n\r\n// Redux\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { getAllProducts as listProducts } from '../../redux/actions/productActions';\r\nimport { getAllCategories as listCategories } from '../../redux/actions/category.actions';\r\n\r\nconst OurProductsScreen = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const getAllProducts = useSelector((state) => state.getAllProducts);\r\n    const { products, loading, error } = getAllProducts;\r\n\r\n    // const getAllCategories = useSelector((state) => state.categories);\r\n    // const { categoryList } = getAllCategories;\r\n    // console.log(categoryList);\r\n\r\n    useEffect(() => {\r\n        dispatch(listProducts())\r\n        dispatch(listCategories())\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            <CategoryMenu />\r\n            <div className=\"our-products-screen\">\r\n                <ProductSection\r\n                    filterOne={'Milk'}\r\n                    filterTwo={\"Cheese\"}\r\n                    filterThree={\"Eggs\"}\r\n                    sectionImg={require('../../img/dairy-eggs-logo.png').default}\r\n                    imageAlt={'dairy-eggs-logo'}\r\n                    products={products}\r\n                    loading={loading}\r\n                    error={error}\r\n                />\r\n                <ProductSection\r\n                    filterOne={'Beef'}\r\n                    sectionImg={require('../../img/beef-logo.png').default}\r\n                    imageAlt={'beef-logo'}\r\n                    products={products}\r\n                    loading={loading}\r\n                    error={error}\r\n                />\r\n                <ProductSection\r\n                    filterOne={'Pork'}\r\n                    sectionImg={require('../../img/pork-logo.png').default}\r\n                    imageAlt={'pork-logo'}\r\n                    products={products}\r\n                    loading={loading}\r\n                    error={error}\r\n                />\r\n                <ProductSection\r\n                    filterOne={'Chicken'}\r\n                    filterTwo={\"Turkey\"}\r\n                    sectionImg={require('../../img/poultry-logo.png').default}\r\n                    imageAlt={'poultry-logo'}\r\n                    products={products}\r\n                    loading={loading}\r\n                    error={error}\r\n                />\r\n                <ProductSection\r\n                    filterOne={'Lamb'}\r\n                    sectionImg={require('../../img/lamb-logo.png').default}\r\n                    imageAlt={'lamb-logo'}\r\n                    products={products}\r\n                    loading={loading}\r\n                    error={error}\r\n                />\r\n                <ProductSection\r\n                    filterOne={'Goat'}\r\n                    sectionImg={require('../../img/goat-logo.png').default}\r\n                    imageAlt={'goat-logo'}\r\n                    products={products}\r\n                    loading={loading}\r\n                    error={error}\r\n                />\r\n                <ProductSection\r\n                    filterOne={'Raw Honey'}\r\n                    filterTwo={\"Creamed Honey\"}\r\n                    sectionImg={require('../../img/honey-logo.png').default}\r\n                    imageAlt={'honey-logo'}\r\n                    products={products}\r\n                    loading={loading}\r\n                    error={error}\r\n                />\r\n                <ProductSection\r\n                    filterOne={'Packs'}\r\n                    sectionImg={require('../../img/express-packs-logo.png').default}\r\n                    imageAlt={'express-packs-logo'}\r\n                    products={products}\r\n                    loading={loading}\r\n                    error={error}\r\n                />\r\n\r\n            </div>\r\n        </>\r\n    )\r\n}\r\nexport default OurProductsScreen;\r\n","import * as actionTypes from '../constants/userConstants';\r\nimport * as cartActionTypes from '../constants/cartConstants';\r\nimport axiosInstance from '../../helpers/axios';\r\n// import axios from 'axios';\r\n\r\n\r\nexport const register = (user) => {\r\n    return async (dispatch) => {\r\n\r\n        dispatch({\r\n            type: actionTypes.USER_REGISTRATION_REQUEST,\r\n            payload: {\r\n                ...user\r\n            }\r\n        });\r\n\r\n        await axiosInstance.post(`/users/register`, { ...user }, { withCredentials: true })\r\n            .then(res => {\r\n                // console.log(res.data);\r\n                if (res.data.message) {\r\n                    const { message } = res.data;\r\n                    // console.log(message);\r\n                    dispatch({\r\n                        type: actionTypes.USER_REGISTRATION_SUCCESS,\r\n                        payload: {\r\n                            message\r\n                        }\r\n                    })\r\n                } else {\r\n                    // console.log(\"number 1\");\r\n                    dispatch({\r\n                        type: actionTypes.USER_REGISTRATION_FAIL,\r\n                        payload: {\r\n                            error: res.data\r\n                        }\r\n                    })\r\n                }\r\n            })\r\n            .catch(err => {\r\n                // console.log(\"number 2\");\r\n                // if (err) {\r\n                //     console.log(err.response);\r\n                // }\r\n                dispatch({\r\n                    type: actionTypes.USER_REGISTRATION_FAIL,\r\n                    payload: {\r\n                        error: err.response.data.error\r\n                    }\r\n                })\r\n            })\r\n    }\r\n}\r\n\r\n\r\nexport const login = (user) => {\r\n    return async (dispatch) => {\r\n\r\n        dispatch({\r\n            type: actionTypes.USER_LOGIN_REQUEST,\r\n            payload: {\r\n                ...user\r\n            }\r\n        });\r\n\r\n        await axiosInstance.post(`/users/login`, { ...user }, { withCredentials: true })\r\n            .then(res => {\r\n                // console.log(res.data);\r\n                if (res.data.message) {\r\n                    const { user } = res.data;\r\n                    // localStorage.setItem('token', token);\r\n                    localStorage.setItem('user', JSON.stringify(user));\r\n                    dispatch({\r\n                        type: actionTypes.USER_LOGIN_SUCCESS,\r\n                        payload: {\r\n                            user\r\n                        }\r\n                    })\r\n                } else {\r\n                    // console.log('inside the else');\r\n                    // console.log(res.data);\r\n                    dispatch({\r\n                        type: actionTypes.USER_LOGIN_FAIL,\r\n                        payload: res.data\r\n                    })\r\n                }\r\n            })\r\n            .catch(err => {\r\n                // console.log('.catch');\r\n                // console.log(err.response.data);\r\n                dispatch({\r\n                    type: actionTypes.USER_LOGIN_FAIL,\r\n                    payload: err.response.data\r\n                })\r\n            })\r\n    }\r\n}\r\n\r\nexport const isUserLoggedIn = () => {\r\n    return async (dispatch) => {\r\n        const user = JSON.parse(localStorage.getItem('user'));\r\n        if (user) {\r\n            dispatch({\r\n                type: actionTypes.USER_LOGIN_SUCCESS,\r\n                payload: {\r\n                    user\r\n                }\r\n            })\r\n        }\r\n\r\n        // const token = localStorage.getItem('token');\r\n        // if (token) {\r\n        //     const user = JSON.parse(localStorage.getItem('user'));\r\n        //     dispatch({\r\n        //         type: actionTypes.USER_LOGIN_SUCCESS,\r\n        //         payload: {\r\n        //             token, user\r\n        //         }\r\n        //     })\r\n        // }\r\n        // else {\r\n        //     dispatch({\r\n        //         type: actionTypes.ADMIN_LOGIN_FAIL,\r\n        //         payload: {\r\n        //             error: 'Failed to login.' \r\n        //         }\r\n        //     })\r\n        // }\r\n    }\r\n}\r\n\r\nexport const logout = () => {\r\n    return async (dispatch) => {\r\n\r\n        dispatch({\r\n            type: actionTypes.USER_LOGOUT_REQUEST\r\n        });\r\n\r\n        // const token = localStorage.getItem('token');\r\n\r\n        await axiosInstance.get(`/users/logout`, { withCredentials: true })\r\n            .then(res => {\r\n                if (res.status === 200) {\r\n                    // console.log(\"success\");\r\n                    localStorage.clear();\r\n                    dispatch({\r\n                        type: actionTypes.USER_LOGOUT_SUCCESS\r\n                    });\r\n                    dispatch({\r\n                        type: cartActionTypes.CART_RESET_SUCCESS\r\n                    });\r\n                    dispatch({\r\n                        type: actionTypes.RESET_ADDRESS_REQUEST\r\n                    })\r\n                    dispatch({\r\n                        type: actionTypes.RESET_ADDRESS_SUCCESS\r\n                    })\r\n                } else {\r\n                    console.log('logout fail in else');\r\n                    dispatch({\r\n                        type: actionTypes.USER_LOGOUT_FAIL,\r\n                        payload: res.data.error\r\n                    });\r\n                }\r\n            })\r\n            .catch(err => {\r\n                // console.log(err.response.data);\r\n                // console.log('logout fail in catch');\r\n                localStorage.clear();\r\n                dispatch({\r\n                    type: actionTypes.USER_LOGOUT_FAIL,\r\n                    payload: err.response.data\r\n                })\r\n            })\r\n    }\r\n}\r\n\r\nexport const getAddress = () => {\r\n    return async (dispatch) => {\r\n        try {\r\n            const res = await axiosInstance.get(`/address/get`, { withCredentials: true });\r\n            dispatch({ type: actionTypes.GET_USER_ADDRESS_REQUEST });\r\n            if (res.status === 200) {\r\n                const {\r\n                    userAddress: { address },\r\n                } = res.data;\r\n                dispatch({\r\n                    type: actionTypes.GET_USER_ADDRESS_SUCCESS,\r\n                    payload: { address },\r\n                });\r\n            } else {\r\n                const { error } = res.data;\r\n                dispatch({\r\n                    type: actionTypes.GET_USER_ADDRESS_FAILURE,\r\n                    payload: { error },\r\n                });\r\n            }\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    };\r\n};\r\n\r\nexport const addAddress = (payload) => {\r\n    return async (dispatch) => {\r\n        try {\r\n            dispatch({ type: actionTypes.ADD_USER_ADDRESS_REQUEST });\r\n            const res = await axiosInstance.post(`/address/create`, { payload }, { withCredentials: true });\r\n            if (res.status === 201) {\r\n                // console.log(res);\r\n                const {\r\n                    address: { address },\r\n                } = res.data;\r\n                dispatch({\r\n                    type: actionTypes.ADD_USER_ADDRESS_SUCCESS,\r\n                    payload: { address },\r\n                });\r\n            } else {\r\n                const { error } = res.data;\r\n                dispatch({\r\n                    type: actionTypes.ADD_USER_ADDRESS_FAILURE,\r\n                    payload: { error },\r\n                });\r\n            }\r\n        } catch (error) {\r\n            // console.log('1', error.response);\r\n            // console.log('2', error.response.data.error.errors);\r\n            // console.log('3', Object.entries(error.response.data.error.errors));\r\n            // console.log(error.response.data.error.errors.address.errors);\r\n\r\n            if (error.response.data.error.errors.address) {\r\n                const fieldErrors = error.response.data.error.errors.address.errors;\r\n                dispatch({\r\n                    type: actionTypes.ADD_USER_ADDRESS_FAILURE,\r\n                    payload: { fieldErrors },\r\n                });\r\n                // console.log('fieldErrors in if', fieldErrors);\r\n            } else {\r\n                var fieldErrors = {};\r\n                const errorArray = Object.entries(error.response.data.error.errors);\r\n\r\n                for (const array of errorArray) {\r\n\r\n                    const keyName = array[0].substring('address.0.'.length)\r\n                    array.splice(0, 1, keyName);\r\n\r\n                    const errorVal = array[1];\r\n\r\n                    if (keyName === 'name') {\r\n                        fieldErrors.name = errorVal;\r\n                    } else if (keyName === 'mobileNumber') {\r\n                        fieldErrors.mobileNumber = errorVal;\r\n                    } else if (keyName === 'zipCode') {\r\n                        fieldErrors.zipCode = errorVal;\r\n                    } else if (keyName === 'streetOne') {\r\n                        fieldErrors.streetOne = errorVal;\r\n                    } else if (keyName === 'city') {\r\n                        fieldErrors.city = errorVal;\r\n                    } else if (keyName === 'state') {\r\n                        fieldErrors.state = errorVal;\r\n                    } else if (keyName === 'addressType') {\r\n                        fieldErrors.addressType = errorVal;\r\n                    }\r\n                }\r\n                // console.log('fieldErrors in else', fieldErrors);\r\n\r\n                dispatch({\r\n                    type: actionTypes.ADD_USER_ADDRESS_FAILURE,\r\n                    payload: { fieldErrors },\r\n                });\r\n            }\r\n        }\r\n    };\r\n};\r\n\r\nexport const addOrder = (payload) => {\r\n    return async (dispatch) => {\r\n        try {\r\n            const res = await axiosInstance.post(`/orders/add`, payload, { withCredentials: true });\r\n            // console.log('res in addOrder from actions', res);\r\n            dispatch({ type: actionTypes.ADD_USER_ORDER_REQUEST });\r\n            if (res.status === 201) {\r\n                const data = res.data;\r\n                // console.log('data', data);\r\n                dispatch({\r\n                    type: cartActionTypes.CART_RESET_SUCCESS,\r\n                });\r\n                dispatch({\r\n                    type: actionTypes.ADD_USER_ORDER_SUCCESS,\r\n                    payload: data\r\n                });\r\n\r\n            } else {\r\n                const { error } = res.data;\r\n                dispatch({\r\n                    type: actionTypes.ADD_USER_ORDER_FAILURE,\r\n                    payload: { error },\r\n                });\r\n            }\r\n        } catch (error) {\r\n            console.log(error.response);\r\n        }\r\n    };\r\n}\r\n\r\nexport const getOrders = () => {\r\n    return async (dispatch) => {\r\n        try {\r\n            const res = await axiosInstance.get(`/orders/getOrders`, { withCredentials: true });\r\n            dispatch({ type: actionTypes.GET_USER_ORDER_REQUEST });\r\n            if (res.status === 200) {\r\n                // console.log(res.data);\r\n                const { orders } = res.data;\r\n                // console.log('orders in getOrders', orders);\r\n                dispatch({\r\n                    type: actionTypes.GET_USER_ORDER_SUCCESS,\r\n                    payload: { orders },\r\n                });\r\n            } else {\r\n                const { error } = res.data;\r\n                dispatch({\r\n                    type: actionTypes.GET_USER_ORDER_FAILURE,\r\n                    payload: { error },\r\n                });\r\n            }\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n}\r\n\r\nexport const getOrder = () => {\r\n    return async (dispatch) => {\r\n        try {\r\n            const res = await axiosInstance.get(`/orders/getOrder`, { withCredentials: true });\r\n            dispatch({ type: actionTypes.GET_USER_ORDER_DETAILS_REQUEST });\r\n            if (res.status === 200) {\r\n                console.log(res);\r\n                const { order } = res.data;\r\n                dispatch({\r\n                    type: actionTypes.GET_USER_ORDER_DETAILS_SUCCESS,\r\n                    payload: { order },\r\n                });\r\n            } else {\r\n                const { error } = res.data;\r\n                dispatch({\r\n                    type: actionTypes.GET_USER_ORDER_DETAILS_FAILURE,\r\n                    payload: { error },\r\n                });\r\n            }\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    };\r\n};\r\n// export const getOrder = (payload) => {\r\n//     return async (dispatch) => {\r\n//         try {\r\n//             const res = await axios.get(`/api/orders/getOrder`, payload);\r\n//             dispatch({ type: actionTypes.GET_USER_ORDER_DETAILS_REQUEST });\r\n//             if (res.status === 200) {\r\n//                 console.log(res);\r\n//                 const { order } = res.data;\r\n//                 dispatch({\r\n//                     type: actionTypes.GET_USER_ORDER_DETAILS_SUCCESS,\r\n//                     payload: { order },\r\n//                 });\r\n//             } else {\r\n//                 const { error } = res.data;\r\n//                 dispatch({\r\n//                     type: actionTypes.GET_USER_ORDER_DETAILS_FAILURE,\r\n//                     payload: { error },\r\n//                 });\r\n//             }\r\n//         } catch (error) {\r\n//             console.log(error);\r\n//         }\r\n//     };\r\n// };\r\n","import { Form } from 'react-bootstrap';\r\n\r\n\r\n/**\r\n * @author\r\n * @function InputDefault\r\n */\r\n\r\nconst InputDefault = (props) => {\r\n    return (\r\n        <>\r\n            <Form.Label style={{marginLeft: '2px'}}>{props.label}</Form.Label>\r\n            <Form.Control\r\n                type={props.type}\r\n                name={props.name}\r\n                placeholder={props.placeholder}\r\n                value={props.value}\r\n                onChange={props.onChange}\r\n            />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default InputDefault;\r\n\r\n\r\n//  controlId: formBasic{field-type-here} / formGridText{field-type-here}","\r\nimport React, { useEffect, useState } from 'react';\r\n\r\n// Bootstrap Components\r\nimport { Container, Col, Row, Form, Button, Modal } from 'react-bootstrap';\r\n\r\n// Components\r\n// import Layout from '../../components/Layout/Layout';\r\nimport InputDefault from '../../components/UI/Inputs/InputDefault';\r\n\r\n// Redux\r\nimport { register } from '../../redux/actions/userAuth.actions';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nconst RegistrationModal = (props) => {\r\n\r\n    const {\r\n        show,\r\n        size,\r\n        onHide,\r\n        handleClose\r\n    } = props;\r\n\r\n    // const auth = useSelector(state => state.auth);\r\n    const regAuth = useSelector(state => state.regAuth);\r\n    const dispatch = useDispatch();\r\n\r\n    const initialReg = {\r\n        firstName: \"\",\r\n        lastName: \"\",\r\n        email: \"\",\r\n        password: \"\",\r\n        confirmPassword: \"\",\r\n        contactNumber: \"\",\r\n        // street1: \"\",\r\n        // street2: \"\",\r\n        // city: \"\",\r\n        // addressState: \"\",\r\n        // zip: \"\",\r\n    }\r\n    const [reg, setReg] = useState(initialReg);\r\n    const [regError, setRegError] = useState(initialReg);\r\n\r\n    const handleRegInputs = (e) => {\r\n        setReg({\r\n            ...reg,\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n    const handleRegistration = (e) => {\r\n        e.preventDefault();\r\n        const user = {\r\n            firstName: reg.firstName,\r\n            lastName: reg.lastName,\r\n            email: reg.email,\r\n            password: reg.password,\r\n            confirmPassword: reg.confirmPassword,\r\n            contactNumber: reg.contactNumber,\r\n            // street1: reg.street1,\r\n            // street2: reg.street2,\r\n            // city: reg.city,\r\n            // addressState: reg.addressState,\r\n            // zip: reg.zip\r\n        }\r\n        dispatch(register(user))\r\n        setReg(initialReg);\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (regAuth.error) {\r\n            if (typeof (regAuth.error.error) !== 'string') {\r\n                // console.log(regAuth.error.error);\r\n                // console.log(typeof (regAuth.error.error));\r\n                setRegError({\r\n                    firstName: regAuth.error.error.firstName,\r\n                    lastName: regAuth.error.error.lastName,\r\n                    email: regAuth.error.error.email,\r\n                    password: regAuth.error.error.password,\r\n                    confirmPassword: regAuth.error.error.confirmPassword,\r\n                    contactNumber: regAuth.error.error.contactNumber,\r\n                })\r\n            } else {\r\n                // console.log(regAuth.error.error);\r\n                // console.log(typeof (regAuth.error.error));\r\n                setRegError({\r\n                    errorMessage: regAuth.error.error\r\n                })\r\n            }\r\n\r\n        }\r\n    }, [regAuth])\r\n\r\n    if (regAuth.loading) {\r\n        return <p>Loading...</p>\r\n    }\r\n\r\n    return (\r\n        <Modal\r\n            show={show}\r\n            size={size}\r\n            aria-labelledby=\"contained-modal-title-vcenter\"\r\n            centered\r\n            onHide={onHide}\r\n        >\r\n            <Modal.Header >\r\n                <Modal.Title>New User</Modal.Title>\r\n                <Button className=\"btn btn--primary btn--med sign-up-btn\" onClick={handleClose}>\r\n                    Close\r\n                </Button>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <Container>\r\n                    <Row >\r\n                        <Col>\r\n                            <Form onSubmit={handleRegistration}>\r\n                                <Row style={{ marginBottom: '20px' }}>\r\n                                    <Form.Group style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n                                        <Form.Text className=\"text-danger font-weight-bold\">\r\n                                            {regError.errorMessage ? regError.errorMessage : \"\"}\r\n                                        </Form.Text>\r\n                                    </Form.Group>\r\n                                </Row>\r\n                                <Row style={{ marginBottom: '20px' }}>\r\n                                    <Col md={6}>\r\n                                        <Form.Group controlId=\"formBasicFirst\">\r\n                                            <InputDefault\r\n                                                name=\"firstName\"\r\n                                                label=\"First Name\"\r\n                                                type=\"text\"\r\n                                                placeholder=\"First Name\"\r\n                                                value={reg.firstName}\r\n                                                onChange={handleRegInputs}\r\n                                            />\r\n                                            <Form.Text className=\"text-danger font-weight-bold\">\r\n                                                {regError.firstName ? regError.firstName.message : \"\"}\r\n                                            </Form.Text>\r\n                                        </Form.Group>\r\n                                    </Col>\r\n                                    <Col md={6}>\r\n                                        <Form.Group controlId=\"formBasicLast\">\r\n                                            <InputDefault\r\n                                                name=\"lastName\"\r\n                                                label=\"Last Name\"\r\n                                                type=\"text\"\r\n                                                placeholder=\"Last Name\"\r\n                                                value={reg.lastName}\r\n                                                onChange={handleRegInputs}\r\n                                            />\r\n                                            <Form.Text className=\"text-danger font-weight-bold\">\r\n                                                {regError.lastName ? regError.lastName.message : \"\"}\r\n                                            </Form.Text>\r\n                                        </Form.Group>\r\n                                    </Col>\r\n                                </Row>\r\n                                <Row style={{ marginBottom: '20px' }}>\r\n                                    <Form.Group as={Col} controlId=\"formBasicEmail\">\r\n                                        <InputDefault\r\n                                            name=\"email\"\r\n                                            label=\"Email Address\"\r\n                                            type=\"email\"\r\n                                            placeholder=\"Email Address\"\r\n                                            value={reg.email}\r\n                                            onChange={handleRegInputs}\r\n                                        />\r\n                                        <Form.Text className=\"text-danger font-weight-bold\">\r\n                                            {regError.email ? regError.email.message : \"\"}\r\n                                        </Form.Text>\r\n                                    </Form.Group>\r\n                                    <Form.Group as={Col} controlId=\"formBasicContactNum\">\r\n                                        <InputDefault\r\n                                            name=\"contactNumber\"\r\n                                            label=\"Contact Phone Number\"\r\n                                            type=\"text\"\r\n                                            placeholder=\"555-555-5555\"\r\n                                            value={reg.contactNumber}\r\n                                            onChange={handleRegInputs}\r\n                                        />\r\n                                        <Form.Text className=\"text-danger font-weight-bold\">\r\n                                            {regError.contactNumber ? regError.contactNumber.message : \"\"}\r\n                                        </Form.Text>\r\n                                    </Form.Group>\r\n                                </Row>\r\n\r\n                                <Row style={{ marginBottom: '20px' }}>\r\n                                    <Form.Group as={Col} controlId=\"formGridPass\">\r\n                                        <InputDefault\r\n                                            name=\"password\"\r\n                                            label=\"Password\"\r\n                                            type=\"password\"\r\n                                            placeholder=\"Password\"\r\n                                            value={reg.password}\r\n                                            onChange={handleRegInputs}\r\n                                        />\r\n                                        <Form.Text className=\"text-danger font-weight-bold\">\r\n                                            {regError.password ? regError.password.message : \"\"}\r\n                                        </Form.Text>\r\n                                    </Form.Group>\r\n                                    <Form.Group as={Col} controlId=\"formGridCPass\">\r\n                                        <InputDefault\r\n                                            name=\"confirmPassword\"\r\n                                            label=\"Confirm Password\"\r\n                                            type=\"password\"\r\n                                            placeholder=\"Confirm Password\"\r\n                                            value={reg.confirmPassword}\r\n                                            onChange={handleRegInputs}\r\n                                        />\r\n                                        <Form.Text className=\"text-danger font-weight-bold\">\r\n                                            {regError.confirmPassword ? regError.confirmPassword.message : \"\"}\r\n                                        </Form.Text>\r\n                                    </Form.Group>\r\n                                </Row>\r\n\r\n                                <Form.Group style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n                                    <Button onClick={handleClose} className=\"btn btn--primary btn--med sign-up-btn\" type=\"submit\">\r\n                                        Submit\r\n                                    </Button>\r\n\r\n                                </Form.Group>\r\n\r\n                            </Form>\r\n                        </Col>\r\n                    </Row>\r\n\r\n                </Container>\r\n            </Modal.Body>\r\n        </Modal>\r\n    );\r\n};\r\n\r\nexport default RegistrationModal;","import React, { useState, useEffect } from 'react';\r\n\r\n// Bootstrap Components\r\nimport { Container, Row, Form, Col, Button, Modal } from 'react-bootstrap';\r\n\r\n// Components\r\nimport InputDefault from '../../components/UI/Inputs/InputDefault';\r\n\r\n// Redux\r\nimport { login } from '../../redux/actions/userAuth.actions'\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nconst LoginModal = (props) => {\r\n\r\n    const {\r\n        show,\r\n        size,\r\n        onHide,\r\n        handleClose\r\n    } = props;\r\n\r\n    const auth = useSelector(state => state.auth);\r\n    const dispatch = useDispatch();\r\n\r\n    const initialLog = {\r\n        email: '',\r\n        password: ''\r\n    }\r\n    const [log, setLog] = useState(initialLog);\r\n    const [logError, setLogError] = useState('');\r\n\r\n    const handleLogInputs = (e) => {\r\n        setLog({\r\n            ...log,\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n    const userLogin = (e) => {\r\n        e.preventDefault();\r\n        const user = {\r\n            email: log.email,\r\n            password: log.password\r\n        }\r\n        dispatch(login(user))\r\n        setLog(initialLog);\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (auth.error) {\r\n            if (auth.error.message) {\r\n                // console.log(\"auth.error.message\");\r\n                // console.log(auth.error);\r\n                // console.log(auth.error.message);\r\n                setLogError({\r\n                    message: auth.error.message\r\n                })\r\n            } else {\r\n                // console.log(\"auth.error.error\");\r\n                // console.log(auth.error);\r\n                // console.log(auth.error.error);\r\n                setLogError({\r\n                    error: auth.error.error\r\n                })\r\n            }\r\n        } else {\r\n            setLogError(\"\")\r\n        }\r\n    }, [auth.error])\r\n\r\n    return (\r\n        <Modal\r\n            show={show}\r\n            size={size}\r\n            aria-labelledby=\"contained-modal-title-vcenter\"\r\n            centered\r\n            onHide={onHide}\r\n        >\r\n            <Modal.Header >\r\n                <Modal.Title>Login</Modal.Title>\r\n                <Button className=\"btn btn--primary btn--med sign-up-btn\" onClick={handleClose}>\r\n                    Close\r\n                </Button>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <Container>\r\n                    <Row>\r\n                        <Col>\r\n                            <Form >\r\n\r\n                                <Form.Group style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n                                    <Form.Text className=\"text-danger font-weight-bold\">\r\n                                        {\r\n                                            logError\r\n                                                ? logError.error\r\n                                                    ? logError.error\r\n                                                    : logError.message\r\n                                                : \"\"\r\n                                        }\r\n                                    </Form.Text>\r\n                                </Form.Group>\r\n                                <Row>\r\n                                    <Form.Group as={Col} controlId=\"formBasicEmail\">\r\n                                        <InputDefault\r\n                                            name=\"email\"\r\n                                            label=\"Email Address\"\r\n                                            type=\"email\"\r\n                                            placeholder=\"Email Address\"\r\n                                            value={log.email}\r\n                                            onChange={handleLogInputs}\r\n                                        />\r\n                                        {/* \r\n                                        <Form.Text className=\"text-muted\">\r\n                                            {error.email ? error.email.message : \"\"}\r\n                                        </Form.Text> \r\n                                    */}\r\n                                    </Form.Group>\r\n                                </Row>\r\n                                <Row style={{marginTop: '10px'}}>\r\n                                    <Form.Group as={Col} controlId=\"formGridPass\">\r\n                                        <InputDefault\r\n                                            name=\"password\"\r\n                                            label=\"Password\"\r\n                                            type=\"password\"\r\n                                            placeholder=\"Password\"\r\n                                            value={log.password}\r\n                                            onChange={handleLogInputs}\r\n                                        />\r\n                                    </Form.Group>\r\n                                </Row>\r\n\r\n                                <Form.Group style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n                                    <Button style={{ marginTop: '10px' }} onClick={userLogin} className=\"btn btn--primary btn--med sign-up-btn\" type=\"submit\">\r\n                                        Submit\r\n                                    </Button>\r\n\r\n                                </Form.Group>\r\n                            </Form>\r\n                        </Col>\r\n                    </Row>\r\n\r\n                </Container>\r\n            </Modal.Body>\r\n        </Modal>\r\n    );\r\n};\r\n\r\nexport default LoginModal;","import \"./Card.css\";\r\n\r\n\r\nconst Card = (props) => {\r\n    return (\r\n        <div className=\"card\" {...props}>\r\n            {(props.headerLeft || props.headerRight) && (\r\n                <div className=\"cardHeader\">\r\n                    {props.headerLeft && (\r\n                        <div\r\n                            style={{\r\n                                alignSelf: \"center\",\r\n                                fontSize: \"20px\",\r\n                                fontWeight: \"500\",\r\n                            }}\r\n                        >\r\n                            {props.headerLeft}\r\n                        </div>\r\n                    )}\r\n                    {props.headerRight && props.headerRight}\r\n                </div>\r\n            )}\r\n\r\n            {props.children}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Card;","import React, { useEffect } from 'react';\r\nimport { useState } from 'react';\r\nimport { Col, Container, Form, Row } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Button } from '../../components/Button/Button';\r\nimport InputDefault from '../../components/UI/Inputs/InputDefault';\r\nimport { addAddress, getAddress } from '../../redux/actions/userAuth.actions';\r\n\r\nconst AddressForm = (props) => {\r\n\r\n    const { initialData } = props;\r\n\r\n    const initialAddress = {\r\n        name: '',\r\n        mobileNumber: '',\r\n        zipCode: '',\r\n        streetOne: '',\r\n        streetTwo: '',\r\n        city: '',\r\n        state: '',\r\n        alternatePhone: '',\r\n        addressType: '',\r\n    }\r\n\r\n    const [address, setAddress] = useState(initialData ? initialData : initialAddress);\r\n    const [addressError, setAddressError] = useState(initialAddress);\r\n\r\n\r\n    const dispatch = useDispatch();\r\n    const user = useSelector((state) => state.userDetails);\r\n    const [submitFlag, setSubmitFlag] = useState(false);\r\n    const [id, setId] = useState(initialData ? initialData._id : '');\r\n\r\n    useEffect(() => {\r\n        if (user.error) {\r\n            // console.log(user.error);\r\n            setAddressError({\r\n                name: user.error.name,\r\n                mobileNumber: user.error.mobileNumber,\r\n                zipCode: user.error.zipCode,\r\n                streetOne: user.error.streetOne,\r\n                streetTwo: user.error.streetTwo,\r\n                city: user.error.city,\r\n                state: user.error.state,\r\n                alternatePhone: user.error.alternatePhone,\r\n                addressType: user.error.addressType,\r\n            })\r\n            // console.log('user.error', user.error);\r\n        }\r\n    }, [user.error])\r\n\r\n    const handleInputs = (e) => {\r\n        setAddress({\r\n            ...address,\r\n            [e.target.name]: e.target.value\r\n        })\r\n        // console.log(address);\r\n    }\r\n\r\n    const onAddressSubmit = (e) => {\r\n        e.preventDefault();\r\n        const payload = {\r\n            address: {\r\n                name: address.name,\r\n                mobileNumber: address.mobileNumber,\r\n                zipCode: address.zipCode,\r\n                streetOne: address.streetOne,\r\n                streetTwo: address.streetTwo,\r\n                city: address.city,\r\n                state: address.state,\r\n                alternatePhone: address.alternatePhone,\r\n                addressType: address.addressType,\r\n            },\r\n        };\r\n        // console.log('onAddressSubmit:', payload);\r\n        if (id) {\r\n            payload.address._id = id;\r\n        }\r\n        dispatch(addAddress(payload));\r\n        dispatch(getAddress())\r\n        if (user.error === '') {\r\n            setSubmitFlag(true)\r\n        } else {\r\n            setSubmitFlag(false)\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        // console.log(\"addressCount\", user.address);\r\n        if (submitFlag === true) {\r\n            // console.log(\"where are we\", user);\r\n            let _address = {};\r\n            if (id) {\r\n                _address = {\r\n                    _id: id,\r\n                    name: address.name,\r\n                    mobileNumber: address.mobileNumber,\r\n                    zipCode: address.zipCode,\r\n                    streetOne: address.streetOne,\r\n                    streetTwo: address.streetTwo,\r\n                    city: address.city,\r\n                    state: address.state,\r\n                    alternatePhone: address.alternatePhone,\r\n                    addressType: address.addressType,\r\n                };\r\n            } else {\r\n                _address = user.address.slice(user.address.length - 1)[0];\r\n            }\r\n\r\n            props.onSubmitForm(_address);\r\n        }\r\n    }, [user.address]);\r\n\r\n    return (\r\n        <div>\r\n            <Container>\r\n                <Row>\r\n                    <Col>\r\n                        <Form onSubmit={onAddressSubmit}>\r\n                            <Row style={{ marginBottom: '20px' }}>\r\n                                <Form.Group style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n                                    {/* <Form.Text className=\"text-danger font-weight-bold\">\r\n                                            {regError.errorMessage ? regError.errorMessage : \"\"}\r\n                                        </Form.Text> */}\r\n                                </Form.Group>\r\n                            </Row>\r\n                            <Row style={{ marginBottom: '20px' }}>\r\n                                <Col md={6}>\r\n                                    <Form.Group controlId=\"formBasicFirst\">\r\n                                        <InputDefault\r\n                                            name=\"name\"\r\n                                            label=\"Deliver To:\"\r\n                                            type=\"text\"\r\n                                            placeholder=\"Name\"\r\n                                            value={address.name}\r\n                                            onChange={handleInputs}\r\n                                        />\r\n                                        <Form.Text className=\"text-danger font-weight-bold\">\r\n                                            {\r\n                                                addressError.name\r\n                                                    ? addressError.name.message\r\n                                                    : \"\"\r\n                                            }\r\n                                        </Form.Text>\r\n                                    </Form.Group>\r\n                                </Col>\r\n                                <Form.Group as={Col} controlId=\"formBasicContactNum\">\r\n                                    <InputDefault\r\n                                        name=\"mobileNumber\"\r\n                                        label=\"Contact Phone Number\"\r\n                                        type=\"text\"\r\n                                        placeholder=\"555-555-5555\"\r\n                                        value={address.mobileNumber}\r\n                                        onChange={handleInputs}\r\n                                    />\r\n                                    <Form.Text className=\"text-danger font-weight-bold\">\r\n                                        {\r\n                                            addressError.mobileNumber\r\n                                                ? addressError.mobileNumber.message\r\n                                                : \"\"\r\n                                        }\r\n                                    </Form.Text>\r\n                                </Form.Group>\r\n                            </Row>\r\n\r\n                            <Row style={{ marginBottom: '20px' }}>\r\n                                <Form.Group controlId=\"formGridAddress1\">\r\n                                    <InputDefault\r\n                                        name=\"streetOne\"\r\n                                        label=\"Address\"\r\n                                        type=\"text\"\r\n                                        placeholder=\"1234 Main St\"\r\n                                        value={address.streetOne}\r\n                                        onChange={handleInputs}\r\n                                    />\r\n                                    <Form.Text className=\"text-danger font-weight-bold\">\r\n                                        {\r\n                                            addressError.streetOne\r\n                                                ? addressError.streetOne.message\r\n                                                : \"\"\r\n                                        }\r\n                                    </Form.Text>\r\n                                </Form.Group>\r\n                            </Row>\r\n                            <Row style={{ marginBottom: '20px' }}>\r\n                                <Form.Group controlId=\"formGridAddress2\">\r\n                                    <InputDefault\r\n                                        name=\"streetTwo\"\r\n                                        label=\"Address 2\"\r\n                                        type=\"text\"\r\n                                        placeholder=\"Apartment, studio, or floor\"\r\n                                        value={address.streetTwo}\r\n                                        onChange={handleInputs}\r\n                                    />\r\n                                    <Form.Text className=\"text-danger font-weight-bold\">\r\n                                        {\r\n                                            addressError.streetTwo\r\n                                                ? addressError.streetTwo.message\r\n                                                : \"\"\r\n                                        }\r\n                                    </Form.Text>\r\n                                </Form.Group>\r\n                            </Row>\r\n                            <Row style={{ marginBottom: '20px' }}>\r\n                                <Form.Group as={Col} controlId=\"formGridCity\">\r\n                                    <InputDefault\r\n                                        name=\"city\"\r\n                                        label=\"City\"\r\n                                        type=\"text\"\r\n                                        placeholder=\"City\"\r\n                                        value={address.city}\r\n                                        onChange={handleInputs}\r\n                                    />\r\n                                    <Form.Text className=\"text-danger font-weight-bold\">\r\n                                        {\r\n                                            addressError.city\r\n                                                ? addressError.city.message\r\n                                                : \"\"\r\n                                        }\r\n                                    </Form.Text>\r\n                                </Form.Group>\r\n                                <Form.Group as={Col} controlId=\"formGridState\">\r\n                                    <InputDefault\r\n                                        name=\"state\"\r\n                                        label=\"State\"\r\n                                        type=\"text\"\r\n                                        placeholder=\"State\"\r\n                                        value={address.state}\r\n                                        onChange={handleInputs}\r\n                                    />\r\n                                    <Form.Text className=\"text-danger font-weight-bold\">\r\n                                        {\r\n                                            addressError.state\r\n                                                ? addressError.state.message\r\n                                                : \"\"\r\n                                        }\r\n                                    </Form.Text>\r\n                                </Form.Group>\r\n                                <Form.Group as={Col} controlId=\"formGridZip\">\r\n                                    <InputDefault\r\n                                        name=\"zipCode\"\r\n                                        label=\"Zip\"\r\n                                        type=\"text\"\r\n                                        placeholder=\"Zip Code\"\r\n                                        value={address.zipCode}\r\n                                        onChange={handleInputs}\r\n                                    />\r\n                                    <Form.Text className=\"text-danger font-weight-bold\">\r\n                                        {\r\n                                            addressError.zipCode\r\n                                                ? addressError.zipCode.message\r\n                                                : \"\"\r\n                                        }\r\n                                    </Form.Text>\r\n                                </Form.Group>\r\n                            </Row>\r\n                            <Row style={{ display: \"flex\", justifyContent: \"space-between\", alignItems: 'center', margin: '0 0 10px 0' }}>\r\n\r\n                                <Form.Group\r\n                                    className='col-5'\r\n                                    controlId=\"formGridAddressType\"\r\n\r\n                                >\r\n                                    <Form.Check\r\n                                        inline\r\n                                        label=\"Home\"\r\n                                        name=\"addressType\"\r\n                                        type=\"radio\"\r\n                                        value='Home'\r\n                                        defaultChecked={address.addressType === 'Home' ? true : false}\r\n                                        onChange={(e) => setAddress({ ...address, addressType: e.target.value })}\r\n                                        readOnly\r\n                                    />\r\n                                    <Form.Check\r\n                                        inline\r\n                                        label=\"Business\"\r\n                                        name=\"addressType\"\r\n                                        type=\"radio\"\r\n                                        value='Business'\r\n                                        defaultChecked={address.addressType === 'Business' ? true : false}\r\n                                        onChange={(e) => setAddress({ ...address, addressType: e.target.value })}\r\n                                        // onChange={handleInputs}\r\n                                        readOnly\r\n                                    />\r\n                                    <Form.Text className=\"text-danger font-weight-bold\">\r\n                                        {\r\n                                            addressError.addressType\r\n                                                ? addressError.addressType.message\r\n                                                : \"\"\r\n                                        }\r\n                                    </Form.Text>\r\n                                </Form.Group>\r\n\r\n                                <Form.Group className='col-6' style={{ display: \"flex\", justifyContent: \"end\" }}>\r\n                                    <Button\r\n                                        onClick={onAddressSubmit}\r\n                                        className=\"btn btn--primary btn--sm sign-up-btn\" type=\"submit\"\r\n                                    >\r\n                                        Save Address\r\n                                    </Button>\r\n                                </Form.Group>\r\n                            </Row>\r\n\r\n                        </Form>\r\n                    </Col>\r\n                </Row>\r\n\r\n            </Container>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AddressForm;","import './CartItem.css';\r\nimport { Link } from 'react-router-dom';\r\nimport { generatePublicUrl } from '../../urlConfig';\r\n\r\nconst CartItem = ({ item, qtyChangeHandler, removeFromCartHandler }) => {\r\n\r\n    // console.log(item);\r\n\r\n    return (\r\n        <div className=\"cart-item\">\r\n            <div className=\"cart-item-image\">\r\n                <img src={generatePublicUrl(item.product.productImage)} alt={item.product.name} />\r\n            </div>\r\n            <Link to={`/product/${item.product._id}`} className=\"btn btn--primary btn--med cart-item-name\">\r\n                {item.product.name}\r\n            </Link>\r\n            <p className=\"cart-item-price\">\r\n                ${item.product.price.toFixed(2)} / \r\n                {\r\n                    item.product.name.includes('Calf') || item.product.name.includes('Box')\r\n                        ? \" pack\"\r\n                        : item.product.measurement\r\n                }\r\n            </p>\r\n            <p className=\"right-quantity\">\r\n                <label htmlFor=\"quantity\">Quantity</label>\r\n                <input\r\n                    min=\"1\"\r\n                    type=\"number\"\r\n                    name=\"quantity\"\r\n                    onChange={(e) => e.target.value <= 0 ? item.quantity = 1 : qtyChangeHandler(item.product._id, e.target.value) }\r\n                    value={item.quantity}\r\n                />\r\n            </p>\r\n\r\n            <button\r\n                className=\"cart-item-delete-btn btn btn--primary btn--med\"\r\n                onClick={() => removeFromCartHandler(item.product._id)}\r\n            >\r\n                <i className=\"fas fa-trash\"></i>\r\n            </button>\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\nexport default CartItem;","// React\r\nimport { useEffect, useState } from 'react';\r\n\r\n// Redux\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\n// React Router\r\nimport { Link } from 'react-router-dom';\r\n\r\n// Components\r\nimport CartItem from '../../components/CartItem/CartItem';\r\nimport { addToCart, removeFromCart, getCartItems } from '../../redux/actions/cartActions';\r\n\r\n// CSS\r\nimport './CartScreen.css';\r\n\r\nconst CartScreen = (props) => {\r\n\r\n    const auth = useSelector((state) => state.auth);\r\n    const cart = useSelector(state => state.cart);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const [cartItems, setCartItems] = useState(cart.cartItems);\r\n\r\n    useEffect(() => {\r\n        setCartItems(cart.cartItems);\r\n    }, [cart.cartItems]);\r\n\r\n    useEffect(() => {\r\n        if (auth.authenticate) {\r\n            console.log(\"Getting Cart Items 'CartScreen\");\r\n            dispatch(getCartItems());\r\n        }\r\n    }, [auth.authenticate]);\r\n\r\n    const qtyChangeHandler = (id, qty) => {\r\n        dispatch(addToCart(id, qty));\r\n    }\r\n\r\n    const removeFromCartHandler = (id) => {\r\n        dispatch(removeFromCart(id));\r\n    }\r\n\r\n    const getCartCount = () => {\r\n        return cartItems.reduce((qty, item) => Number(item.quantity) + qty, 0);\r\n    };\r\n\r\n\r\n    // console.log('cartscreen cartitems', cartItems);\r\n\r\n    const getCartSubTotal = () => {\r\n        if (cartItems.length > 0) {\r\n            for (const cItem of cartItems) {\r\n                if (cItem.product.name.includes('Half Calf')) {\r\n                    cItem.product.price = 200 * 7\r\n                } else if (cItem.product.name.includes(\"Whole Calf\")) {\r\n                    cItem.product.price = 450 * 6.5\r\n                } else if (cItem.product.name.includes('Pork Mix Box')) {\r\n                    cItem.product.price = 25 * 7.5\r\n                }\r\n            }\r\n        }\r\n        let output = cartItems.reduce((price, item) => item.product.price * item.quantity + price, 0);\r\n        // console.log(\"output\", output);\r\n        return output\r\n    }\r\n\r\n    if (props.onlyCartItems) {\r\n        return (\r\n            <>\r\n                <div className=\"cart-screen-left\">\r\n                    <h2>Your Cart</h2>\r\n                    {\r\n                        cartItems.length === 0\r\n                            ? (\r\n                                <div>\r\n                                    <p>Your cart is empty</p>\r\n                                    <p>\r\n                                        <Link\r\n                                            className=\"btn btn--primary btn--med products-button\"\r\n                                            to=\"/our-products\"\r\n                                        >\r\n                                            Browse our products!\r\n                                        </Link>\r\n                                    </p>\r\n                                    <h3 style={{ textAlign: 'center' }}>Or</h3>\r\n                                    <p>\r\n                                        <Link\r\n                                            className=\"btn btn--primary btn--med products-button\"\r\n                                            to=\"/order-form\"\r\n                                        >\r\n                                            Check out our Easy Order Form!\r\n                                        </Link>\r\n                                    </p>\r\n                                </div>\r\n                            ) : (\r\n                                <>\r\n                                    {\r\n                                        cartItems.map((item, idx) => (\r\n                                            <CartItem\r\n                                                key={idx}\r\n                                                item={item}\r\n                                                qtyChangeHandler={qtyChangeHandler}\r\n                                                removeFromCartHandler={removeFromCartHandler}\r\n                                            />\r\n                                        ))\r\n                                    }\r\n                                    <p>\r\n                                        <Link\r\n                                            className=\"btn btn--primary btn--med products-button\"\r\n                                            to=\"/our-products\"\r\n                                        >\r\n                                            Continue Shopping\r\n                                        </Link>\r\n                                    </p>\r\n                                </>\r\n                            )\r\n                    }\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div className=\"cart-screen\">\r\n            <div className=\"cart-screen-left\">\r\n                <h2>Shopping Cart</h2>\r\n                {\r\n                    cartItems.length === 0\r\n                        ? (\r\n                            <div>\r\n                                <p>Your cart is empty</p>\r\n                                <p>\r\n                                    <Link\r\n                                        className=\"btn btn--primary btn--med products-button\"\r\n                                        to=\"/our-products\"\r\n                                    >\r\n                                        Browse our products!\r\n                                    </Link>\r\n                                </p>\r\n                                <h3 style={{ textAlign: 'center' }}>Or</h3>\r\n                                <p>\r\n                                    <Link\r\n                                        className=\"btn btn--primary btn--med products-button\"\r\n                                        to=\"/order-form\"\r\n                                    >\r\n                                        Check out our Easy Order Form!\r\n                                    </Link>\r\n                                </p>\r\n                            </div>\r\n                        ) : (\r\n                            <>\r\n                                {\r\n                                    cartItems.map((item, idx) => (\r\n                                        <CartItem\r\n                                            key={idx}\r\n                                            item={item}\r\n                                            qtyChangeHandler={qtyChangeHandler}\r\n                                            removeFromCartHandler={removeFromCartHandler}\r\n                                        />\r\n                                    ))\r\n                                }\r\n                                <p>\r\n                                    <Link\r\n                                        className=\"btn btn--primary btn--med products-button\"\r\n                                        to=\"/our-products\"\r\n                                    >\r\n                                        Continue Shopping\r\n                                    </Link>\r\n                                </p>\r\n                            </>\r\n                        )\r\n                }\r\n            </div>\r\n            <div className=\"cart-screen-right\">\r\n                <div className=\"cart-screen-info\">\r\n                    <p>\r\n                        {\r\n                            getCartCount() !== 0\r\n                                ? getCartCount() > 1\r\n                                    ? 'Estimated total for your ' + getCartCount() + ' items.'\r\n                                    : 'Estimated total for your item.'\r\n                                : \"Your cart is empty.\"\r\n                        }\r\n                    </p>\r\n                    <p>\r\n                        {\r\n                            getCartCount() > 0\r\n                                ? getCartSubTotal().toFixed(2)\r\n                                : ''\r\n                        }\r\n                    </p>\r\n                </div>\r\n                <div className=\"cart-screen-check-out\">\r\n                    {\r\n                        cartItems.length <= 0\r\n                            ? null\r\n                            : <Link\r\n                                className=\"btn btn--primary btn--med products-button\"\r\n                                to=\"/checkout\"\r\n                            >\r\n                                Proceed To Checkout\r\n                            </Link>\r\n                    }\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default CartScreen;","// React\r\nimport { useEffect, useState } from 'react';\r\n\r\n// Redux\r\nimport { addOrder, getAddress } from '../../redux/actions/userAuth.actions';\r\nimport { getCartItems } from '../../redux/actions/cartActions';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\n// React-Bootstrap\r\nimport { Table } from 'react-bootstrap';\r\n\r\n// Components\r\nimport RegistrationModal from '../../components/Registration/RegistrationModal';\r\nimport LoginModal from '../../components/Login/LoginModal';\r\nimport { Button } from '../../components/Button/Button';\r\nimport Card from '../../components/Card/Card';\r\nimport AddressForm from './AddressForm';\r\n\r\n// Screens\r\nimport CartScreen from '../CartScreen/CartScreen';\r\n\r\n// CSS\r\nimport './CheckoutScreen.css';\r\n\r\n\r\nconst CheckoutStep = (props) => {\r\n    return (\r\n        <div className=\"checkoutStep\">\r\n            <div\r\n                onClick={props.onClick}\r\n                className={`checkoutHeader ${props.active && \"active\"}`}\r\n            >\r\n                <div>\r\n                    <span className=\"stepNumber\">{props.stepNumber}</span>\r\n                    <span className=\"stepTitle\">{props.title}</span>\r\n                </div>\r\n            </div>\r\n            {props.body && props.body}\r\n        </div>\r\n    );\r\n};\r\n\r\nconst Address = ({\r\n    adr,\r\n    selectAddress,\r\n    enableAddressEditForm,\r\n    confirmDeliveryAddress,\r\n    onAddressSubmit,\r\n}) => {\r\n    return (\r\n        <div className=\"flexRow addressContainer\">\r\n            <div>\r\n                <input name=\"address\" onClick={() => selectAddress(adr)} type=\"radio\" />\r\n            </div>\r\n            <div className=\"flexRow sb addressinfo\">\r\n                {!adr.edit ? (\r\n                    <div style={{ width: \"100%\" }}>\r\n                        <div className=\"addressDetail\">\r\n                            <div>\r\n                                <span className=\"addressName\">{adr.name}</span>\r\n                                <span className=\"addressType\">{adr.addressType}</span>\r\n                                <span className=\"addressMobileNumber\">{adr.mobileNumber}</span>\r\n                            </div>\r\n                            {adr.selected && (\r\n                                <Button\r\n                                    className='btn btn--primary'\r\n                                    buttonSize='btn--sm'\r\n                                    name=\"EDIT\"\r\n                                    onClick={() => enableAddressEditForm(adr)}\r\n                                >\r\n                                    EDIT\r\n                                </Button>\r\n                            )}\r\n                        </div>\r\n                        <div className=\"fullAddress\">\r\n                            {adr.streetTwo ? adr.streetOne + ' - ' + adr.streetTwo + ',' : adr.streetOne + ','}\r\n                            <br />\r\n                            {`${adr.city}, ${adr.state} ${adr.zipCode}`}\r\n                        </div>\r\n                        {adr.selected && (\r\n                            <div\r\n                                style={{ display: 'flex', justifyContent: 'center' }}\r\n                            >\r\n                                <Button\r\n                                    className='btn btn--primary'\r\n                                    buttonSize='btn--sm'\r\n                                    onClick={() => confirmDeliveryAddress(adr)}\r\n                                >Confirm Delivery Address</Button>\r\n                            </div>\r\n                        )}\r\n                    </div>\r\n                ) : (\r\n                    <AddressForm\r\n                        withoutLayout={true}\r\n                        onSubmitForm={onAddressSubmit}\r\n                        initialData={adr}\r\n                        onCancel={() => { }}\r\n                    />\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst CheckoutScreen = (props) => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    // User Information States\r\n    const user = useSelector((state) => state.userDetails);\r\n    const auth = useSelector((state) => state.auth);\r\n    const [address, setAddress] = useState([]);\r\n    const [newAddress, setNewAddress] = useState(false);\r\n\r\n    // Cart Information States\r\n    const cart = useSelector((state) => state.cart);\r\n    const [cartItems, setCartItems] = useState(cart.cartItems);\r\n\r\n    // Modal State Controllers\r\n    // Login Modal\r\n    const [loginModal, setLoginModal] = useState(false);\r\n    const showLoginModal = () => setLoginModal(true);\r\n    const hideLoginModal = () => setLoginModal(false);\r\n\r\n    // Registration Modal\r\n    const [regModal, setRegModal] = useState(false);\r\n    const showRegModal = () => setRegModal(true);\r\n    const hideRegModal = () => setRegModal(false);\r\n\r\n    // Order Step States\r\n    // Delivery Address Step\r\n    const [selectedAddress, setSelectedAddress] = useState(null);\r\n    const [confirmAddressOption, setConfirmAddressOption] = useState(false);\r\n\r\n    // Order Summary Step\r\n    const [orderSummaryOption, setOrderSummaryOption] = useState(false);\r\n    const [orderConfirmation, setOrderConfirmation] = useState(false);\r\n\r\n    // Finalize Order Option\r\n    const [finalizeOrderOption, setFinalizeOrderOption] = useState(false);\r\n\r\n    // Place Order\r\n    const [confirmOrder, setConfirmOrder] = useState(false);\r\n\r\n    // Address Functions\r\n    const onAddressSubmit = (addr) => {\r\n        setSelectedAddress(addr);\r\n        setConfirmAddressOption(true);\r\n        setOrderSummaryOption(true);\r\n    };\r\n\r\n    const selectAddress = (addr) => {\r\n        //console.log(addr);\r\n        const updatedAddress = address.map((adr) =>\r\n            adr._id === addr._id\r\n                ? { ...adr, selected: true }\r\n                : { ...adr, selected: false }\r\n        );\r\n        // console.log('updatedAddress', updatedAddress);\r\n        setAddress(updatedAddress);\r\n        setNewAddress(false);\r\n    };\r\n\r\n    const confirmDeliveryAddress = (addr) => {\r\n        setSelectedAddress(addr);\r\n        setConfirmAddressOption(true);\r\n        setOrderSummaryOption(true);\r\n    };\r\n\r\n    const enableAddressEditForm = (addr) => {\r\n        const updatedAddress = address.map((adr) =>\r\n            adr._id === addr._id ? { ...adr, edit: true } : { ...adr, edit: false }\r\n        );\r\n        setAddress(updatedAddress);\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (auth.authenticate) {\r\n            const address = user.address.map((adr) => ({\r\n                ...adr,\r\n                selected: false,\r\n                edit: false,\r\n            }));\r\n            setAddress(address);\r\n            setNewAddress(false);\r\n            // user.address.length === 0 && setNewAddress(true);\r\n        }\r\n    }, [user.address, auth.authenticate]);\r\n\r\n    // Order Confirmation Functions\r\n    const userOrderConfirmation = () => {\r\n        setOrderConfirmation(true);\r\n        setOrderSummaryOption(false);\r\n        setFinalizeOrderOption(true);\r\n    };\r\n\r\n    // Place Order\r\n    const onConfirmOrder = () => {\r\n        const totalAmount = getCartSubTotal();\r\n\r\n        const items = cart.cartItems.map((item) => ({\r\n            productId: item.product._id,\r\n            payablePrice: item.product.price,\r\n            purchasedQty: item.quantity\r\n        }))\r\n\r\n        const payload = {\r\n            addressId: selectedAddress._id,\r\n            totalAmount,\r\n            items,\r\n            paymentStatus: \"pending\"\r\n        };\r\n\r\n        // console.log(payload);\r\n        dispatch(addOrder(payload));\r\n        setConfirmOrder(true);\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (confirmOrder && user.placedOrderId) {\r\n            props.history.push(`/order_details/${user.placedOrderId}`);\r\n        }\r\n    }, [user.placedOrderId]);\r\n\r\n    // Logged-in User Cart\r\n    useEffect(() => {\r\n        auth.authenticate && dispatch(getAddress());\r\n        auth.authenticate && dispatch(getCartItems());\r\n        if (!auth.authenticate) {\r\n            setAddress([]);\r\n            setConfirmAddressOption(false);\r\n            setSelectedAddress(null);\r\n            setOrderSummaryOption(false);\r\n            setOrderConfirmation(false);\r\n            setFinalizeOrderOption(false);\r\n            setConfirmOrder(false);\r\n        }\r\n    }, [auth.authenticate]);\r\n\r\n    useEffect(() => {\r\n        // console.log('checkout setCartItems', cartItems);\r\n        setCartItems(cart.cartItems);\r\n    }, [cart.cartItems]);\r\n\r\n    const getCartCount = () => {\r\n        return cartItems.reduce((qty, item) => Number(item.quantity) + qty, 0);\r\n    };\r\n\r\n    const getCartSubTotal = () => {\r\n        if (cartItems.length > 0) {\r\n            for (const cItem of cartItems) {\r\n                if (cItem.product.name.includes('Half Calf')) {\r\n                    cItem.product.price = 200 * 7\r\n                } else if (cItem.product.name.includes(\"Whole Calf\")) {\r\n                    cItem.product.price = 450 * 6.5\r\n                } else if (cItem.product.name.includes('Pork Mix Box')) {\r\n                    cItem.product.price = 25 * 7.5\r\n                }\r\n            }\r\n        };\r\n        let output = cartItems.reduce((price, item) => item.product.price * item.quantity + price, 0);\r\n        // console.log('checkoutScreen output', output);\r\n        return output\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"cartContainer\" style={{ alignItems: \"flex-start\" }}>\r\n                <div className=\"checkoutContainer\">\r\n                    {/* check if user logged in or not */}\r\n                    <CheckoutStep\r\n                        stepNumber={\"1\"}\r\n                        title={\"LOGIN / REGISTER\"}\r\n                        active={!auth.authenticate}\r\n                        body={\r\n                            auth.authenticate ? (\r\n                                <div className=\"loggedInId\">\r\n                                    <span style={{ fontWeight: 500 }}>Account Holder: {auth.user.firstName} {auth.user.lastName}</span>\r\n                                    <span style={{ margin: \"0 5px\" }}>| Email: {auth.user.email}</span>\r\n                                </div>\r\n                            ) : (\r\n                                <div\r\n                                    style={{\r\n                                        display: 'flex',\r\n                                        justifyContent: 'space-evenly',\r\n                                        padding: '10px'\r\n                                    }}\r\n                                >\r\n                                    <button\r\n                                        style={{ marginRight: '10px' }}\r\n                                        className=\"btn btn--primary btn--med sign-up-btn\"\r\n                                        onClick={showLoginModal}>\r\n                                        Login\r\n                                    </button>\r\n                                    <button\r\n                                        className=\"btn btn--primary btn--med sign-up-btn\"\r\n                                        onClick={showRegModal}>\r\n                                        Register\r\n                                    </button>\r\n                                    {/* <InputDefault label=\"Email\" /> */}\r\n                                    <LoginModal\r\n                                        show={loginModal}\r\n                                        size={'lg'}\r\n                                        onHide={hideLoginModal}\r\n                                        handleClose={hideLoginModal}\r\n                                    />\r\n                                    <RegistrationModal\r\n                                        show={regModal}\r\n                                        size={'lg'}\r\n                                        onHide={hideRegModal}\r\n                                        handleClose={hideRegModal}\r\n                                    />\r\n                                </div>\r\n                            )\r\n                        }\r\n                    />\r\n                    <CheckoutStep\r\n                        stepNumber={\"2\"}\r\n                        title={\"DELIVERY ADDRESS\"}\r\n                        active={!confirmAddressOption && auth.authenticate}\r\n                        body={\r\n                            <>\r\n                                {confirmAddressOption ? (\r\n                                    <div className=\"stepCompleted\">\r\n                                        <div>\r\n                                            {`\r\n                                            ${selectedAddress.name} - \r\n                                            ${selectedAddress.addressType} Address - \r\n                                            ${selectedAddress.streetTwo\r\n                                                    ? selectedAddress.streetOne + ' - ' + selectedAddress.streetTwo + ','\r\n                                                    : selectedAddress.streetOne + ','\r\n                                                } \r\n                                            ${selectedAddress.city}, ${selectedAddress.state}, ${selectedAddress.zipCode}\r\n                                        `}\r\n                                        </div>\r\n                                        <div>\r\n                                            <Button\r\n                                                buttonSize='btn--sm'\r\n                                                onClick={() => setConfirmAddressOption(false)}\r\n                                            />\r\n                                        </div>\r\n                                    </div>\r\n                                ) : (\r\n                                    address.map((adr, idx) => (\r\n                                        <Address\r\n                                            key={idx}\r\n                                            selectAddress={selectAddress}\r\n                                            enableAddressEditForm={enableAddressEditForm}\r\n                                            confirmDeliveryAddress={confirmDeliveryAddress}\r\n                                            onAddressSubmit={onAddressSubmit}\r\n                                            adr={adr}\r\n                                        />\r\n                                    ))\r\n                                )}\r\n                            </>\r\n                        }\r\n                    />\r\n\r\n                    {/* AddressForm */}\r\n                    {confirmAddressOption ? null : newAddress ? (\r\n                        <AddressForm onSubmitForm={onAddressSubmit} onCancel={() => { }} />\r\n                    ) : auth.authenticate ? (\r\n                        <CheckoutStep\r\n                            stepNumber={\"+\"}\r\n                            title={\"ADD NEW ADDRESS\"}\r\n                            active={false}\r\n                            onClick={() => setNewAddress(true)}\r\n                        />\r\n                    ) : null}\r\n\r\n                    <CheckoutStep\r\n                        stepNumber={\"3\"}\r\n                        title={\"ORDER SUMMARY\"}\r\n                        active={orderSummaryOption}\r\n                        body={\r\n                            orderSummaryOption ? (\r\n                                <CartScreen onlyCartItems={true} />\r\n                            ) : orderConfirmation ? (\r\n                                <div className=\"stepCompleted\">\r\n                                    <div style={{}}>\r\n                                        {/* {Object.keys(cart.cartItems).length} items */}\r\n                                        <p>\r\n                                            {\r\n                                                getCartCount() !== 0\r\n                                                    ? getCartCount() > 1\r\n                                                        ? 'Estimated total for your ' + getCartCount() + ' items.'\r\n                                                        : 'Estimated total for your item.'\r\n                                                    : \"Your cart is empty.\"\r\n                                            }\r\n                                        </p>\r\n                                        <strong style={{ fontSize: '16px' }}>\r\n                                            {\r\n                                                getCartCount() > 0\r\n                                                    ? '$' + getCartSubTotal().toFixed(2)\r\n                                                    : ''\r\n                                            }\r\n                                        </strong>\r\n                                    </div>\r\n\r\n                                    <div style={{ width: '65%' }}>\r\n                                        <Table>\r\n                                            <thead>\r\n                                                <tr>\r\n                                                    <th>Product</th>\r\n                                                    <th >Quantity</th>\r\n                                                </tr>\r\n                                            </thead>\r\n                                            <tbody>\r\n                                                {\r\n                                                    cart.cartItems\r\n                                                        ? cartItems.map((item, idx) => {\r\n                                                            return (\r\n                                                                <tr key={idx}>\r\n                                                                    <td>{item.product.name}</td>\r\n                                                                    <td >{item.quantity} {item.product.measurement}</td>\r\n                                                                </tr>\r\n                                                            )\r\n                                                        })\r\n                                                        : null\r\n                                                }\r\n                                            </tbody>\r\n\r\n                                        </Table>\r\n                                    </div>\r\n\r\n\r\n\r\n                                </div>\r\n                            ) : null\r\n                        }\r\n                    />\r\n\r\n                    {orderSummaryOption && (\r\n                        <Card style={{ margin: \"10px 0\", }}>\r\n                            <div\r\n                                className=\"flexRow sb\"\r\n                                style={{\r\n                                    display: 'flex',\r\n                                    padding: \"20px\",\r\n                                    alignItems: \"center\",\r\n                                    justifyContent: 'space-between'\r\n                                }}\r\n                            >\r\n                                <p style={{ fontSize: \"12px\", marginBottom: '0px' }}>\r\n                                    Order confirmation email will be sent to{\" \"}\r\n                                    <strong>{auth.user.email}</strong>\r\n                                </p>\r\n\r\n                                <Button\r\n                                    className=\"btn btn--primary btn--med sign-up-btn\"\r\n                                    onClick={userOrderConfirmation}>\r\n                                    Continue\r\n                                </Button>\r\n\r\n                            </div>\r\n                        </Card>\r\n                    )}\r\n\r\n                    <CheckoutStep\r\n                        stepNumber={\"4\"}\r\n                        title={\"FINALIZE ORDER\"}\r\n                        active={finalizeOrderOption}\r\n                        body={\r\n                            finalizeOrderOption && (\r\n                                <div\r\n                                    style={{\r\n                                        display: 'flex',\r\n                                        justifyContent: 'center',\r\n                                        margin: '10px 0px 10px 0px'\r\n                                    }}\r\n                                >\r\n                                    <Button\r\n                                        className=\"btn btn--primary btn--med sign-up-btn\"\r\n                                        onClick={onConfirmOrder}>\r\n                                        Confirm Order\r\n                                    </Button>\r\n                                </div>\r\n                            )\r\n                        }\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"checkout-screen-right\">\r\n                    <div className=\"checkout-screen-info\">\r\n                        <p>\r\n                            {\r\n                                getCartCount() !== 0\r\n                                    ? getCartCount() > 1\r\n                                        ? 'Estimated total for your ' + getCartCount() + ' items.'\r\n                                        : 'Estimated total for your item.'\r\n                                    : \"Your cart is empty.\"\r\n                            }\r\n                        </p>\r\n                        <p>\r\n                            {\r\n                                getCartCount() > 0\r\n                                    ? '$' + getCartSubTotal().toFixed(2)\r\n                                    : ''\r\n                            }\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n\r\n};\r\n\r\nexport default CheckoutScreen;","import './ProductScreen.css';\r\nimport { useState, useEffect } from 'react';\r\n\r\n// Components\r\nimport { Button } from '../../components/Button/Button'\r\n\r\n// Redux\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getProductDetails } from '../../redux/actions/productActions';\r\nimport { addToCart } from '../../redux/actions/cartActions';\r\n\r\nconst ProductScreen = ({ match, history }) => {\r\n\r\n    const [qty, setQty] = useState(1);\r\n    const dispatch = useDispatch();\r\n\r\n    const productDetails = useSelector(state => state.getProductDetails);\r\n    const { loading, error, product } = productDetails;\r\n\r\n    useEffect(() => {\r\n        if (product && match.params.id !== product._id) {\r\n            dispatch(getProductDetails(match.params.id))\r\n        }\r\n    }, [dispatch, product, match]);\r\n\r\n    const addToCartHandler = () => {\r\n        dispatch(addToCart(product._id, qty));\r\n        history.push('/cart');\r\n        // history.goBack();\r\n    }\r\n\r\n    return (\r\n        <div className=\"product-screen\">\r\n            {loading ? <h2>Loading...</h2> : error ? <h2>{error}</h2> :\r\n                <>\r\n                    <div className=\"product-screen-left\">\r\n                        <div className=\"left-image\">\r\n                            <img src={product.productImage} alt=\"product name\" />\r\n                        </div>\r\n                        <div className=\"left-info\">\r\n                            <p className=\"left-name\">{product.name}</p>\r\n                            <p className=\"left-price\">${product.price} / {product.measurement}</p>\r\n                            <p className=\"left-description\">{product.description}</p>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"product-screen-right\">\r\n                        <div className=\"right-info\">\r\n                            <p className=\"right-price\">\r\n                                Price: <span className=\"right-price-span\">${product.price} / {product.measurement}</span>\r\n                            </p>\r\n                            <p className=\"right-status\">\r\n                                Status: <span className=\"right-status-span\">{product.inStock ? \"In Stock.\" : \"Out Of Stock.\"}</span>\r\n                            </p>\r\n                            <p className=\"right-quantity\">\r\n                                <label htmlFor=\"quantity\">Quantity</label>\r\n                                <input \r\n                                    min=\"0\"\r\n                                    type=\"number\" \r\n                                    name=\"quantity\" \r\n                                    onChange={(e) => e.target.value < 1 ? setQty(1) : setQty(e.target.value)}\r\n                                    value={qty}\r\n                                />\r\n                            </p>\r\n                            <p className=\"right-button\">\r\n                                <Button onClick={addToCartHandler}>Add To Cart</Button>\r\n                                {/* <button type=\"button\">Add To Cart</button> */}\r\n                            </p>\r\n                        </div>\r\n                    </div>\r\n                </>\r\n            }\r\n        </div>\r\n    )\r\n}\r\nexport default ProductScreen;","import { useState } from 'react';\r\n\r\n// CSS\r\nimport './OrderScreenCard.css'\r\n\r\n// Components\r\nimport { Button } from '../Button/Button'\r\n\r\n// Redux\r\nimport { useDispatch } from 'react-redux';\r\nimport { addToCart } from '../../redux/actions/cartActions';\r\n\r\n\r\nconst OrderScreenCard = (props) => {\r\n\r\n    const [qty, setQty] = useState(props.qty);\r\n    const dispatch = useDispatch();\r\n\r\n    const initialProduct = {\r\n        _id: props.product._id,\r\n        name: props.name,\r\n        price: props.price,\r\n        description: props.description,\r\n        inStock: props.inStock,\r\n        measurement: props.measurement,\r\n    }\r\n\r\n    const [product, setProduct] = useState(initialProduct)\r\n\r\n    const addToCartHandler = (product) => {\r\n        console.log('product from add to cart in OrderScreenCard', product);\r\n        if (qty < 1) {\r\n            setQty(1);\r\n        }\r\n        // else if (qty != props.qty) {\r\n        //     setQty()\r\n        // }\r\n        dispatch(addToCart(product._id, qty));\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <td style={{\r\n                width: '25%',\r\n                verticalAlign: 'middle'\r\n            }}>\r\n                {product.name}\r\n            </td>\r\n            <td style={{\r\n                width: '10%',\r\n                textAlign: 'center',\r\n                verticalAlign: 'middle'\r\n            }}>\r\n                ${product.price} / {product.measurement}\r\n            </td>\r\n            <td style={{\r\n                width: '25%',\r\n                verticalAlign: 'middle'\r\n            }}>\r\n                {product.description}\r\n            </td>\r\n            <td style={{\r\n                width: '10%',\r\n                textAlign: 'center',\r\n                verticalAlign: 'middle'\r\n            }}>\r\n                {product.inStock ? \" In Stock.\" : \" Out Of Stock.\"}\r\n            </td>\r\n            <td style={{ verticalAlign: 'middle' }}>\r\n                <p style={{\r\n                    display: 'flex',\r\n                    justifyContent: 'space-around',\r\n                    alignItems: 'center',\r\n                    margin: '0'\r\n                }}>\r\n                    {/* <label htmlFor=\"quantity\">Quantity: </label> */}\r\n                    <input\r\n                        className=\"add-to-cart-input\"\r\n                        min=\"0\"\r\n                        type=\"number\"\r\n                        name=\"quantity\"\r\n                        onChange={(e) => e.target.value < 1 ? setQty(1) : setQty(e.target.value)}\r\n                        value={qty}\r\n                    />\r\n                    {\r\n                        product.inStock\r\n                            ? <Button\r\n                                buttonSize='btn--sm'\r\n                                onClick={() => addToCartHandler(product)}\r\n                            >Add\r\n                            </Button>\r\n                            : <Button\r\n                                buttonSize='btn--sm'\r\n                                buttonStyle='btn-disabled'\r\n                            >Add\r\n                            </Button>\r\n                    }\r\n                </p>\r\n            </td>\r\n        </>\r\n    )\r\n}\r\nexport default OrderScreenCard;","// React\r\nimport { useEffect } from 'react';\r\n\r\n// Redux\r\nimport { getOrders } from '../../redux/actions/userAuth.actions'\r\nimport { addToCart } from '../../redux/actions/cartActions';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { Table } from 'react-bootstrap';\r\n\r\n// Components\r\nimport OrderScreenCard from '../../components/OrderScreenCard/OrderScreenCard';\r\n\r\n// CSS\r\n\r\nconst OrdersScreen = (props) => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    // User Information States\r\n    // const auth = useSelector((state) => state.auth)\r\n    const user = useSelector((state) => state.userDetails)\r\n\r\n    const makeDate = (order) => {\r\n        // console.log(typeof order.createdAt);\r\n        var date = new Date(order.createdAt);\r\n        var month = date.getMonth() + 1;\r\n        var day = date.getDate();\r\n        var year = date.getFullYear();\r\n        // console.log(`${month}/${day}/${year}`);\r\n        return `${month}/${day}/${year}`\r\n    }\r\n\r\n    const addOrderToCartHandler = (order) => {\r\n        // console.log('order', order);\r\n        order.items.map((item) => {\r\n            dispatch(addToCart(item.productId._id, item.purchasedQty));\r\n        })\r\n    }\r\n\r\n    // User Orders\r\n    useEffect(() => {\r\n        dispatch(getOrders());\r\n    }, [])\r\n\r\n    return (\r\n\r\n        <div style={{\r\n            display: 'flex',\r\n            justifyContent: 'center',\r\n            alignContent: 'center',\r\n            flexDirection: 'column',\r\n            margin: '10px',\r\n            padding: '3px'\r\n        }}>\r\n            {\r\n                user.orders\r\n                    ? user.orders.map((order, idx) => {\r\n                        return (\r\n                            <Table\r\n                                key={idx}\r\n                                bordered\r\n                                style={{\r\n                                    width: '80%',\r\n                                    alignSelf: 'center'\r\n                                }}\r\n                            >\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th colSpan='2'>\r\n                                            Order # : {order._id}\r\n                                        </th>\r\n                                        <th colSpan='2' style={{ textAlign: 'end' }}>\r\n                                            This order was placed on: {makeDate(order)}\r\n                                        </th>\r\n                                        <th style={{ textAlign: 'end' }}>\r\n                                            Status: Pending\r\n                                        </th>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <th >Product</th>\r\n                                        <th style={{textAlign: 'center'}}>Price</th>\r\n                                        <th >Description</th>\r\n                                        <th style={{textAlign: 'center'}}>Stock</th>\r\n                                        <th style={{textAlign: 'center'}}>Quantity</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {\r\n                                        order.items.map((item, idx) => {\r\n                                            return (\r\n                                                <tr key={idx}>\r\n                                                    <OrderScreenCard\r\n                                                        product={item.productId}\r\n                                                        name={item.productId.name}\r\n                                                        price={item.payablePrice}\r\n                                                        measurement={item.productId.measurement}\r\n                                                        description={item.productId.description}\r\n                                                        inStock={item.productId.inStock}\r\n                                                        qty={item.purchasedQty}\r\n                                                    />\r\n                                                    {/* <td>{item.productId.name}</td>\r\n                                                    <td>{item.purchasedQty} {item.productId.measurement}</td> */}\r\n                                                </tr>\r\n                                            )\r\n                                        })\r\n                                    }\r\n                                    <tr style={{ textAlign: 'end' }}>\r\n                                        <td colSpan='4' style={{\r\n                                            verticalAlign: 'middle'\r\n                                        }}>\r\n                                            Purchased for ${order.totalAmount.toFixed(2)}.\r\n                                        </td>\r\n                                        <td >\r\n                                            <button\r\n                                                className='btn btn--sm'\r\n                                                style={{ backgroundColor: 'orangered' }}\r\n                                                onClick={() => addOrderToCartHandler(order)}\r\n                                            >\r\n                                                Buy Again\r\n                                            </button>\r\n                                        </td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </Table>\r\n                        )\r\n                    })\r\n                    : null\r\n            }\r\n\r\n        </div>\r\n\r\n        // <>\r\n        // <Table>\r\n        //     <thead>\r\n        // <tr>\r\n        //     <th>Product</th>\r\n        //     <th >Quantity</th>\r\n        // </tr>\r\n        //     </thead>\r\n        //     <tbody>\r\n        //         {\r\n        //             user.orders\r\n        //                 ?\r\n        //                 user.orders.map((order, idx) => {\r\n        //                     return order.items.map((item, idx) => (\r\n        // <tr key={idx}>\r\n        //     <td>{item.productId.name}</td>\r\n        //     <td>{item.purchasedQty} {item.productId.measurement}</td>\r\n        // </tr>\r\n        //                     ))\r\n        //                 })\r\n\r\n        //                 : null\r\n        //         }\r\n        //     </tbody>\r\n        // </Table>\r\n        // </>\r\n\r\n    );\r\n};\r\n\r\nexport default OrdersScreen;","import './HomeScreen.css';\r\n\r\n// Components\r\n\r\n\r\nconst HomeScreen = () => {\r\n\r\n    return (\r\n        <div className=\"homescreen\">\r\n            <h2 className=\"homescreen-title\">Home</h2>\r\n            <div className=\"homescreen-products\">\r\n                \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default HomeScreen;","import { useState } from 'react';\r\n\r\n// CSS\r\nimport './OrderFormProduct.css'\r\n\r\n// Components\r\nimport { Button } from '../Button/Button'\r\n\r\n// Redux\r\nimport { useDispatch } from 'react-redux';\r\nimport { addToCart } from '../../redux/actions/cartActions';\r\n\r\n\r\nconst OrderFormProduct = ({ product }) => {\r\n\r\n    const [qty, setQty] = useState(0);\r\n    const dispatch = useDispatch();\r\n\r\n    const addToCartHandler = (product) => {\r\n        if (qty < 1) {\r\n            setQty(1);\r\n        }\r\n        dispatch(addToCart(product._id, qty));\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <td style={{ width: '25%' }}>{product.name}</td>\r\n            <td style={{ width: '10%' }}>${product.price.toFixed(2)} / {product.measurement}</td>\r\n            <td style={{ width: '25%' }}>{product.description}</td>\r\n            <td style={{ width: '10%', textAlign: 'center' }}>{product.inStock ? \" In Stock.\" : \" Out Of Stock.\"}</td>\r\n            <td>\r\n                <p style={{ display: 'flex', justifyContent: 'space-evenly', alignItems: 'center', margin: '0' }} >\r\n                    <label htmlFor=\"quantity\">Quantity: </label>\r\n                    <input\r\n                        className=\"add-to-cart-input\"\r\n                        min=\"0\"\r\n                        type=\"number\"\r\n                        name=\"quantity\"\r\n                        onChange={(e) => e.target.value < 1 ? setQty(1) : setQty(e.target.value)}\r\n                        value={qty}\r\n                    />\r\n                    {\r\n                        product.inStock\r\n                            ? <Button\r\n                                buttonSize='btn--sm'\r\n                                onClick={() => addToCartHandler(product)}\r\n                            >Add\r\n                            </Button>\r\n                            : <Button\r\n                                buttonSize='btn--sm'\r\n                                buttonStyle='btn-disabled'\r\n                            >Add\r\n                            </Button>\r\n                    }\r\n                </p>\r\n            </td>\r\n        </>\r\n    )\r\n}\r\nexport default OrderFormProduct;","import React from 'react';\r\n\r\n// Components\r\nimport OrderFormProduct from '../ProductOrderFormCard/OrderFormProduct';\r\n\r\nconst EasyOrderSection = ({ products, loading, error, sectionImg, imageAlt, filterOne, filterTwo, filterThree }) => {\r\n    return (\r\n        <>\r\n            <tr>\r\n                <td colSpan=\"5\" style={{ maxHeight: '50px', background: '#3E6F38' }}>\r\n                    <img style={{ maxHeight: '50px' }} src={sectionImg} alt={imageAlt} />\r\n                </td>\r\n            </tr>\r\n            {\r\n                products.products\r\n                    ? products.products.map((product, idx) =>\r\n                        product.category.name === filterOne\r\n                            || product.category.name === filterTwo\r\n                            || product.category.name === filterThree\r\n                            ? <tr className=\"align-middle\" key={idx}>\r\n                                <OrderFormProduct\r\n                                    product={product}\r\n                                />\r\n                            </tr>\r\n                            : null\r\n                    )\r\n                    : <tr><td>Failed</td></tr>\r\n            }\r\n        </>\r\n    );\r\n};\r\n\r\nexport default EasyOrderSection;","import { useEffect } from 'react';\r\n\r\n// Components\r\nimport EasyOrderSection from '../../components/EasyOrderSection/EasyOrderSection';\r\n\r\n// Redux\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { getAllProducts as listProducts } from '../../redux/actions/productActions';\r\n\r\n\r\nconst OrderForm = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const getAllProducts = useSelector((state) => state.getAllProducts);\r\n    const { products, loading, error } = getAllProducts;\r\n\r\n    useEffect(() => {\r\n        dispatch(listProducts())\r\n    }, [])\r\n\r\n    const renderProducts = () => {\r\n        return (\r\n            <table style={{ width: '80%' }} className='table table-hover table-bordered'>\r\n                {/* <thead>\r\n                    <tr>\r\n                        <th>Name</th>\r\n                        <th>Price</th>\r\n                        <th>Description</th>\r\n                        <th>Stock Status</th>\r\n                        <th style={{ textAlign: 'center' }}>Action</th>\r\n                    </tr>\r\n                </thead> */}\r\n                <tbody>\r\n                    <EasyOrderSection\r\n                        filterOne={'Milk'}\r\n                        filterTwo={\"Cheese\"}\r\n                        filterThree={\"Eggs\"}\r\n                        sectionImg={require('../../img/dairy-eggs-logo.png').default}\r\n                        imageAlt={'dairy-eggs-logo'}\r\n                        products={products}\r\n                        loading={loading}\r\n                        error={error}\r\n                    />\r\n                    <EasyOrderSection\r\n                        filterOne={'Beef'}\r\n                        sectionImg={require('../../img/beef-logo.png').default}\r\n                        imageAlt={'beef-logo'}\r\n                        products={products}\r\n                        loading={loading}\r\n                        error={error}\r\n                    />\r\n                    <EasyOrderSection\r\n                        filterOne={'Pork'}\r\n                        sectionImg={require('../../img/pork-logo.png').default}\r\n                        imageAlt={'pork-logo'}\r\n                        products={products}\r\n                        loading={loading}\r\n                        error={error}\r\n                    />\r\n                    <EasyOrderSection\r\n                        filterOne={'Chicken'}\r\n                        filterTwo={\"Turkey\"}\r\n                        sectionImg={require('../../img/poultry-logo.png').default}\r\n                        imageAlt={'poultry-logo'}\r\n                        products={products}\r\n                        loading={loading}\r\n                        error={error}\r\n                    />\r\n                    <EasyOrderSection\r\n                        filterOne={'Lamb'}\r\n                        sectionImg={require('../../img/lamb-logo.png').default}\r\n                        imageAlt={'lamb-logo'}\r\n                        products={products}\r\n                        loading={loading}\r\n                        error={error}\r\n                    />\r\n                    <EasyOrderSection\r\n                        filterOne={'Goat'}\r\n                        sectionImg={require('../../img/goat-logo.png').default}\r\n                        imageAlt={'goat-logo'}\r\n                        products={products}\r\n                        loading={loading}\r\n                        error={error}\r\n                    />\r\n                    <EasyOrderSection\r\n                        filterOne={'Raw Honey'}\r\n                        filterTwo={\"Creamed Honey\"}\r\n                        sectionImg={require('../../img/honey-logo.png').default}\r\n                        imageAlt={'honey-logo'}\r\n                        products={products}\r\n                        loading={loading}\r\n                        error={error}\r\n                    />\r\n                    <EasyOrderSection\r\n                        filterOne={'Packs'}\r\n                        sectionImg={require('../../img/express-packs-logo.png').default}\r\n                        imageAlt={'express-packs-logo'}\r\n                        products={products}\r\n                        loading={loading}\r\n                        error={error}\r\n                    />\r\n                </tbody>\r\n            </table>\r\n        )\r\n    }\r\n\r\n\r\n    return (\r\n        <div style={{ display: 'flex', justifyContent: 'center' }}>\r\n            {renderProducts()}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default OrderForm;","\r\n\r\nexport const MenuItems = [\r\n    {\r\n        title: 'Home',\r\n        url: '/',\r\n        cName: 'nav-links'\r\n    },\r\n    {\r\n        title: 'Browse Products',\r\n        url: '/our-products',\r\n        cName: 'nav-links'\r\n    },\r\n    // {\r\n    //     title: 'How To Order',\r\n    //     url: '#',\r\n    //     cName: 'nav-links'\r\n    // },\r\n    {\r\n        title: 'Easy Order',\r\n        url: '/order-form',\r\n        cName: 'nav-links'\r\n    },\r\n    {\r\n        title: 'Contact Us',\r\n        url: '#',\r\n        cName: 'nav-links'\r\n    },\r\n    // {\r\n    //     title: 'Sign In',\r\n    //     url: '/login',\r\n    //     cName: 'nav-links'\r\n    // },\r\n    // {\r\n    //     title: '',\r\n    //     url: '#',\r\n    //     cName: 'nav-links fas fa-shopping-cart'\r\n    // },\r\n    // {\r\n    //     title: 'Sign Up',\r\n    //     url: '/register',\r\n    //     cName: 'nav-links-mobile'\r\n    // },\r\n\r\n]","\r\nimport { MenuItems } from './MenuItems';\r\nimport { useEffect, useState } from \"react\";\r\nimport './Navbar.css';\r\nimport { Link, useHistory } from 'react-router-dom';\r\n\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport RegistrationModal from \"../Registration/RegistrationModal\";\r\nimport LoginModal from \"../Login/LoginModal\";\r\nimport { logout } from \"../../redux/actions/userAuth.actions\";\r\nimport { updateCart } from \"../../redux/actions/cartActions\";\r\nimport { Dropdown } from \"react-bootstrap\";\r\n\r\nconst NavBar = () => {\r\n\r\n    const history = useHistory()\r\n\r\n    const auth = useSelector(state => state.auth);\r\n    const dispatch = useDispatch();\r\n\r\n    const [clicked, setClicked] = useState(false);\r\n\r\n    const [loginModal, setLoginModal] = useState(false);\r\n    const showLoginModal = () => setLoginModal(true);\r\n    const hideLoginModal = () => setLoginModal(false);\r\n\r\n    const [regModal, setRegModal] = useState(false);\r\n    const showRegModal = () => setRegModal(true);\r\n    const hideRegModal = () => setRegModal(false);\r\n\r\n    const handleClick = () => {\r\n        if (clicked) {\r\n            setClicked(false)\r\n        } else {\r\n            setClicked(true)\r\n        }\r\n    }\r\n\r\n    const cart = useSelector(state => state.cart);\r\n    const { cartItems } = cart;\r\n\r\n    const getCartCount = () => {\r\n        return cartItems.reduce((quantity, item) => quantity + Number(item.quantity), 0)\r\n    }\r\n\r\n    const handleLogout = () => {\r\n        dispatch(logout())\r\n        return history.push('/')\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (auth.authenticate) {\r\n            hideLoginModal()\r\n            console.log('Updating Cart.. NavBar');\r\n            dispatch(updateCart());\r\n        }\r\n    }, [auth.authenticate])\r\n\r\n    return (\r\n        <nav className=\"NavbarItems\">\r\n            <div className=\"navbar-logo\">\r\n                <a href=\"/\">\r\n                    <img className=\" navbar-logo-img\" src={require('../../img/FarmToHomeLogoLong.png').default} alt=\"farm-to-home-logo\" />\r\n                </a>\r\n            </div>\r\n            <div className=\"menu-icon\" onClick={handleClick}>\r\n                <i className={clicked ? 'fas fa-times' : 'fas fa-bars'}></i>\r\n            </div>\r\n            <ul className={clicked ? 'nav-menu active' : 'nav-menu'}>\r\n                {\r\n                    MenuItems.map((item, idx) => {\r\n                        return (\r\n                            <li key={idx}>\r\n                                <Link className={item.cName} to={item.url}>{item.title}</Link>\r\n                            </li>\r\n                        )\r\n                    })\r\n                }\r\n                <li>\r\n                    <Link className=\"nav-links fas fa-shopping-cart cart\" to=\"/cart\">\r\n                        <span className=\"cart-badge\">{getCartCount()}</span>\r\n                    </Link>\r\n                </li>\r\n            </ul>\r\n\r\n            {\r\n                !auth.authenticate\r\n                    ? <div style={{ display: 'flex' }}>\r\n\r\n                        <button\r\n                            style={{ marginRight: '10px' }}\r\n                            className=\"btn btn--primary btn--med sign-up-btn\"\r\n                            onClick={showLoginModal}>\r\n                            Login\r\n                        </button>\r\n\r\n                        <button\r\n                            style={{ marginRight: '10px' }}\r\n                            className=\"btn btn--primary btn--med sign-up-btn\"\r\n                            onClick={showRegModal}>\r\n                            Register\r\n                        </button>\r\n                        {/* <Link className=\"btn btn--primary btn--med sign-up-btn\" to={'/register'}>Register</Link> */}\r\n                    </div>\r\n                    : <>\r\n                        {/* <style type='text/css'>\r\n                            {`\r\n                                .dropdown-menu.show {\r\n                                    transform: translate(-15px, 43px) !important; \r\n                                    inset: 2px auto auto 0px !important;\r\n                                }\r\n                                \r\n                            `}\r\n                        </style> */}\r\n                        <Dropdown>\r\n                            <Dropdown.Toggle\r\n                                style={{ marginRight: '10px' }}\r\n                                className=\"btn btn--primary btn--med sign-up-btn\"\r\n                            >\r\n                                Brandon\r\n                            </Dropdown.Toggle>\r\n                            <Dropdown.Menu\r\n                                className=\"dropdown-menu\"\r\n                            // style={{marginRight: '10px'}}\r\n                            >\r\n\r\n                                <Dropdown.Item style={{ marginRight: '10px' }} href=\"/account\">\r\n                                    Account\r\n                                </Dropdown.Item>\r\n\r\n                                <Dropdown.Item href=\"/account/orders\">\r\n                                    My Orders\r\n                                </Dropdown.Item>\r\n\r\n                            </Dropdown.Menu>\r\n                        </Dropdown>\r\n\r\n                        <button\r\n                            style={{ marginRight: '10px' }}\r\n                            className=\"btn btn--primary btn--med sign-up-btn\"\r\n                            onClick={handleLogout}>\r\n                            Logout\r\n                        </button>\r\n\r\n                        {/* <div className=\"dropdown\">\r\n                            <button\r\n                                style={{ marginRight: '10px' }}\r\n                                className=\"btn dropdown-toggle btn--primary btn--med sign-up-btn\"\r\n                                id=\"dropdownMenuButton\"\r\n                                data-toggle=\"dropdown\"\r\n                                aria-haspopup=\"true\"\r\n                                aria-expanded=\"false\"\r\n                            // onClick={() => console.log('dropdown')}\r\n                            >\r\n                                {auth.user.firstName}\r\n                            </button>\r\n                            <div\r\n                                className='dropdown-menu'\r\n                                aria-labelledby=\"dropdownMenuButton\"\r\n                                \r\n                            >\r\n                                <a href=\"/account/orders\" className=\"dropdown-item\">My Orders</a>\r\n                            </div>\r\n                        </div> */}\r\n\r\n                        {/* <button\r\n                            style={{ marginRight: '10px' }}\r\n                            className=\"btn btn--primary btn--med sign-up-btn\"\r\n                            onClick={() => console.log('dropdown')}>\r\n                            {auth.user.firstName}\r\n                        </button> */}\r\n                    </>\r\n            }\r\n\r\n\r\n\r\n            <RegistrationModal\r\n                show={regModal}\r\n                size={'lg'}\r\n                onHide={hideRegModal}\r\n                handleClose={hideRegModal}\r\n            />\r\n\r\n            <LoginModal\r\n                show={loginModal}\r\n                size={'lg'}\r\n                onHide={hideLoginModal}\r\n                handleClose={hideLoginModal}\r\n            />\r\n\r\n        </nav>\r\n    )\r\n}\r\n\r\n// class NavBar extends Component{\r\n\r\n//     state = {clicked: false}\r\n\r\n//     handleClick = () => {\r\n//         this.setState({clicked: !this.state.clicked})\r\n//     }\r\n\r\n//     render() {\r\n//         return(\r\n//             <nav className=\"NavbarItems\">\r\n//                 <div className=\"navbar-logo\">\r\n//                     <a href=\"/\">\r\n//                         <img className=\" navbar-logo-img\" src={ require('../../img/FarmToHomeLogoLong.png').default } alt=\"farm-to-home-logo\" />\r\n//                     </a>\r\n//                 </div>\r\n//                 <div className=\"menu-icon\" onClick={this.handleClick}>\r\n//                     <i className={this.state.clicked ? 'fas fa-times' : 'fas fa-bars'}></i>\r\n//                 </div>\r\n//                 <ul className={this.state.clicked ? 'nav-menu active' : 'nav-menu'}>\r\n//                     {MenuItems.map((item, idx) => {\r\n//                         return(\r\n//                             <li key={idx}>\r\n//                                 <a className={item.cName} href={item.url}>\r\n//                                     {item.title}\r\n//                                 </a>\r\n//                             </li>\r\n//                         )\r\n//                     })}\r\n//                     <li>\r\n//                         <a className=\"nav-links fas fa-shopping-cart cart\" href=\"/cart\"> \r\n//                             <span className=\"cart-badge\">0</span>\r\n\r\n//                         </a>\r\n//                     </li>\r\n//                 </ul>\r\n//                 <div className=\"sign-up-btn\">\r\n//                     <Button>Sign Up</Button>\r\n//                 </div>\r\n//             </nav>\r\n//         )\r\n//     }\r\n// }\r\n\r\nexport default NavBar;","import { useEffect } from 'react';\r\n\r\n// Components\r\nimport Product from '../../components/ProductCard/ProductCard';\r\nimport CategoryMenu from '../../components/CategoryMenu/CategoryMenu';\r\n\r\n// Redux\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getProductsByCat } from '../../redux/actions/productActions';\r\n\r\n\r\nconst FilteredProductScreen = (props) => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const getFilteredProducts = useSelector(state => state.filteredProducts);\r\n    const { products, loading, error } = getFilteredProducts;\r\n\r\n    useEffect(() => {\r\n        const { match } = props;\r\n        dispatch(getProductsByCat(match.params.name));\r\n    }, [props.match.params])\r\n\r\n    return (\r\n        <>\r\n            <CategoryMenu />\r\n            <div className=\"our-products-screen\">\r\n                <div className=\"our-products-screen-products show\">\r\n\r\n                    {\r\n                        loading ? (\r\n                            <h2>Loading...</h2>\r\n                        ) : error ? (\r\n                            <h2>{error}</h2>\r\n                        ) :\r\n                            products.products\r\n                                ? products.products.map((product, idx) =>\r\n                                    <Product key={idx}\r\n                                        productId={product._id}\r\n                                        category={product.category}\r\n                                        name={product.name}\r\n                                        productImage={product.productImage}\r\n                                        price={product.price}\r\n                                        measurement={product.measurement}\r\n                                        description={product.description}\r\n                                        inStock={product.inStock}\r\n                                    />)\r\n                                : <p>something else</p>\r\n                    }\r\n\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default FilteredProductScreen;","import { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport { useEffect } from 'react';\nimport './custom.scss';\nimport './App.css';\n\n// Screens\nimport OurProductsScreen from './views/OurProductsScreen/OurProductsScreen';\nimport CheckoutScreen from './views/CheckoutScreen/CheckoutScreen';\nimport ProductScreen from './views/ProductScreen/ProductScreen';\nimport OrdersScreen from './views/OrdersScreen/OrdersScreen';\nimport HomeScreen from './views/HomeScreen/HomeScreen';\nimport CartScreen from './views/CartScreen/CartScreen';\nimport OrderForm from './views/OrderForm/OrderForm';\n\n// Components\nimport Navbar from './components/Navbar/NavBar';\nimport FilteredProductScreen from './views/FilteredProductScreen/FilteredProductScreen';\n\n// Redux\nimport { useDispatch, useSelector } from 'react-redux';\nimport { isUserLoggedIn } from './redux/actions/userAuth.actions';\nimport { getCartItems } from './redux/actions/cartActions';\n\n\nconst App = () => {\n\n  const dispatch = useDispatch();\n  const auth = useSelector((state) => state.auth);\n  const cart = useSelector((state) => state.cart);\n\n  useEffect(() => {\n    if (!auth.authenticate) {\n      console.log('is user logged in? App');\n      dispatch(isUserLoggedIn());\n    }\n  }, [auth.authenticate]);\n\n  useEffect(() => {\n    if (auth.authenticate) {\n      console.log(\"Getting Cart Items App\");\n      dispatch(getCartItems());\n    }\n  }, [auth.authenticate, cart.updateingCart])\n\n  return (\n    <div className=\"App\">\n      <Router>\n        <Navbar />\n        <main>\n          <Switch>\n            <Route exact path=\"/\" component={HomeScreen} />\n            <Route path=\"/our-products\" component={OurProductsScreen} />\n            <Route path=\"/order-form\" component={OrderForm} />\n            <Route path=\"/cart\" component={CartScreen} />\n            <Route path=\"/checkout\" component={CheckoutScreen} />\n            <Route path=\"/account/orders\" component={OrdersScreen}/>\n            <Route path=\"/category/:name\" component={FilteredProductScreen} />\n            <Route path=\"/product/:id\" component={ProductScreen} />\n          </Switch>\n        </main>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","import 'bootstrap/dist/css/bootstrap.css';\nimport ReactDOM from 'react-dom';\nimport React from 'react';\nimport App from './App';\nimport './index.css';\n\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById('root')\n);\n\n","export default __webpack_public_path__ + \"static/media/dairy-eggs-logo.9fa3d884.png\";","export default __webpack_public_path__ + \"static/media/beef-logo.f193b740.png\";","export default __webpack_public_path__ + \"static/media/pork-logo.2210e317.png\";","export default __webpack_public_path__ + \"static/media/poultry-logo.e34bfc85.png\";","export default __webpack_public_path__ + \"static/media/lamb-logo.8c5d4b21.png\";","export default __webpack_public_path__ + \"static/media/goat-logo.856523f9.png\";","export default __webpack_public_path__ + \"static/media/honey-logo.61b046db.png\";","export default __webpack_public_path__ + \"static/media/express-packs-logo.f7f5ca83.png\";"],"sourceRoot":""}